<?php namespace ProcessWire;
	require_once(__DIR__ . '/DplusoPages.module');

	class DplusoPagesSalesOrder extends DplusoPages implements Module {

		protected $fields = array();

		protected $templates = array(
			'sales-orders' => array(
				'name'   => 'sales-orders',
				'fields' => array()
			),
			'sales-history-orders' => array(
				'name'   => 'sales-history-orders',
				'fields' => array()
			),
			'sales-order-view' => array(
				'name'   => 'sales-order-view',
				'fields' => array()
			),
			'sales-order-edit' => array(
				'name'   => 'sales-order-edit',
				'fields' => array()
			),
			'sales-order-documents' => array(
				'name'   => 'sales-order-documents',
				'fields' => array()
			)
		);

		protected $pages = array(
			'mso' => array(
				'template'       => 'dplus-menu',
				'name'           => 'mso',
				'title'          => 'Sales Orders',
				'summary'        => '',
				'parent'         => '/',
				'dplus_function' => 'mso'
			),
			'sales-orders' => array(
				'template'       => 'dplus-function',
				'name'           => 'sales-orders',
				'title'          => 'Sales Orders',
				'summary'        => 'View / Search through Open Orders',
				'parent'         => '/mso/',
				'dplus_function' => 'mso',
				'pw_template'    => 'sales-orders'
			),
			'sales-order' => array(
				'template'       => 'dplus-function',
				'name'           => 'sales-order',
				'title'          => 'Sales Order',
				'summary'        => 'View Sales Order',
				'parent'         => '/mso/',
				'dplus_function' => 'mso',
				'pw_template'    => 'sales-order-view'
			),
			'sales-order-edit' => array(
				'template'       => 'dplus-function',
				'name'           => 'edit',
				'title'          => 'Edit Sales Order',
				'summary'        => 'Edit Sales Order',
				'parent'         => '/mso/sales-order/',
				'dplus_function' => 'eso',
				'pw_template'    => 'sales-order-edit'
			),
			'sales-order-documents' => array(
				'template'       => 'dplus-function',
				'name'           => 'sales-order-documents',
				'title'          => 'Sales Order Documents',
				'summary'        => 'View Sales Order Documents',
				'parent'         => '/mso/sales-order/',
				'dplus_function' => 'mso',
				'pw_template'    => 'sales-order-documents'
			),
			'sales-history' => array(
				'template'       => 'dplus-function',
				'name'           => 'sales-history',
				'title'          => 'Sales History',
				'summary'        => 'View Sales History Orders',
				'parent'         => '/mso/',
				'dplus_function' => '',
				'pw_template'    => 'sales-history-orders'
			),
		);

		const USERPERM_SALESORDERS_EDIT = 'eso';

		public static function getModuleInfo() {
			return array(
				'title' => 'Dpluso Sales Order Pages',
				'version' => 101,
				'summary' => 'Installs and creates Dpluso Sales Order Pages',
				'singular' => true,
				'autoload' => true,
			);
		}

		public function init_salesorder_hooks() {
			/**
			 * Adds self::can_user_editorder() as User hook
			 * @uses self::can_user_editorder()
			 */
			$this->addHook('User::can_editorder', function($event) {
				$user = $event->object;
				$order = $event->arguments(0);
				$event->return = $this->can_user_editorder($user, $order);
			});

			/**
			 * Adds self::is_user_editingorder() as User hook
			 * @uses self::is_user_editingorder()
			 */
			$this->addHook('User::is_editingorder', function($event) {
				$user = $event->object;
				$order = $event->arguments(0);
				$event->return = $this->is_user_editingorder($user, $order);
			});
		}

		/**
		 * Return if User can edit Sales Order
		 * @param  User       $user  User
		 * @param  SalesOrder $order Sales Order
		 * @return bool               Can User Edit Sales Order?
		 */
		public function can_user_editorder(User $user, SalesOrder $order) {
			$config_orders = $this->wire('modules')->get('SalesOrdersConfig');
			$canedit = false;

			if ($config_orders->allow_salesorderedit) {
				if ($order->is_editable() && $user->has_function(self::USERPERM_SALESORDERS_EDIT)) {
					$canedit = true;
				}
			}
			return $canedit;
		}

		/**
		 * Return if User is editing Sales Order
		 * @param  User       $user  User
		 * @param  SalesOrder $order Sales Order
		 * @return bool              IS User is editing Sales Order?
		 */
		public function is_user_editingorder(User $user, SalesOrder $order) {
			return $order->heldby == $user->loginid;
		}
	}
