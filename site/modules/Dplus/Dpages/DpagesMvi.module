<?php namespace ProcessWire;

use Purl\Url;

/**
 * class DpagesMvi
 *
 * Installs fields, templates, pages, hooks necessary for Mci Pages
 * Adds Hooks for getting URLs to Mci pages
 */
class DpagesMvi extends Dpages implements Module {
	const FIELDS = array(
		'jsoncode' => array(
			'name'  => 'jsoncode',
			'type'  => 'text',
			'label' => 'JSON Datafile Code'
		),
		'is_formattable' => array(
			'name'        => 'is_formattable',
			'type'        => 'checkbox',  // TRUE OR FALSE
			'label'       => 'Is screen formattable?',
			'description' => 'Allow Screen Formatter to be used',
			'notes'       => ""
		),
	);

	const TEMPLATES = array(
		'dplus-menu' => array(
			'name'   => 'dplus-menu',
			'fields' => array('dplus_function', 'summary'),
			'paginated' => false
		),
		'dplus-function' => array(
			'name'   => 'dplus-menu',
			'fields' => array('dplus_function', 'pw_template', 'summary'),
			'paginated' => true
		),
		'vi-function' => array(
			'name'   => 'dplus-menu',
			'fields' => array('title', 'dplus_function', 'pw_template', 'jsoncode', 'is_formattable', 'summary'),
			'paginated' => true
		),
		'vi-vendor' => array(
			'name'   => 'vi-vendor',
			'fields' => array(),
			'paginated' => true
		),
	);

	const PAGES = array(
		'vendor-menu' => array(
			'template'       => 'dplus-menu',
			'name'           => 'mvi',
			'title'          => 'Vendors',
			'summary'        => 'Vendor Menu',
			'parent'         => '/',
			'dplus_function' => 'mvi'
		),
		'vi' => array(
			'template'       => 'dplus-function',
			'name'           => 'vi',
			'title'          => 'Vendor Information',
			'summary'        => 'View Vendor Information',
			'parent'         => '/mvi/',
			'dplus_function' => '',
			'pw_template'    => 'vi-vendor'
		)
	);

	public function init_vipage() {
		$this->addHook('Page::get_vi_vendorURL', function($event) {
			$vendorID = $event->arguments(0);
			$event->return = $this->get_vi_vendorURL($vendorID);
		});

		$this->addHook('Page::get_vi_vendorshipfromURL', function($event) {
			$vendorID   = $event->arguments(0);
			$shipfromID = $event->arguments(1);
			$event->return = $this->get_vi_vendorshipfromURL($vendorID, $shipfromID);
		});
	}

	/**
	 * Returns URL to Vendor Page
	 * @param  string $vendorID Vendor ID
	 * @return string           URL
	 */
	public function get_vi_vendorURL($vendorID) {
		$url = new Url($this->wire('pages')->get('pw_template=vi-vendor')->url);
		$url->query->set('vendorID', $vendorID);
		return $url->getUrl();
	}

	/**
	 * Returns URL to Vendor Shipfrom Page
	 * @param  string $vendorID   Vendor ID
	 * @param  string $shipfromID Vendor Shipfrom ID
	 * @return string             URL
	 */
	public function get_vi_vendorshipfromURL($vendorID, $shipfromID) {
		$url = new Url($this->get_vi_vendorURL($vendorID));
		$url->query->set('shipfromID', $shipfromID);
		return $url->getUrl();
	}

	public static function getModuleInfo() {
		return array(
			'title' => 'Dplus Online Vendor Pages',
			'version' => 101,
			'summary' => 'Installs and creates Dplus Online Vendor Pages',
			'singular' => true,
			'autoload' => true,
		);
	}
}
