<?php namespace ProcessWire;

	use Purl\Url;

/**
 * class DpagesMii
 *
 * Installs fields, templates, pages, hooks necessary for Mii Pages
 * Adds Hooks for getting URLs to Mcii pages
 */
class DpagesMii extends Dpages implements Module {
	const REQUIREMENTS_OPTIONS = array(
		"REQ" => "requirements",
		"AVL" => 'available'
	);

	const FIELDS = array(
		'jsoncode' => array(
			'name'  => 'jsoncode',
			'type'  => 'text',
			'label' => 'JSON Datafile Code'
		),
		'is_formattable' => array(
			'name'        => 'is_formattable',
			'type'        => 'checkbox',  // TRUE OR FALSE
			'label'       => 'Is screen formattable?',
			'description' => 'Allow Screen Formatter to be used',
			'notes'       => ""
		),
	);

	const TEMPLATES = array(
		'ii-function' => array(
			'name'   => 'dplus-menu',
			'fields' => array('title', 'dplus_function', 'pw_template', 'jsoncode', 'is_formattable', 'summary'),
			'paginated' => true
		),
		'ii-item' => array(
			'name'   => 'ii-item',
			'fields' => array(),
		),
		'ii-requirements' => array(
			'name'   => 'ii-requirements',
			'fields' => array(),
		),
		'ii-pricing' => array(
			'name'   => 'ii-pricing',
			'fields' => array(),
		),
		'ii-costing' => array(
			'name'   => 'ii-costing',
			'fields' => array(),
		),
		'ii-activity' => array(
			'name'   => 'ii-activity',
			'fields' => array(),
		),
		'ii-kit' => array(
			'name'   => 'ii-kit',
			'fields' => array(),
		),
		'ii-bom' => array(
			'name'   => 'ii-bom',
			'fields' => array(),
		),
		'ii-where-used' => array(
			'name'   => 'ii-where-used',
			'fields' => array(),
		),
		'ii-lotserial' => array(
			'name'   => 'ii-lotserial',
			'fields' => array(),
		),
		'ii-substitutes' => array(
			'name'   => 'ii-substitutes',
			'fields' => array(),
		),
		'ii-documents' => array(
			'name'   => 'ii-documents',
			'fields' => array(),
		),
		'ii-sales-orders' => array(
			'name'   => 'ii-sales-orders',
			'fields' => array(),
		),
		'ii-sales-history' => array(
			'name'   => 'ii-sales-history',
			'fields' => array(),
		),
		'ii-quotes' => array(
			'name'   => 'ii-quotes',
			'fields' => array(),
		),
		'ii-purchase-orders' => array(
			'name'   => 'ii-purchase-orders',
			'fields' => array(),
		),
		'ii-purchase-history' => array(
			'name'   => 'ii-purchase-history',
			'fields' => array(),
		),
		'ii-item-lookup' => array(
			'name'   => 'ii-item-lookup',
			'fields' => array(),
		)
	);

	const PAGES = array(
		'ii-menu' => array(
			'template'       => 'dplus-menu',
			'name'           => 'mii',
			'title'          => 'Item Information',
			'summary'        => 'Item Information Menu',
			'parent'         => '/',
			'dplus_function' => 'mii'
		),
		'ii' => array(
			'template'       => 'dplus-function',
			'name'           => 'ii',
			'title'          => 'Item Information',
			'summary'        => 'View Item Information',
			'parent'         => '/mii/',
			'dplus_function' => 'ii',
			'pw_template'    => 'ii-item'
		),
		'ii-stock' => array(
			'template'       => 'ii-function',
			'name'           => 'stock',
			'title'          => 'Stock',
			'summary'        => 'View Item Stock',
			'parent'         => '/mii/ii/',
			'dplus_function' => 'ii-sst',
			'pw_template'    => 'ii-stock',
			'jsoncode'       => 'ii-stock_whse',
			'has_print'      => true
		),
		'ii-requirements' => array(
			'template'       => 'ii-function',
			'name'           => 'requirements',
			'title'          => 'Requirements',
			'summary'        => 'View Item Requirements',
			'parent'         => '/mii/ii/',
			'dplus_function' => 'ii-req',
			'pw_template'    => 'ii-requirements',
			'jsoncode'       => 'ii-requirements',
			'has_print'      => true
		),
		'ii-pricing' => array(
			'template'       => 'ii-function',
			'name'           => 'pricing',
			'title'          => 'Pricing',
			'summary'        => 'View Item Pricing',
			'parent'         => '/mii/ii/',
			'dplus_function' => 'ii-prc',
			'pw_template'    => 'ii-pricing',
			'has_print'      => true,
			'jsoncode'       => 'ii-pricing'
		),
		'ii-costing' => array(
			'template'       => 'ii-function',
			'name'           => 'costing',
			'title'          => 'Costing',
			'summary'        => 'View Item Costing',
			'parent'         => '/mii/ii/',
			'dplus_function' => 'ii-cst',
			'pw_template'    => 'ii-costing',
			'has_print'      => true,
			'jsoncode'       => 'ii-costing'
		),
		'ii-usage' => array(
			'template'       => 'ii-function',
			'name'           => 'usage',
			'title'          => 'Usage',
			'summary'        => 'View Item Usage',
			'parent'         => '/mii/ii/',
			'dplus_function' => 'ii-usg',
			'pw_template'    => 'ii-usage',
			'has_print'      => true,
			'jsoncode'       => 'ii-usage'
		),
		'ii-activity' => array(
			'template'       => 'ii-function',
			'name'           => 'activity',
			'title'          => 'Activity',
			'summary'        => 'View Item Activity',
			'parent'         => '/mii/ii/',
			'dplus_function' => 'ii-act',
			'pw_template'    => 'ii-activity',
			'has_print'      => true,
			'jsoncode'       => 'ii-activity'
		),
		'ii-components' => array(
			'template'       => 'ii-function',
			'name'           => 'components',
			'title'          => 'Components',
			'summary'        => 'View Item Components',
			'parent'         => '/mii/ii/',
			'dplus_function' => 'ii-bom',
			'pw_template'    => 'ii-components',
			'has_print'      => true,
			'jsoncode'       => 'ii-components'
		),
		'ii-kit' => array(
			'template'       => 'ii-function',
			'name'           => 'kit',
			'title'          => 'Kit',
			'summary'        => 'View Item Kit',
			'parent'         => '/mii/ii/',
			'dplus_function' => 'ii-kit',
			'pw_template'    => 'ii-kit',
			'has_print'      => true,
			'jsoncode'       => 'ii-components'
		),
		'ii-bom' => array(
			'template'       => 'ii-function',
			'name'           => 'bom',
			'title'          => 'BOM',
			'summary'        => 'View Item BOM',
			'parent'         => '/mii/ii/',
			'dplus_function' => 'ii-bom',
			'pw_template'    => 'ii-bom',
			'has_print'      => true,
			'jsoncode'       => 'ii-components'
		),
		'ii-where-used' => array(
			'template'       => 'ii-function',
			'name'           => 'where-used',
			'title'          => 'Where Used',
			'summary'        => 'View Item Where Used',
			'parent'         => '/mii/ii/',
			'dplus_function' => 'ii-use',
			'pw_template'    => 'ii-where-used',
			'has_print'      => true,
			'jsoncode'       => 'ii-whereused'
		),
		'ii-lotserial' => array(
			'template'       => 'ii-function',
			'name'           => 'lotserial',
			'title'          => 'Lot Serial',
			'summary'        => 'View Item Lot Serial',
			'parent'         => '/mii/ii/',
			'dplus_function' => 'ii-lot',
			'pw_template'    => 'ii-lotserial',
			'has_print'      => true,
			'jsoncode'       => 'ii-lotserial'
		),
		'ii-substitutes' => array(
			'template'       => 'ii-function',
			'name'           => 'substitutes',
			'title'          => 'Substitutes',
			'summary'        => 'View Item Substitutes',
			'parent'         => '/mii/ii/',
			'dplus_function' => 'ii-sub',
			'pw_template'    => 'ii-substitutes',
			'has_print'      => true,
			'jsoncode'       => 'ii-substitutes'
		),
		'ii-documents' => array(
			'template'       => 'ii-function',
			'name'           => 'documents',
			'title'          => 'Documents',
			'summary'        => 'View Item Substitutes',
			'parent'         => '/mii/ii/',
			'dplus_function' => 'ii-doc',
			'pw_template'    => 'ii-documents',
			'has_print'      => true,
			'jsoncode'       => 'ii-documents'
		),
		'ii-sales-orders' => array(
			'template'       => 'ii-function',
			'name'           => 'sales-orders',
			'title'          => 'Sales Orders',
			'summary'        => 'View Item Sales Orders',
			'parent'         => '/mii/ii/',
			'dplus_function' => 'ii-sor',
			'pw_template'    => 'ii-sales-orders',
			'has_print'      => true,
			'jsoncode'       => 'ii-sales-orders'
		),
		'ii-sales-history' => array(
			'template'       => 'ii-function',
			'name'           => 'sales-history',
			'title'          => 'Sales History',
			'summary'        => 'View Item Sales History',
			'parent'         => '/mii/ii/',
			'dplus_function' => 'ii-sht',
			'pw_template'    => 'ii-sales-history',
			'has_print'      => true,
			'jsoncode'       => 'ii-sales-history'
		),
		'ii-quotes' => array(
			'template'       => 'ii-function',
			'name'           => 'quotes',
			'title'          => 'Quotes',
			'summary'        => 'View Item Quotes',
			'parent'         => '/mii/ii/',
			'dplus_function' => 'ii-qte',
			'pw_template'    => 'ii-quotes',
			'has_print'      => true,
			'jsoncode'       => 'ii-quotes'
		),
		'ii-purchase-orders' => array(
			'template'       => 'ii-function',
			'name'           => 'purchase-orders',
			'title'          => 'Purchase Orders',
			'summary'        => 'View Item Purchase Orders',
			'parent'         => '/mii/ii/',
			'dplus_function' => 'ii-pur',
			'pw_template'    => 'ii-purchase-orders',
			'has_print'      => true,
			'jsoncode'       => 'ii-purchase-orders'
		),
		'ii-purchase-history' => array(
			'template'       => 'ii-function',
			'name'           => 'purchase-history',
			'title'          => 'Purchase History',
			'summary'        => 'View Item Purchase History',
			'parent'         => '/mii/ii/',
			'dplus_function' => 'ii-pht',
			'pw_template'    => 'ii-purchase-history',
			'has_print'      => true,
			'jsoncode'       => 'ii-purchase-history'
		),
		'ii-item-lookup'     => array(
			'template'       => 'dplus-json',
			'name'           => 'Item Lookup',
			'title'          => 'Item Lookup',
			'summary'        => 'Look up Items',
			'parent'         => '/mii/',
			'dplus_function' => '',
			'pw_template'    => 'ii-item-lookup',
		)
	);

	public function init_iipage() {
		$this->addHook('Page(pw_template=ii-item)::children_user_allowed', function($event) {
			$user = $this->wire('user');
			$event->return = $this->get_ii_user_allowed_functions($user);
		});

		$this->addHook('Page::url_itemID', function($event) {
			$p = $event->object;
			$itemID   = $event->arguments(0);
			$url = new Url($p->url);
			$url->query->set('itemID', $itemID);
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_redirURL', function($event) {
			$p = $event->object;
			$event->return = $p->parent('template=dplus-menu')->child('template=redir')->url;
		});

		$this->addHook('Page::get_itempageURL', function($event) {
			$itemID = $event->arguments(0);
			$event->return = $this->get_ii_itemURL($itemID);
		});

		$this->addHook('Page::get_itemURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$url = new Url($this->get_ii_loaditemURL($itemID));
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_itemstockURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ii-stock');
			$url->query->set('itemID', $itemID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_itemrequirementsURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ii-requirements');
			$url->query->set('itemID', $itemID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_itempricingURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$custID = $event->arguments(1);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ii-pricing');
			$url->query->set('itemID', $itemID);
			$url->query->set('custID', $custID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_itemcostingURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ii-costing');
			$url->query->set('itemID', $itemID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_itemusageURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ii-usage');
			$url->query->set('itemID', $itemID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_itemactivityURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ii-activity');
			$url->query->set('itemID', $itemID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_itemcomponentsURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ii-components');
			$url->query->set('itemID', $itemID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_itemkitURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ii-kit');
			$url->query->set('itemID', $itemID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_itembomURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ii-bom');
			$url->query->set('itemID', $itemID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_itemwhereusedURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ii-where-used');
			$url->query->set('itemID', $itemID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_itemlotserialURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ii-lotserial');
			$url->query->set('itemID', $itemID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_itemgeneralURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ii-general');
			$url->query->set('itemID', $itemID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_itemsubstitutesURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ii-substitutes');
			$url->query->set('itemID', $itemID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_itemdocumentsURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ii-documents');
			$url->query->set('itemID', $itemID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_itemsalesordersURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ii-sales-orders');
			$url->query->set('itemID', $itemID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_itemsaleshistoryURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$date = $event->arguments(1);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ii-sales-history');
			$url->query->set('itemID', $itemID);
			$url->query->set('date', $date);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_itemquotesURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$date = $event->arguments(1);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ii-quotes');
			$url->query->set('itemID', $itemID);
			$url->query->set('date', $date);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_itempurchaseordersURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$date = $event->arguments(1);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ii-purchase-orders');
			$url->query->set('itemID', $itemID);
			$url->query->set('date', $date);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_itempurchasehistoryURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$date = $event->arguments(1);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ii-purchase-history');
			$url->query->set('itemID', $itemID);
			$url->query->set('date', $date);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_backURL', function($event) {
			$p = $event->object;
			$itemID = $p->fullURL->query->get('itemID');
			$url = new Url($this->wire('pages')->get('pw_template=ii-item')->url);
			$url->query->set('itemID', $itemID);
			$event->return = $url->getUrl();
		});
	}

	public function get_ii_user_allowed_functions(User $user) {
		$p = $this->wire('pages')->get('pw_template=ii-item');
		$dplus_functions = array_unique($p->children()->explode('dplus_function'));
		$filtered_functions = $user->filter_functions($dplus_functions);
		return $p->children('dplus_function='.implode('|', $filtered_functions));
	}

	/**
	 * Returns URL to II item page
	 * @param  string $itemID Item ID
	 * @return string
	 */
	public function get_ii_itemURL($itemID) {
		$url = new Url($this->wire('pages')->get('pw_template=ii-item')->url);
		$url->query->set('itemID', $itemID);
		return $url->getUrl();
	}

	/**
	 * Returns URL to II item page
	 * @param  string $itemID Item ID
	 * @return string
	 */
	public function get_ii_loaditemURL($itemID) {
		$url = new Url($this->wire('pages')->get('template=redir, redir_file=ii')->url);
		$url->query->set('action','ii-item');
		$url->query->set('itemID', $itemID);
		return $url->getUrl();
	}


	public static function getModuleInfo() {
		return array(
			'title' => 'Dplus Online Item Information Pages',
			'version' => 101,
			'summary' => 'Installs and creates Dplus Online Item Information  Pages',
			'singular' => true,
			'autoload' => true,
		);
	}

	public function get_requirementsoptions() {
		return self::REQUIREMENTS_OPTIONS;
	}
}
