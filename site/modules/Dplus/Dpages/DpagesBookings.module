<?php namespace ProcessWire;

use Purl\Url;
use DateTime;

/**
 * class DpagesBookings
 *
 * Installs fields, templates, pages, hooks necessary for Bookings Pages
 * Adds Hooks for getting URLs to booking pages
 */
class DpagesBookings extends Dpages implements Module {
	const FIELDS = array();

	const TEMPLATES = array(
		'bookings' => array(
			'name'   => 'bookings',
			'fields' => array(),
		),
		'bookings-customer' => array(
			'name'   => 'bookings-customer',
			'fields' => array(),
		),
		'bookings-day' => array(
			'name'   => 'bookings-day',
			'fields' => array(),
		),
	);

	const PAGES = array(
		'bookings-menu' => array(
			'template'       => 'dplus-menu',
			'name'           => 'sobook',
			'title'          => 'Bookings',
			'summary'        => 'Bookings Menu',
			'parent'         => '/',
			'dplus_function' => 'sobook'
		),
		'bookings' => array(
			'template'       => 'dplus-function',
			'name'           => 'bookings',
			'title'          => 'Bookings',
			'summary'        => 'View Bookings',
			'parent'         => '/sobook/',
			'dplus_function' => 'lbkgr',
			'pw_template'    => 'bookings'
		),
		'bookings-day' => array(
			'template'       => 'dplus-function',
			'name'           => 'day',
			'title'          => 'Day',
			'summary'        => 'View Bookings for Day',
			'parent'         => '/sobook/bookings/',
			'dplus_function' => 'bkdy',
			'pw_template'    => 'bookings-day'
		),
		'bookings-customer' => array(
			'template'       => 'dplus-function',
			'name'           => 'customer',
			'title'          => 'Customer Bookings',
			'summary'        => 'View Customer Bookings',
			'parent'         => '/sobook/bookings/',
			'dplus_function' => 'lbkgc',
			'pw_template'    => 'bookings-customer'
		),
	);


	public function init_bookingspage() {
		$this->addHook('Page::get_bookingsURL', function($event) {
			$page = $event->object;

			// if ($page->pw_template == 'bookings-customer') {
			// 	$event->return = $this->get_bookings_customerURL($page->custID, $page->shiptoID) ;
			// } else {
			// 	$event->return = $this->get_bookingsURL();
			// }
			$event->return = $this->get_bookingsURL();
		});

		$this->addHook('Page::get_bookings_dayURL', function($event) {
			$page = $event->object;
			$date = $event->arguments(0);
			$url = new Url($this->get_bookings_dayURL($date));

			if ($page->pw_template == 'bookings-customer') {
				$url->query->set('custID', $page->custID);

				if ($page->has('shiptoID')) {
					$url->query->set('shiptoID', $page->shiptoID);
				}
			}
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_bookings_monthURL', function($event) {
			$page = $event->object;
			$date = $event->arguments(0);

			if ($page->pw_template == 'bookings-customer') {
				$url = $this->get_bookings_monthURL($date, $page->custID, $page->shiptoID);
			} else {
				$url = $this->get_bookings_monthURL($date);
			}
			$event->return = $url;
		});

		$this->addHook('Page::get_bookings_day_orderURL', function($event) {
			$page = $event->object;
			$date = $event->arguments(0);
			$ordn = $event->arguments(1);

			$url = new Url($this->get_bookings_day_orderURL($date, $ordn));

			if ($page->has('custID')) {
				$url->query->set('custID', $page->custID);

				if ($page->has('shiptoID')) {
					$url->query->set('shiptoID', $page->shiptoID);
				}
			}
			$event->return = $url->getUrl();
		});


		$this->addHook('Page::get_bookings_customerURL', function($event) {
			$custID   = $event->arguments(0);
			$shiptoID = $event->arguments(1);
			$event->return = $this->get_bookings_customerURL($custID, $shiptoID);
		});

		$this->addHook('Page::get_ci_customerURL', function($event) {
			$custID   = $event->arguments(0);
			$event->return = $this->wire('modules')->get('DpagesMci')->get_ci_customerURL($custID);
		});

		$this->addHook('Page::get_ci_customershiptoURL', function($event) {
			$custID   = $event->arguments(0);
			$shiptoID = $event->arguments(1);
			$event->return = $this->wire('modules')->get('DpagesMci')->get_ci_customershiptoURL($custID, $shiptoID);
		});

		$this->addHook('Page::get_viewsalesorderURL', function($event) {
			$ordn   = $event->arguments(0);
			$event->return = $this->wire('modules')->get('DpagesMso')->get_salesorder_viewURL($ordn);
		});

		$this->addHook('Page::ii_itemURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$event->return = $this->wire('modules')->get('DpagesMii')->get_ii_itemURL($itemID);
		});
	}

	/**
	 * Returns URL to Bookings Page
	 * @return string
	 */
	public function get_bookingsURL() {
		 return $this->wire('pages')->get('pw_template=bookings')->url;
	}

	/**
	 * Returns URL to bookings Day Page
	 * @param  string $date Booking Date
	 * @return string
	 */
	public function get_bookings_dayURL($date) {
		$url = new Url($this->wire('pages')->get('pw_template=bookings-day')->url);
		$url->query->set('date', $date);
		return $url->getUrl();
	}

	/**
	 * Returns URL to Bookings Month
	 * NOTE: If custID and/or shiptoID provided will go to the Customer page
	 * @param  string $date     Booking Date
	 * @param  string $custID   Customer ID
	 * @param  string $shiptoID Customer Shipto ID
	 * @return string
	 */
	public function get_bookings_monthURL($date, $custID = '', $shiptoID = '') {
		$date_from    = (new DateTime($date))->modify('first day of')->format('m/d/Y');
		$date_through = (new DateTime($date))->modify('last day of')->format('m/d/Y');

		if ($custID) {
			$url = new Url($this->wire('pages')->get('pw_template=bookings-customer')->url);
			$url->query->set('custID', $custID);

			if ($shiptoID) {
				$url->query->set('shiptoID', $shiptoID);
			}
		} else {
			$url = new Url($this->wire('pages')->get('pw_template=bookings')->url);
		}

		$url->query->set('bookdate', "$date_from|$date_through");
		return $url->getUrl();
	}

	/**
	 * Returns URL to Booking Day Sales Order
	 * @param  string $date Booking Date
	 * @param  string $ordn Sales Order #
	 * @return string
	 */
	public function get_bookings_day_orderURL($date, $ordn) {
		$url = new Url($this->wire('pages')->get('pw_template=bookings-day')->url);
		$url->query->set('date', $date);
		$url->query->set('ordn', $ordn);
		return $url->getUrl();
	}

	/**
	 * Returns URL to Customer bookings Page
	 * @param  string $custID   Customer ID
	 * @param  string $shiptoID Customer Shipto ID
	 * @return string
	 */
	public function get_bookings_customerURL($custID, $shiptoID = '') {
		$url = new Url($this->wire('pages')->get('pw_template=bookings-customer')->url);
		$url->query->set('custID', $custID);
		$url->query->set('shiptoID', $shiptoID);
		return $url->getUrl();
	}

	public static function getModuleInfo() {
		return array(
			'title' => 'Dplus Online Bookings Pages',
			'version' => 101,
			'summary' => 'Installs and creates Dplus Online Bookings Pages',
			'singular' => true,
			'autoload' => true,
		);
	}
}
