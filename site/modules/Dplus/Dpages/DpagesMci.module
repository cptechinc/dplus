<?php namespace ProcessWire;

use Purl\Url;

/**
 * class DpagesMci
 *
 * Installs fields, templates, pages, hooks necessary for Mci Pages
 * Adds Hooks for getting URLs to Mci pages
 */
class DpagesMci extends Dpages implements Module {
	const FIELDS = array(
		'jsoncode' => array(
			'name'  => 'jsoncode',
			'type'  => 'text',
			'label' => 'JSON Datafile Code'
		),
		'is_formattable' => array(
			'name'        => 'is_formattable',
			'type'        => 'checkbox',  // TRUE OR FALSE
			'label'       => 'Is screen formattable?',
			'description' => 'Allow Screen Formatter to be used',
			'notes'       => ""
		),
	);

	const TEMPLATES = array(
		'ci-function' => array(
			'name'   => 'dplus-menu',
			'fields' => array('title', 'summary', 'dplus_function', 'dplus_permission', 'pw_template', 'jsoncode', 'is_formattable'),
			'paginated' => true
		),
		'ci-customer' => array(
			'name'   => 'ci-customer',
			'fields' => array(),
		),
		'ci-pricing' => array(
			'name'   => 'ci-pricing',
			'fields' => array(),
		),
		'ci-shipto' => array(
			'name'   => 'ci-shipto',
			'fields' => array(),
		),
		'ci-contacts' => array(
			'name'   => 'ci-contacts',
			'fields' => array(),
		),
		'ci-contact' => array(
			'name'   => 'ci-contact',
			'fields' => array(),
		),
		'ci-sales-orders' => array(
			'name'   => 'ci-sales-orders',
			'fields' => array(),
		),
		'ci-sales-history' => array(
			'name'   => 'ci-sales-history',
			'fields' => array(),
		),
		'ci-purchase-orders' => array(
			'name'   => 'ci-purchase-orders',
			'fields' => array(),
		),
		'ci-quotes' => array(
			'name'   => 'ci-quotes',
			'fields' => array(),
		),
		'ci-open-invoices' => array(
			'name'   => 'ci-open-invoices',
			'fields' => array(),
		),
		'ci-payments' => array(
			'name'   => 'ci-payments',
			'fields' => array(),
		),
		'ci-credit' => array(
			'name'   => 'ci-credit',
			'fields' => array(),
		),
		'ci-standing-orders' => array(
			'name'   => 'ci-standing-orders',
			'fields' => array(),
		),
		'ci-stock' => array(
			'name'   => 'ci-stock',
			'fields' => array(),
		),
		'ci-notes' => array(
			'name'   => 'ci-notes',
			'fields' => array(),
		),
		'ci-documents' => array(
			'name'   => 'ci-documents',
			'fields' => array(),
		),
		'ci-phonebook' => array(
			'name'   => 'ci-phonebook',
			'fields' => array(),
		),
		'ci-customer-phonebook' => array(
			'name'   => 'ci-customer-phonebook',
			'fields' => array(),
		),
		'ci-activity' => array(
			'name'   => 'ci-activity',
			'fields' => array(),
		),
		'mci-lookup' => array(
			'name'   => 'mci-lookup',
			'fields' => array(),
		),
		'ci-json' => array(
			'name'   => 'ci-json',
			'fields' => array(),
		),
	);

	const PAGES = array(
		'customer-menu' => array(
			'template'       => 'dplus-menu',
			'name'           => 'mci',
			'title'          => 'Customers',
			'summary'        => 'Customer Menu',
			'parent'         => '/',
			'dplus_function' => 'mci'
		),
		'ci-json' => array(
			'template'       => 'dplus-json',
			'name'           => 'ci-json',
			'title'          => 'CI JSON',
			'summary'        => 'JSON API for CI',
			'parent'         => '/mci/',
			'dplus_function' => '',
			'pw_template'    => 'ci-json'
		),
		'ci-admin' => array(
			'template'       => 'dplus-menu',
			'name'           => 'admin',
			'title'          => 'CI Administration',
			'summary'        => 'Customer Information Administration',
			'parent'         => '/mci/',
			'dplus_function' => 'ciadmn'
		),
		'mci-lookup' => array(
			'template'       => 'dplus-function',
			'name'           => 'lookup',
			'title'          => 'Customer Lookup',
			'summary'        => 'Lookup Customers',
			'parent'         => '/mci/',
			'dplus_function' => '',
			'pw_template'    => 'mci-lookup'
		),
		'ci' => array(
			'template'       => 'dplus-function',
			'name'           => 'ci',
			'title'          => 'Customer Information',
			'summary'        => 'View Customer Information',
			'parent'         => '/mci/',
			'dplus_function' => 'ci',
			'pw_template'    => 'ci-customer'
		),
		'ci-phonebook' => array(
			'template'         => 'dplus-function',
			'name'             => 'phonebook',
			'title'            => 'Phonebook',
			'summary'          => 'Search through customers by Phonebook',
			'parent'           => '/mci/',
			'dplus_function'   => '',
			'dplus_permission' => 'mci',
			'pw_template'      => 'ci-phonebook'
		),
		'ci-customer-phonebook' => array(
			'template'       => 'dplus-function',
			'name'           => 'phonebook',
			'title'          => 'Phonebook',
			'summary'        => 'View Customer Phonebook',
			'parent'         => '/mci/ci/',
			'dplus_function' => 'ci-gen',
			'pw_template'    => 'ci-customer-phonebook'
		),
		'ci-shipto' => array(
			'template'       => 'dplus-function',
			'name'           => 'shiptos',
			'title'          => 'Ship-tos',
			'summary'        => 'View Customer Ship-tos',
			'parent'         => '/mci/ci/',
			'dplus_function' => 'ci-shp',
			'pw_template'    => 'ci-shipto',
			'jsoncode'		 => 'ci-shipto'
		),
		'ci-contacts' => array(
			'template'       => 'ci-function',
			'name'           => 'contacts',
			'title'          => 'Contacts',
			'summary'        => 'View Customer Contacts',
			'parent'         => '/mci/ci/',
			'dplus_function' => 'ci-gen',
			'pw_template'    => 'ci-contacts',
			'jsoncode'       => 'ci-contacts'
		),
		'ci-contact' => array(
			'template'       => 'dplus-function',
			'name'           => 'contact',
			'title'          => 'Contact',
			'summary'        => 'View Customer Contact',
			'parent'         => '/mci/ci/contacts/',
			'dplus_function' => '',
			'pw_template'    => 'ci-contact',
			'jsoncode'       => ''
		),
		'ci-contact-edit' => array(
			'template'       => 'dplus-function',
			'name'           => 'contact-edit',
			'title'          => 'Edit Contact',
			'summary'        => 'Edit Customer Contact',
			'parent'         => '/mci/ci/contacts/',
			'dplus_function' => '',
			'pw_template'    => 'ci-contact-edit',
			'jsoncode'       => ''
		),
		'ci-pricing' => array(
			'template'       => 'ci-function',
			'name'           => 'pricing',
			'title'          => 'Pricing',
			'summary'        => 'View Customer Pricing',
			'parent'         => '/mci/ci/',
			'dplus_function' => 'ci-prc',
			'pw_template'    => 'ci-pricing',
			'jsoncode'       => 'ci-pricing'
		),
		'ci-sales-orders' => array(
			'template'       => 'ci-function',
			'name'           => 'sales-orders',
			'title'          => 'Sales Orders',
			'summary'        => 'View Customer Sales Orders',
			'parent'         => '/mci/ci/',
			'dplus_function' => 'ci-sor',
			'pw_template'    => 'ci-sales-orders',
			'jsoncode'		 => 'ci-sales-orders'
		),
		'ci-sales-history' => array(
			'template'       => 'ci-function',
			'name'           => 'sales-history',
			'title'          => 'Sales History',
			'summary'        => 'View Customer Sales History',
			'parent'         => '/mci/ci/',
			'dplus_function' => 'ci-sht',
			'pw_template'    => 'ci-sales-history',
			'jsoncode'		 => 'ci-sales-history'
		),
		'ci-customer-po' => array(
			'template'       => 'ci-function',
			'name'           => 'customer-po',
			'title'          => 'Cust POs',
			'summary'        => 'View Customer PO',
			'parent'         => '/mci/ci/',
			'dplus_function' => 'ci-cpo',
			'pw_template'    => 'ci-customer-po',
			'jsoncode'       => 'ci-purchaseorders'
		),
		'ci-quotes' => array(
			'template'       => 'ci-function',
			'name'           => 'quotes',
			'title'          => 'Quotes',
			'summary'        => 'View Customer Quotes',
			'parent'         => '/mci/ci/',
			'dplus_function' => 'ci-qte',
			'pw_template'    => 'ci-quotes',
			'jsoncode'		 => 'ci-quotes'
		),
		'ci-open-invoices' => array(
			'template'       => 'ci-function',
			'name'           => 'open-invoices',
			'title'          => 'Open Invoices',
			'summary'        => 'View Customer Open Invoices',
			'parent'         => '/mci/ci/',
			'dplus_function' => 'ci-inv',
			'pw_template'    => 'ci-open-invoices',
			'jsoncode'		 => 'ci-openinvoices'
		),
		'ci-payments' => array(
			'template'       => 'ci-function',
			'name'           => 'payments',
			'title'          => 'Payments',
			'summary'        => 'View Customer Payments',
			'parent'         => '/mci/ci/',
			'dplus_function' => 'ci-pay',
			'pw_template'    => 'ci-payments',
			'jsoncode'		 => 'ci-payments'
		),
		'ci-credit' => array(
			'template'       => 'ci-function',
			'name'           => 'credit',
			'title'          => 'Credit',
			'summary'        => 'View Customer Credit',
			'parent'         => '/mci/ci/',
			'dplus_function' => 'ci-crd',
			'pw_template'    => 'ci-credit',
			'jsoncode'       => 'ci-credit'
		),
		'ci-standing-orders' => array(
			'template'       => 'ci-function',
			'name'           => 'standing-orders',
			'title'          => 'Standing Orders',
			'summary'        => 'View Customer Standing Orders',
			'parent'         => '/mci/ci/',
			'dplus_function' => 'ci-sto',
			'pw_template'    => 'ci-standing-orders',
			'jsoncode'       => 'ci-standingorders'
		),
		'ci-stock' => array(
			'template'       => 'ci-function',
			'name'           => 'stock',
			'title'          => 'Stock',
			'summary'        => 'View Customer Stock',
			'parent'         => '/mci/ci/',
			'dplus_function' => 'ci-sst',
			'pw_template'    => 'ci-stock',
			'jsoncode'       => 'ci-stock'
		),
		'ci-notes' => array(
			'template'       => 'ci-function',
			'name'           => 'notes',
			'title'          => 'Notes',
			'summary'        => 'View Customer Notes',
			'parent'         => '/mci/ci/',
			'dplus_function' => 'ci-nte',
			'pw_template'    => 'ci-notes',
			'jsoncode'       => 'ci-notes'
		),
		'ci-documents' => array(
			'template'       => 'ci-function',
			'name'           => 'documents',
			'title'          => 'Documents',
			'summary'        => 'View Customer Documents',
			'parent'         => '/mci/ci/',
			'dplus_function' => 'ci-doc',
			'pw_template'    => 'ci-documents',
			'jsoncode'       => 'ci-documents'
		),
		'ci-activity' => array(
			'template'         => 'ci-function',
			'name'             => 'activity',
			'title'            => 'Activity',
			'summary'          => 'View Customer Activity',
			'parent'           => '/mci/ci/',
			'dplus_permission' => '',
			'pw_template'      => 'ci-activity',
			'jsoncode'         => ''
		),
	);

	public function init_phonebookpage() {
		$this->addHook('Page::get_customerURL', function($event) {
			$custID = $event->arguments(0);
			$event->return = $this->get_ci_customerURL($custID);
		});

		$this->addHook('Page::get_customershiptoURL', function($event) {
			$custID   = $event->arguments(0);
			$shiptoID = $event->arguments(1);
			$event->return = $this->get_ci_customershiptoURL($custID, $shiptoID);
		});
	}

	public function init_cipage() {
		$this->addHook('Page(pw_template=ci-customer)::children_user_allowed', function($event) {
			$user = $this->wire('user');
			$event->return = $this->get_ci_user_allowed_functions($user);
		});

		$this->addHook('Page::url_custID', function($event) {
			$p = $event->object;
			$custID   = $event->arguments(0);
			$url = new Url($p->url);
			$url->query->set('custID', $custID);
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::url_custcontact', function($event) {
			$p = $event->object;
			$url = new Url($this->wire('pages')->get('pw_template=ci-contact')->url);
			$custID = $event->arguments(0);
			$url->query->set('custID', $custID);
			$shiptoID = $event->arguments(1);
			if ($shiptoID) {
				$url->query->set('shipID', $shiptoID);
			}
			$contactID = $event->arguments(2);
			$url->query->set('contactID', $contactID);
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::url_editcustcontact', function($event) {
			$p = $event->object;
			$url = new Url($this->wire('pages')->get('pw_template=ci-contact-edit')->url);
			$custID = $event->arguments(0);
			$url->query->set('custID', $custID);
			$shiptoID = $event->arguments(1);
			if ($shiptoID) {
				$url->query->set('shipID', $shiptoID);
			}
			$contactID = $event->arguments(2);
			$url->query->set('contactID', $contactID);
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_redirURL', function($event) {
			$p = $event->object;
			$event->return = $p->parent('template=dplus-menu')->child('template=redir')->url;
		});

		$this->addHook('Page::get_backURL', function($event) {
			$p = $event->object;
			$custID   = $p->fullURL->query->get('custID');
			$url = new Url($this->wire('pages')->get('pw_template=ci-customer')->url);
			$url->query->set('custID', $custID);

			if ($p->fullURL->query->has('shiptoID') && $p->pw_template != 'ci-shipto') {
				$url->path = $this->wire('pages')->get('pw_template=ci-shipto')->url;
				$shiptoID = $p->fullURL->query->get('shiptoID');
				$url->query->set('shiptoID', $shiptoID);
			}
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_customerURL', function($event) {
			$p = $event->object;
			$custID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ci-customer');
			$url->query->set('custID', $custID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_customerpricingURL', function($event) {
			$p = $event->object;
			$custID = $event->arguments(0);
			$itemID = $event->arguments(1);
			$url = new Url($this->wire('pages')->get('template=redir, redir_file=ci')->url);
			$url->query->set('action','ci-pricing');
			$url->query->set('custID', $custID);
			$url->query->set('itemID', $itemID);
			$event->return = $url->getUrl();
		});

		$this->addHook('Page(pw_template=ci-pricing)::get_itemURL', function($event) {
			$p = $event->object;
			$itemID = $event->arguments(0);
			$url = new Url($p->fullURL->getUrl());
			$url->query->remove('q');
			$url->query->set('itemID', $itemID);
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_customershiptoURL', function($event) {
			$custID = $event->arguments(0);
			$shiptoID = $event->arguments(1);
			$url = new Url($this->wire('pages')->get('pw_template=ci-shipto')->url);
			$url->query->set('custID', $custID);
			$url->query->set('shiptoID', $shiptoID);
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_customershiptosURL', function($event) {
			$p = $event->object;
			$custID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ci-shiptos');
			$url->query->set('custID', $custID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_customercontactsURL', function($event) {
			$p = $event->object;
			$custID = $event->arguments(0);
			$shiptoID = $event->arguments(1);

			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ci-contacts');
			$url->query->set('custID', $custID);

			if ($shiptoID) {
				$url->query->set('shiptoID', $shiptoID);
			}
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_customersalesordersURL', function($event) {
			$p = $event->object;
			$custID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ci-sales-orders');
			$url->query->set('custID', $custID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_customersaleshistoryURL', function($event) {
			$p = $event->object;
			$custID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ci-sales-history');
			$url->query->set('custID', $custID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_customerpurchaseordersURL', function($event) {
			$p = $event->object;
			$custID = $event->arguments(0);
			$custpo = $event->arguments(1);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ci-purchase-orders');
			$url->query->set('custID', $custID);
			$url->query->set('custpo', $custpo);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_customerquotesURL', function($event) {
			$p = $event->object;
			$custID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ci-quotes');
			$url->query->set('custID', $custID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_customeropeninvoicesURL', function($event) {
			$p = $event->object;
			$custID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ci-open-invoices');
			$url->query->set('custID', $custID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_customerpaymentsURL', function($event) {
			$p = $event->object;
			$custID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ci-payments');
			$url->query->set('custID', $custID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_customercreditURL', function($event) {
			$p = $event->object;
			$custID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ci-credit');
			$url->query->set('custID', $custID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_customerstandingordersURL', function($event) {
			$p = $event->object;
			$custID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ci-standing-orders');
			$url->query->set('custID', $custID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_customerstockURL', function($event) {
			$p = $event->object;
			$custID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ci-stock');
			$url->query->set('custID', $custID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_customernotesURL', function($event) {
			$p = $event->object;
			$custID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ci-notes');
			$url->query->set('custID', $custID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_customerdocumentsURL', function($event) {
			$p = $event->object;
			$custID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ci-documents');
			$url->query->set('custID', $custID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_customerphonebookURL', function($event) {
			$p = $event->object;
			$custID = $event->arguments(0);
			$url = new Url($p->parent('template=dplus-menu')->child('template=redir')->url);
			$url->query->set('action','ci-phonebook');
			$url->query->set('custID', $custID);
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});
	}

	public function init_customer_hooks() {
		$this->init_cipage();

		/**
		 * Adds hook for getting Sales Order List URL
		 */
		$this->addHook('Page::cust_salesordersURL', function($event) {
			$custID = $event->arguments(0);
			$url = new Url($this->wire('pages')->get('pw_template=sales-orders-customer')->url);
			$url->query->set('custID', $custID);
			$event->return = $url->getUrl();
		});

		/**
		 * Adds hook for getting Sales History List URL
		 */
		$this->addHook('Page::cust_saleshistoryURL', function($event) {
			$custID = $event->arguments(0);
			$url = new Url($this->wire('pages')->get('pw_template=sales-history-orders-customer')->url);
			$url->query->set('custID', $custID);
			$event->return = $url->getUrl();
		});

		/**
		 * Adds hook for getting Quotes List URL
		 */
		$this->addHook('Page::cust_quotesURL', function($event) {
			$custID = $event->arguments(0);
			$url = new Url($this->wire('pages')->get('pw_template=quotes-customer')->url);
			$url->query->set('custID', $custID);
			$event->return = $url->getUrl();
		});
	}

/* =============================================================
	URL Functions
============================================================= */
	/**
	 * Returns URL to CI Customer Page
	 * @param  string $custID Customer ID
	 * @return string
	 */
	public function get_ci_customerURL($custID) {
		$url = new Url($this->wire('pages')->get('pw_template=ci-customer')->url);
		$url->query->set('custID', $custID);
		return $url->getUrl();
	}

	/**
	 * Returns URL to CI Customer Shipto Page
	 * @param  string $custID   Customer ID
	 * @param  string $shiptoID Customer Shipto ID
	 * @return string
	 */
	public function get_ci_customershiptoURL($custID, $shiptoID) {
		$url = new Url($this->wire('pages')->get('pw_template=ci-shipto')->url);
		$url->query->set('custID', $custID);
		$url->query->set('shiptoID', $shiptoID);
		return $url->getUrl();
	}

	/**
	 * Return CI subfunctions that the User has permissions for
	 * @param  User   $user User
	 * @return PageArray
	 */
	public function get_ci_user_allowed_functions(User $user) {
		$p = $this->wire('pages')->get('pw_template=ci-customer');
		$dplus_functions = array_unique($p->children()->explode('dplus_function'));
		$filtered_functions = $user->filter_functions($dplus_functions);
		$this->session->funcs = $filtered_functions;
		return $p->children('dplus_function='.implode('|', $filtered_functions));
	}

/* =============================================================
	ProcessWire Module Functions
============================================================= */
	public static function getModuleInfo() {
		return array(
			'title' => 'Dplus MCI Pages',
			'version' => 101,
			'summary' => 'Installs and creates Dplus MCI Pages',
			'singular' => true,
			'autoload' => true,
			'requires' => array('DplusPwPages', 'Dpages'),
		);
	}
}
