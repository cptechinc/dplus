<?php namespace ProcessWire;

use Purl\Url;

/**
 * class DpagesMwm
 *
 * Installs fields, templates, pages, hooks necessary for Mwm (Warehouse) Pages
 * Adds Hooks for getting URLs to Mwm pages for various subfunctions
 */
class DpagesMwm extends Dpages implements Module {
	const FIELDS = array();

	const TEMPLATES = array(
		'warehouse-menu' => array(
			'name'   => 'warehouse-menu',
			'fields' => array('title', 'dplus_function', 'summary'),
			'paginated' => false
		),
		'warehouse-function' => array(
			'name'   => 'warehouse-function',
			'fields' => array('title', 'dplus_function', 'pw_template', 'summary'),
			'paginated' => false
		),
		'whse-binr' => array(
			'name'   => 'whse-binr',
			'fields' => array('title'),
			'paginated' => false
		),
		'whse-binr-from' => array(
			'name'   => 'whse-binr-from',
			'fields' => array('title'),
			'paginated' => false
		),
		'whse-binr-to' => array(
			'name'   => 'whse-binr-from',
			'fields' => array('title'),
			'paginated' => false
		),
		'whse-binr-contents' => array(
			'name'   => 'whse-binr-contents',
			'fields' => array('title'),
			'paginated' => false
		),
		'whse-picking' => array(
			'name'   => 'whse-picking',
			'fields' => array('title'),
			'paginated' => false
		),
		'whse-picking-unguided' => array(
			'name'   => 'whse-picking-unguided',
			'fields' => array('title'),
			'paginated' => false
		),
		'whse-picking-guided' => array(
			'name'   => 'whse-picking-guided',
			'fields' => array('title'),
			'paginated' => false
		),
		'whse-picking-packing' => array(
			'name'   => 'whse-picking-packing',
			'fields' => array('title'),
			'paginated' => false
		),
		'whse-packing' => array(
			'name'   => 'whse-packing',
			'fields' => array('title'),
			'paginated' => false
		),
		'whse-print-order-item-label' => array(
			'name'   => 'whse-print-order-item-label',
			'fields' => array('title'),
			'paginated' => false
		)
	);

	const PAGES = array(
		'warehouse-menu' => array(
			'template'       => 'warehouse-menu',
			'name'           => 'warehouse',
			'title'          => 'Warehouse',
			'summary'        => 'Warehouse Management Menu',
			'parent'         => '/',
			'dplus_function' => 'wm'
		),
		'menu-binr' => array(
			'template'       => 'warehouse-menu',
			'name'           => 'binr',
			'title'          => 'Bin Reassignment',
			'summary'        => 'Bin Reassignment Menu',
			'parent'         => '/warehouse/',
			'dplus_function' => 'mbinr'
		),
		'whse-binr' => array(
			'template'       => 'warehouse-function',
			'name'           => 'binr',
			'title'          => 'Bin Reassignment',
			'summary'        => 'Move Bin Item',
			'parent'         => '/warehouse/binr/',
			'dplus_function' => 'pbinr',
			'pw_template'    => 'whse-binr'
		),
		'whse-binr-from' => array(
			'template'       => 'warehouse-function',
			'name'           => 'move-from',
			'title'          => 'Move From',
			'summary'        => 'Move Single items from same from bin',
			'parent'         => '/warehouse/binr/',
			'dplus_function' => 'pbnrf',
			'pw_template'    => 'whse-binr-from'
		),
		'whse-binr-to' => array(
			'template'       => 'warehouse-function',
			'name'           => 'move-to',
			'title'          => 'Move To',
			'summary'        => 'Move Single items to the same to bin',
			'parent'         => '/warehouse/binr/',
			'dplus_function' => 'pbnrt',
			'pw_template'    => 'whse-binr-to'
		),
		'whse-binr-from' => array(
			'template'       => 'warehouse-function',
			'name'           => 'move-from',
			'title'          => 'Move From',
			'summary'        => 'Move Single items from the same bin',
			'parent'         => '/warehouse/binr/',
			'dplus_function' => 'pbnrf',
			'pw_template'    => 'whse-binr-from'
		),
		'whse-binr-contents' => array(
			'template'       => 'warehouse-function',
			'name'           => 'binr-contents',
			'title'          => 'Move Bin Contents',
			'summary'        => 'Move all Bin Items',
			'parent'         => '/warehouse/binr/',
			'dplus_function' => 'pmvbn',
			'pw_template'    => 'whse-binr-contents'
		),
		'whse-binr-inquiry' => array(
			'template'       => 'dplus-function-link',
			'name'           => 'bin-inquiry',
			'title'          => 'Bin Inquiry',
			'summary'        => 'Show Items in a bin',
			'parent'         => '/warehouse/binr/',
			'dplus_function' => 'pbini',
			'pw_template'    => 'whse-bin-inquiry'
		),
		'menu-inventory' => array(
			'template'       => 'warehouse-menu',
			'name'           => 'inventory',
			'title'          => 'Inventory',
			'summary'        => 'Inventory Menu',
			'parent'         => '/warehouse/',
			'dplus_function' => 'mivty'
		),
		'whse-find-item' => array(
			'template'       => 'warehouse-function',
			'name'           => 'find-item',
			'title'          => 'Find Item',
			'summary'        => 'Find Location(s) for an Item',
			'parent'         => '/warehouse/inventory/',
			'dplus_function' => 'pfini',
			'pw_template'    => 'whse-find-item'
		),
		'whse-bin-inquiry' => array(
			'template'       => 'warehouse-function',
			'name'           => 'bin-inquiry',
			'title'          => 'Bin Inquiry',
			'summary'        => 'Show Items in a bin',
			'parent'         => '/warehouse/inventory/',
			'dplus_function' => 'pbini',
			'pw_template'    => 'whse-bin-inquiry'
		),
		'whse-print-item-label' => array(
			'template'       => 'warehouse-function',
			'name'           => 'print-item-label',
			'title'          => 'Print Item Label',
			'summary'        => 'Print a Label for a bin Item',
			'parent'         => '/warehouse/inventory/',
			'dplus_function' => 'pilbl',
			'pw_template'    => 'whse-print-item-label'
		),
		'whse-receiving' => array(
			'template'       => 'warehouse-function',
			'name'           => 'receiving',
			'title'          => 'Receiving',
			'summary'        => 'Receive Purchase Orders',
			'parent'         => '/warehouse/inventory/',
			'dplus_function' => 'er',
			'pw_template'    => 'whse-receiving'
		),
		'menu-pick' => array(
			'template'       => 'warehouse-menu',
			'name'           => 'picking',
			'title'          => 'Picking',
			'summary'        => 'Picking Menu',
			'parent'         => '/warehouse/',
			'dplus_function' => 'mppik'
		),
		'whse-picking' => array(
			'template'       => 'warehouse-function',
			'name'           => 'pick',
			'title'          => 'Picking',
			'summary'        => 'Sales Order Picking',
			'parent'         => '/warehouse/picking/',
			'dplus_function' => 'porpk',
			'pw_template'    => 'whse-picking',
		),
		'whse-picking-packing' => array(
			'template'       => 'warehouse-function',
			'name'           => 'pick-pack',
			'title'          => 'Picking & Packing',
			'summary'        => 'Sales Order Picking & Packing',
			'parent'         => '/warehouse/picking/',
			'dplus_function' => 'porpp',
			'pw_template'    => 'whse-picking-packing',
		),
		'whse-packing' => array(
			'template'       => 'warehouse-function',
			'name'           => 'packing',
			'title'          => 'Packing',
			'summary'        => 'Sales Order Packing',
			'parent'         => '/warehouse/',
			'dplus_function' => 'porpp',
			'pw_template'    => 'whse-packing',
		),
		'whse-print-pick-item-label' => array(
			'template'       => 'warehouse-function',
			'name'           => 'order-item',
			'title'          => 'Print Item Label',
			'summary'        => 'Print a Label for an Order Item',
			'parent'         => '/warehouse/inventory/print-item-label/',
			'dplus_function' => 'pilbl',
			'pw_template'    => 'whse-print-pick-item-label'
		),
		'whse-physical-count' => array(
			'template'       => 'warehouse-function',
			'name'           => 'physical-count',
			'title'          => 'Physical Count',
			'summary'        => 'Update Inventory with Item Tag Entry',
			'parent'         => '/warehouse/inventory/',
			'dplus_function' => 'ite',
			'pw_template'    => 'whse-physical-count'
		),
	);

	public function init() {
		$this->addHook('Page(template=warehouse-menu|warehouse-function)::get_loginURL', function($event) {
			$url = new Url($this->wire('pages')->get('template=warehouse-menu, dplus_function=wm')->child('template=redir')->url);
			$url->query->set('action', 'login');
			$url->query->set('sessionID', session_id());
			$event->return = $url->getUrl();
		});
	}

	public function init_picking() {
		$this->addHook('Page::get_finishitemURL', function($event) {
			$p = $event->object;
			$url = new Url($p->parent('template=warehouse-menu')->child('template=redir')->url);
			$url->query->set('action','finish-item');

			if ($p->fullURL->query->has('linenbr')) {
				$url->query->set('linenbr', $p->fullURL->query->get('linenbr'));
			}
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_skipitemURL', function($event) {
			$p = $event->object;
			$url = new Url($p->parent('template=warehouse-menu')->child('template=redir')->url);
			$url->query->set('action','skip-item');
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_exitorderURL', function($event) {
			$p = $event->object;
			$url = new Url($p->parent('template=warehouse-menu')->child('template=redir')->url);
			$url->query->set('action','exit-order');
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_finishorderURL', function($event) {
			$p = $event->object;
			$url = new Url($p->parent('template=warehouse-menu')->child('template=redir')->url);
			$url->query->set('action','finish-order');
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_selectlineURL', function($event) {
			$p = $event->object;
			$item = $event->arguments(0); // Instance of PickSalesOrderDetail
			$url = new Url($p->fullURL->getUrl());
			$url->query->set('linenbr', $item->linenbr);
			$url->query->set('sublinenbr', $item->sublinenbr);
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_printlinelabelURL', function($event) {
			$p = $event->object;
			$ordn    = $event->arguments(0);
			$linenbr = $event->arguments(1);
			$url = new Url($this->wire('pages')->get('pw_template=whse-print-pick-item-label')->url);
			$url->query->set('ordn', $ordn);
			$url->query->set('linenbr', $linenbr);
			$url->query->set('returnpage', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_redirURL', function($event) {
			$p = $event->object;
			$url = new Url($p->parent('template=warehouse-menu')->child('template=redir')->url);
			$event->return = $url->getUrl();
		});

		$this->addHook('Page::get_removescanURL', function($event) {
			$p = $event->object;
			$url = new Url($p->fullURL->getUrl());
			$url->query->remove('scan');
			$event->return = $url->getUrl();
		});
	}

	public function init_pickingpacking() {
		$this->addHook('Page::get_addpalletURL', function($event) {
			$p = $event->object;
			$item = $event->arguments(0);
			$url = new Url($p->parent('template=warehouse-menu')->child('template=redir')->url);
			$url->query->set('action','add-pallet');
			$url->query->set('page', $p->fullURL->getUrl());
			$event->return = $url->getUrl();
		});
	}

	public function init_physicalcount() {
		$this->addHook('Page::get_chooseitemURL', function($event) {
			$p = $event->object;
			$item = $event->arguments(0);
			$url = new Url($p->fullURL->getUrl());
			$url->query->set('recno', $item->recno);
			$event->return = $url->getUrl();
		});
	}

	public static function getModuleInfo() {
		return array(
			'title' => 'Dplus Online Warehouse Pages',
			'version' => 101,
			'summary' => 'Installs and creates Dplus Online Warehouse Pages',
			'singular' => true,
			'autoload' => true,
			'requires' => array('DplusPwPages', 'Dpages'),
		);
	}
}
