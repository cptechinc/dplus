<?php namespace ProcessWire;

use Purl\Url;

require_once(__DIR__ . '/Dpages.module');

/**
 * class DpagesCart
 *
 * Installs fields, templates, pages, hooks necessary for Cart Pages
 * Adds Hooks for getting URLs to cart pages
 */
class DpagesCart extends Dpages implements Module {
	const FIELDS = array();

	const TEMPLATES = array(
		'cart' => array(
			'name'   => 'cart',
			'fields' => array('dplus_function', 'summary'),
			'paginated' => false
		)
	);

	const PAGES = array(
		'cart' => array(
			'template'       => 'dplus-function',
			'name'           => 'cart',
			'title'          => 'Cart',
			'summary'        => 'Cart',
			'parent'         => '/',
			'dplus_function' => '',
			'pw_template'    => 'cart'
		),
	);

	const HOOK_FUNCTIONS_LOOKUPS = array(
		// Hook     =>  PW Template
		'itm_json'    => 'itm-json',
		'itm_lookup'  => 'itm-lookup',
		'search_items'     => 'itm-search',
		'search_customers' => 'mci-lookup',
	);

	public function init() {
		foreach (self::HOOK_FUNCTIONS_LOOKUPS as $hook => $pwtemplate) {
			$this->addHook("Page(pw_template=cart)::{$hook}URL", function($event) {
				$hook = rtrim($event->method, 'URL');
				$pwtemplate = self::HOOK_FUNCTIONS_LOOKUPS[$hook];
				$event->return = $this->wire('pages')->get("pw_template=$pwtemplate")->url;
			});
		}
	}

	/**
	 * Returns URL to set Customer Cart
	 * @param  string $custID   Customer ID
	 * @param  string $shiptoID Customer Shipto  ID
	 * @return string
	 */
	public function get_cart_customerURL($custID, $shiptoID) {
		$url = new Url($this->wire('pages')->get('pw_template=cart')->url);
		$url->query->set('custID', $custID);
		$url->query->set('shiptoID', $shiptoID);
		return $url->getUrl();
	}

	public static function getModuleInfo() {
		return array(
			'title' => 'Dplus Online Cart Pages',
			'version' => 101,
			'summary' => 'Installs and creates Dplus Online Cart Pages',
			'singular' => true,
			'autoload' => true,
			'requires' => array('DplusPwPages', 'Dpages'),
		);
	}
}
