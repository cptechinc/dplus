<?php namespace ProcessWire;
/**
 * DplusSanitizer
 *
 * Module for Adding Hooks to the Sanitizer Class
 */
class Regexer extends WireData implements Module {

	const REGEXES = array(
		'phone' => array(
			'us' => array(
				'10' => '(\d{3})(\d{3})(\d{4})',
			)
		)
	);

	const REGEX_OUTPUTS = array(
		'phone' => array(
			'us' => array(
				'10'  => '$1-$2-$3',
				'ext' => ' X $4'
			)
		)
	);

	public function phone_us_10($phone) {
		$numbers_only = preg_replace("/[^\d]/", "", $phone);
		$regex  = self::REGEXES['phone']['us']['10'];
		$output = self::REGEX_OUTPUTS['phone']['us']['10'];
		return preg_replace("/^1?".$regex."$/", $output, $numbers_only);
	}

	public function phone_us_x($phone) {
		$numbers_only = preg_replace("/[^\d]/", "", $phone);
		$regex  = self::REGEXES['phone']['us']['10'];
		$output = self::REGEX_OUTPUTS['phone']['us']['10'];
		$phonelength = strlen($numbers_only);

		if ($phonelength > 10) {
			$extlength = $phonelength - 10;
			$regex  .='(\d{'.$extlength.'})';
			$output .= self::REGEX_OUTPUTS['phone']['us']['ext'];
		}
		return preg_replace("/^1?".$regex."$/", $output, $numbers_only);
	}

	public function phone_us_ext($phone) {
		$numbers_only = preg_replace("/[^\d]/", "", $phone);
		$phonelength = strlen($numbers_only);

		if (strlen($phonelength) > 10) {
			return substr($numbers_only, 10);
		}
		return $numbers_only;
	}

	public static function getModuleInfo() {
		return array(
			'title' => 'Dplus Regexer',
			'version' => 101,
			'summary' => 'Provides Regex Functions for formatting / filtering string data',
			'singular' => true,
			'autoload' => true,
		);
	}
}
