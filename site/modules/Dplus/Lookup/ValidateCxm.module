<?php namespace ProcessWire;

use Propel\Runtime\ActiveQuery\Criteria;

use ItemMasterItemQuery, ItemMasterItem;
use ItemXrefCustomerQuery, ItemXrefCustomer;

/**
 * ValidateCxm
 *
 * Class for validating Cxm fields
 */
class ValidateCxm extends WireData implements Module {
/* =============================================================
	AR Functions
============================================================= */
	/**
	 * Return if Cust ID is Valid
	 * @param  string $custID Customer ID
	 * @return bool
	 */
	public function custid($custID) {
		return $this->validate->ar->custid($custID);
	}

/* =============================================================
	IN Functions
============================================================= */
	/**
	 * Return if Item ID is Valid
	 * @param  string $itemID Item ID
	 * @return bool
	 */
	public function itemid($itemID) {
		return $this->validate->in->itemid_exists($itemID);
	}

	/**
	 * Return if Unit of Measure Sale Code is valid
	 * @param  string $code Unit of Measure Sale Code
	 * @return bool
	 */
	public function unitofm_sale($code) {
		return $this->validate->in->unitofm_sale($code);
	}

/* =============================================================
	CXM Functions
============================================================= */
	public function rounding_option($option) {
		return in_array($option, ItemXrefCustomer::ROUNDING_OPTIONS);
	}

/* =============================================================
	ProcessWire Module Functions
============================================================= */
	public static function getModuleInfo() {
		return array(
			'title' => 'CXM Validate Module',
			'version' => 101,
			'summary' => 'Handles CXM Fields Validation',
			'singular' => true,
			'autoload' => true,
			'installs' => array()
		);
	}

	public function init() {
		$this->validate = new WireData();
		$this->validate->ar  = $this->wire('modules')->get('ValidateAr');
		$this->validate->in  = $this->wire('modules')->get('ValidateIn');
		$this->modules = $this->wire('modules');
	}
}
