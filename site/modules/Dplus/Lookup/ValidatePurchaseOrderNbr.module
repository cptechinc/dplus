<?php namespace ProcessWire;

use Propel\Runtime\ActiveQuery\Criteria;

use PurchaseOrderQuery, PurchaseOrder;
use ApInvoiceQuery, ApInvoice;

/**
 * Lookup Purchase Order Numbers
 *
 * Class for Looking up / Validating Purchase Order Numbers
 *
 * @property string $exists  Purchase Order Number / Invoice Exists
 * @property string $ponbr   Purchase Order Number / Invoice Number
 * @property string $request What was sent to find Purchase Order Number / Invoice Number
 * @property string $source  po_head | ap_invoice_head
 */
class ValidatePurchaseOrderNbr extends WireData implements Module {
	public function __construct() {
		$this->exists  = false;
		$this->ponbr  = '';
	}

	/**
	 * Returns if Purchase Order Number exists in the Purchase Order table
	 * @param  string $ponbr Purchase Order Number
	 * @return bool
	 */
	public function validate($ponbr) {
		$q = PurchaseOrderQuery::create();
		$q->filterByPonbr($ponbr);

		if ($q->count()) {
			$this->exists = true;
			$this->ponbr = $ponbr;
		} else {
			$this->exists = false;
		}
		return $this->exists;
	}

	/**
	 * Returns if Purchase Order Number exists in the Ap Invoice table
	 * @param  string $ponbr Purchase Order Number
	 * @return bool
	 */
	public function validate_invoice($ponbr) {
		$q = ApInvoiceQuery::create();
		$q->filterByInvnbr($ponbr);

		if ($q->count()) {
			$this->exists = true;
			$this->ponbr = $ponbr;
		} else {
			$this->exists = false;
		}
		return $this->exists;
	}

	/* =============================================================
		ProcessWire Module Functions
	============================================================= */
	/**
	 * ProcessWire Module Info
	 *
	 * @return void
	 */
	public static function getModuleInfo() {
		return array(
			'title' => 'Purchase Order Number Lookup Module',
			'version' => 101,
			'summary' => 'Handles Purchase Order Number Lookup',
			'singular' => true,
			'autoload' => true,
			'installs' => array()
		);
	}
}
