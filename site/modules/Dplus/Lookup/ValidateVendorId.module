<?php namespace ProcessWire;

use Propel\Runtime\ActiveQuery\Criteria;

use VendorQuery, Vendor;
use VendorShipfromQuery, VendorShipfrom;

/**
 * ValidateVendorId
 *
 * Class for Looking up / Validating Vendor IDs, Vendor Shipfrom IDs
 *
 * @property string $exists      Vendor Exists
 * @property string $vendorID    Vendor ID
 * @property string $shipfromID  Vendor Shipfrom ID
 */
class ValidateVendorId extends WireData implements Module {
	public function __construct() {
		$this->exists   = false;
		$this->vendorID = '';
		$this->shipfromID = '';
	}

	/**
	 * Return if Vendor ID Exists
	 * @param  string $vendorID Vendor ID
	 * @return bool
	 */
	public function validate($vendorID) {
		$q = VendorQuery::create();
		$q->filterByVendorid($vendorID);

		if ($q->count()) {
			$this->exists = true;
			$this->vendorID = $vendorID;
		}
		return $this->exists;
	}

	/**
	 * Return if Vendor Shipfrom ID Exists
	 * @param  string $vendorID   Vendor ID
	 * @param  string $shipfromID Vendor Shipfrom ID
	 * @return bool
	 */
	public function validate_shipfrom($vendorID, $shipfromID) {
		if ($this->validate($vendorID)) {
			$this->exists = false;
			$q = VendorShipfromQuery::create();
			$q->filterByVendorid($vendorID);
			$q->filterByShipfromid($shipfromID);

			if ($q->count()) {
				$this->exists = true;
				$this->vendorID = $vendorID;
				$this->shipfromID = $shipfromID;
			}
		}
		return $this->exists;
	}


	/* =============================================================
		ProcessWire Module Functions
	============================================================= */
	/**
	 * ProcessWire Module Info
	 *
	 * @return void
	 */
	public static function getModuleInfo() {
		return array(
			'title' => 'Validate Vendor ID Module',
			'version' => 101,
			'summary' => 'Validates Vendor ID, Shipfrom ID',
			'singular' => true,
			'autoload' => true,
			'installs' => array(),
		);
	}
}
