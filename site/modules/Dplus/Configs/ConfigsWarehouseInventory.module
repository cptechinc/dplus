<?php namespace ProcessWire;

include_once(__DIR__.'/Configs.trait.php');

/**
 * Module for Warehouse Inventory configurations
 */
class ConfigsWarehouseInventory extends Process implements ConfigurableModule {
	use ConfigTraits;
/* =============================================================
		ProcessWire Module Functions
=============================================================== */

	const CONFIG_FIELDS = array(
		'allow_negativeinventory' => array(
			'type'        => 'checkbox',  // TRUE OR FALSE
			'label'       => 'Allow Negative Inventory?',
			'description' => 'Allow Negative Inventory',
			'notes'       => "Negative Inventory will be allowed on Serialized and Normal Items"
		),
		'show_inventoryresults' => array(
			'type'        => 'select',
			'label'       => 'Inventory Results Format',
			'description' => 'Format to show Inventory Results',
			'notes'       => "Format to show Inventory Results",
			'options' => array(
				'lotserial' => 'Lot / Serial Breakdown',
				'bin'       => 'Bin Breakdown'
			)
		),
		'physicalcount_savebin' => array(
			'type'        => 'checkbox',  // TRUE OR FALSE
			'label'       => 'Keep Bin Saved after submission?',
			'description' => 'Populates Bin based on last submit',
			'notes'       => "Populates Bin based on last submit"
		),
		'receive_lotserial_as_single' => array(
			'type'        => 'checkbox',  // TRUE OR FALSE
			'label'       => 'Receive Lots as Single Items?',
			'description' => 'Receive Lots as Single Items',
			'notes'       => "Receive Lots as Single Items"
		),
		'receive_force_bin_itemlookup' => array(
			'type'        => 'checkbox',  // TRUE OR FALSE
			'label'       => 'Require Bin when looking up Item in Receving?',
			'description' => 'Choose to Require the bin ID at Item Search',
			'notes'       => ""
		),
	);

	const DEFAULT_CONFIG = array(
		'allow_negativeinventory' => false,
		'show_inventoryresults'   => 'lotserial',
		'physicalcount_savebin'   => true,
		'receive_lotserial_as_single' => false,
		'receive_force_bin_itemlookup' => false,
	);

	/* =============================================================
			ProcessWire Module Functions
	=============================================================== */
	public function init() {
		parent::init();

		$this->init_configdata();
	}

	/**
	 * ProcessWire Module Info
	 *
	 * @return void
	 */
	public static function getModuleInfo() {
		return array(
			'title' => 'Dpluso Warehouse Inventory Config Module',
			'version' => 101,
			'summary' => 'Handles Dplus Warehouse Inventory Configurations',
			'singular' => true,
			'autoload' => true
		);
	}

	static public function getModuleConfigInputfields(array $data) {
		$modules = wire('modules');
		$fields = new InputfieldWrapper();
		$data = array_merge(self::DEFAULT_CONFIG, $data);

		$traits = self::CONFIG_FIELDS['allow_negativeinventory'];
		$f = $modules->get('InputfieldCheckbox');
		$f->attr('name', 'allow_negativeinventory');
		$f->attr('checked', $data['allow_negativeinventory'] ? 'checked' : '' );
		$f->label = __($traits['label']);
		$f->description = __($traits['description']);
		$f->notes = _($traits['notes']);
		$fields->add($f);

		$traits = self::CONFIG_FIELDS['physicalcount_savebin'];
		$f = $modules->get('InputfieldCheckbox');
		$f->attr('name', 'physicalcount_savebin');
		$f->attr('checked', $data['physicalcount_savebin'] ? 'checked' : '' );
		$f->label = __($traits['label']);
		$f->description = __($traits['description']);
		$f->notes = _($traits['notes']);
		$fields->add($f);

		$traits = self::CONFIG_FIELDS['receive_lotserial_as_single'];
		$f = $modules->get('InputfieldCheckbox');
		$f->attr('name', 'receive_lotserial_as_single');
		$f->attr('checked', $data['receive_lotserial_as_single'] ? 'checked' : '' );
		$f->label = __($traits['label']);
		$f->description = __($traits['description']);
		$f->notes = _($traits['notes']);
		$fields->add($f);

		$traits = self::CONFIG_FIELDS['receive_force_bin_itemlookup'];
		$f = $modules->get('InputfieldCheckbox');
		$f->attr('name', 'receive_force_bin_itemlookup');
		$f->attr('checked', $data['receive_force_bin_itemlookup'] ? 'checked' : '' );
		$f->label = __($traits['label']);
		$f->description = __($traits['description']);
		$f->notes = _($traits['notes']);
		$fields->add($f);

		return $fields;
	}
}
