<?php namespace ProcessWire;

use Purl\Url as Purl;

use PurchaseOrder, SalesOrder, Quote;

/**
 * DplusSanitizer
 *
 * Module for Adding Hooks to the Sanitizer Class
 */
class DplusInput extends WireData implements Module {

	/**
	 * Paginate Url with options
	 * @param WireInput $input                 [description]
	 * @param array     $options      Array of options:
	 * 	                - `includeQueryString` (bool): Whether to include query string. (default=true)
	 * 	                - `pagenbr`           (int) : Page Number. (default=1)
	 * @return string
	 */
	public function paginateUrl(WireInput $input, $options = []) {
		$defaults = [
			'includeQueryString' => true,
			'pagenbr'            => 1,
			'removeFromQueryString' => [],
		];
		$options = array_merge($defaults, $options);
		$url = new Purl($input->url());

		if ($options['includeQueryString'] === true) {
			$url->query = $input->queryString();

			if (empty($options['removeFromQueryString']) === false) {
				foreach ($options['removeFromQueryString'] as $key) {
					if ($url->query->has($key)) {
						$url->query->remove($key);
					}
				}
			}
		}

		$this->wire('modules')->get('Dpurl')->paginateSimple($url, $options['pagenbr']);
		return $url->getUrl();
	}

	public function init() {
		$this->addHookProperty('WireInput::values', function(HookEvent $event) {
			$input = $event->object;
			$rm    = strtolower($input->requestMethod());
			$event->return = $input->$rm;
		});

		$this->addHook('WireInput::values', function(HookEvent $event) {
			$input = $event->object;
			$rm    = strtolower($input->requestMethod());
			$event->return = $input->$rm;
		});

		$this->addHook('WireInput::lastSegment', function(HookEvent $event) {
			$input = $event->object;
			$segments = $input->urlSegments();
			$segmentCount = count($segments);
			$event->return = $segmentCount ? $segments[$segmentCount] : $this->wire('page')->name;
		});

		$this->addHook('WireInput::countSegments', function(HookEvent $event) {
			$input = $event->object;
			$event->return = count($input->urlSegments());
		});

		$this->addHook('WireInput::paginateUrl', function($event) {
			$input    = $event->object;
			$pagenbr = $event->arguments(0);
			$options = $event->arguments(1);
			if (empty($options)) {
				$options = [];
			}
			$options['pagenbr'] = $pagenbr;
			$event->return = $this->paginateUrl($input, $options);
		});
	}

	public static function getModuleInfo() {
		return array(
			'title' => 'Dplus Input',
			'version' => 101,
			'summary' => 'Adds Hooks to the Input Class',
			'singular' => true,
			'autoload' => true,
		);
	}
}
