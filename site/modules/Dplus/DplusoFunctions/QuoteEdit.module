<?php namespace ProcessWire;

use Purl\Url;
use QuoteQuery, Quote;
use QuotehedQuery, Quotehed;
use StatesQuery, States;
use ShipviaQuery, Shipvia;
use CustomerShiptoQuery, CustomerShipto;
use WarehouseQuery, Warehouse;

class QuoteEdit extends WireData implements Module {

	protected $qnbr;

	public function init() {
		/**
		 * Returns Sales Order Page URL
		 */
		$this->addHook('Page::unlock_quoteURL', function($event) {
			$qnbr = $event->arguments(0);
			$url = new Url($this->wire('pages')->get('template=dplus-menu,name=mqo')->child('template=redir')->url);
			$url->query->set('action', 'unlock-quote');
			$url->query->set('qnbr', $qnbr);
			$event->return = $url->getUrl();
		});

		/**
		 * Adds self::is_user_editingorder() as User hook
		 * @uses self::is_user_editingorder()
		 */
		$this->addHook('Page::remove_itemURL', function($event) {
			$p = $event->object;
			$qnbr = $event->arguments(0);
			$linenbr = $event->arguments(1);
			$url = new Url($this->wire('pages')->get('template=dplus-menu,name=mqo')->child('template=redir')->url);
			$url->query->set('action', 'remove-line');
			$url->query->set('qnbr', $qnbr);
			$url->query->set('linenbr', $linenbr);
			$event->return = $url->getUrl();
		});
	}

	/**
	 * Returns if Cart Customer has been defined
	 * @return bool
	 */
	public function has_qnbr() {
		return boolval($this->qnbr);
	}

	/**
	 * Returns Static Quote
	 *
	 * @return Quote
	 */
	public function get_quote_static() {
		return QuoteQuery::create()->filterByQuoteid($this->qnbr)->findOne();
	}

	/**
	 * Returns Editable Quote
	 * @return Quothed
	 */
	public function get_quote_edit() {
		return QuothedQuery::create()->findOneBySessionidQuote(session_id(), $this->qnbr);
	}

	/**
	 * Sets Quote Number
	 *
	 * @return string
	 */
	public function set_qnbr($qnbr) {
		$this->qnbr = $qnbr;
	}

	public function get_states() {
		return StatesQuery::create()->select(['name', 'abbreviation'])->find();
	}

	public function get_shipvias() {
		return ShipviaQuery::create()->find();
	}

	public function get_warehouses() {
		return WarehouseQuery::create()->find();
	}

	public function get_shiptos_json_array() {
		$custID = QuoteQuery::create()->select(Quote::get_aliasproperty('custid'))->findOneByQuotenumber($this->qnbr);
		$columns = array('id', 'name', 'address', 'address2', 'city', 'state', 'zip');

		$query = CustomerShiptoQuery::create();

		foreach ($columns as $column) {
			$query->addAsColumn($column, CustomerShipto::get_aliasproperty($column));
		}
		$query->select($columns);
		$query->filterByCustid($custID);
		$shiptos = $query->find();
		return $shiptos->toArray('id');
	}


/* =============================================================
	ProcessWire Module Functions
============================================================= */
	/**
	 * ProcessWire Module Info
	 *
	 * @return void
	 */
	public static function getModuleInfo() {
		return array(
			'title' => 'Dpluso Quote Edit Module',
			'version' => 101,
			'summary' => 'Handles Dpluso Quote Edit',
			'singular' => true,
			'autoload' => true,
		);
	}
}
