<?php namespace ProcessWire;

use MotorFreightCodeQuery, MotorFreightCode;

use Propel\Runtime\ActiveQuery\Criteria;

class FilterMsoFreightCodes extends WireData implements Module {
	/**
	 * Returns Query
	 * @return MotorFreightCodeQuery
	 */
	public function get_query() {
		return $this->query;
	}

	/**
	 * Initializes Query
	 * NOTE: Filters by Sales Rep if provided user is a Sales rep
	 *
	 * @param  User   $user User to Check if they are a Sales Person
	 * @return void
	 */
	public function init_query(User $user) {
		$this->query = MotorFreightCodeQuery::create();
	}

	/**
	 * Searches the Tariff Code Table to find vendors that match the query provided
	 * @param  string $q Search Query
	 * @return void
	 */
	public function filter_search($q) {
		$columns = array(
			MotorFreightCode::get_aliasproperty('id'),
			MotorFreightCode::get_aliasproperty('class'),
			MotorFreightCode::get_aliasproperty('description'),
			MotorFreightCode::get_aliasproperty('description2'),
			MotorFreightCode::get_aliasproperty('description3'),
			MotorFreightCode::get_aliasproperty('description4'),
		);
		$this->query->search_filter($columns, strtoupper($q));
	}

	/**
	 * Adds the Sort By to the query
	 * @param  Page   $page
	 * @return void
	 */
	public function apply_sortby(Page $page) {
		if ($page->has_orderby()) {
			$orderbycolumn = $page->orderby_column;
			$sort = $page->orderby_sort;

			$tablecolumn = MotorFreightCode::get_aliasproperty($orderbycolumn);
			$this->query->sortBy($tablecolumn, $sort);
		}
	}

/* =============================================================
	ProcessWire Module Functions
============================================================= */
	public static function getModuleInfo() {
		return array(
			'title' => 'Dpluso Filter Freight Codes Module',
			'version' => 101,
			'summary' => 'Handles Freight Codes Filtering',
			'singular' => true,
			'autoload' => true,
		);
	}
}
