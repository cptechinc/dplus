{#
	var                    Description / Instance of
	-------------------------------------------------
	page                   ProcessWire\Page

#}

{% include 'msa/logm/user/js/classes.js.twig' %}

$(function() {
	var modalAjax = $('#ajax-modal');

	var server   = LogmRequests.getInstance();
	var alert    = LogmAlerts.getInstance();
	var formLogm = LogmForm.getInstance();

/* =============================================================
	Unsaved Fields Alert
============================================================= */
	origForm = formLogm.form.serialize();

	$("body").on("click", "a:not(#logm-form.form_button, #ajax-modal a)", function(e) {
		if (formLogm.form.serialize() !== origForm) {
			e.preventDefault();
			var a = $(this);
			var href = a.attr('href');

			alert.unsavedChanges(function(saveChanges) {
				if (saveChanges) {
					formLogm.form.find('button[type=submit]').click();
				} else {
					// Send HTTP GET Request to remove Record Lock
					var uri = URI();
					var query = uri.query(true);
					uri.query({focus: query.id});

					$.get(uri.toString(), function() {
						window.location.href = href;
					});
				}
			});
		}
	});

/* =============================================================
	AJAX Lookup Modal Functions
============================================================= */
	$("body").on('click', '.printer-link', function(e) {
		e.preventDefault();
		var button    = $(this);
		var printerid = button.data('printer');
		var modal     = button.closest('.modal');
		var input     = $(modal.attr('data-input'));
		input.val(printerid);
		modal.modal('hide');
	});

	$("body").on('click', '.whse-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var whseid = button.data('whseid');
		var modal  = button.closest('.modal');
		var input  = $(modal.attr('data-input'));
		input.val(whseid);
		modal.modal('hide');
	});
	
/* =============================================================
	Validation Functions
============================================================= */
	formLogm.form.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		rules: {
			whseid: {
				required: true,
				remote: {
					url: '{{ page.jsonapiURL('inv/validate/warehouse') }}',
					type: "get",
					data: {
						jqv: 'true',
						id: function() {
							return $('#whseid').val();
						}
					}
				}
			},
			printerreport: {
				required: true,
				remote: {
					url: '{{ page.jsonapiURL('msa/validate/printer') }}',
					type: "get",
					data: {
						jqv: 'true',
						id: function() {
							return $('#printerreport').val();
						}
					}
				}
			},
			printerbrowse: {
				required: true,
				remote: {
					url: '{{ page.jsonapiURL('msa/validate/printer') }}',
					type: "get",
					data: {
						jqv: 'true',
						id: function() {
							return $('#printerbrowse').val();
						}
					}
				}
			},
			groupid: {
				required: false,
				remote: {
					url: '{{ page.jsonapiURL('msa/validate/lgrp') }}',
					type: "get",
					data: {
						jqv: 'true',
						code: function() {
							return $('#groupid').val();
						}
					}
				}
			},
			roleid: {
				required: false,
				remote: {
					url: '{{ page.jsonapiURL('msa/validate/roleid') }}',
					type: "get",
					data: {
						jqv: 'true',
						id: function() {
							return $('#roleid').val();
						}
					}
				}
			},
		},
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		submitHandler: function(form) {
			$('#loading-modal').modal('show');
			form.submit();
		}
	});
});
