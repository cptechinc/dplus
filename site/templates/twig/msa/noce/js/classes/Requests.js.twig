class NoceRequests {
	static instance = null;

	static getInstance() {
		if (this.instance === null) {
			this.instance = new NoceRequests();
		}
		return this.instance;
	}

	validateId(id, callback) {
		var ajax = new AjaxRequest(this.validateIdUrl());

		ajax.setData({code: id});
		ajax.request(function(response) {
			callback(response)
		});
	}

	getNote(id, callback) {
		var ajax = new AjaxRequest('{{ page.jsonApiUrl('msa/noce/') }}');

		ajax.setData({code: id});
		ajax.request(function(response) {
			callback(response)
		});
	}

	validateIdUrl() {
		return '{{ page.jsonApiUrl('msa/validate/noce/') }}';
	}

	lockCode(code, callback) {
		var ajax = new AjaxRequest(config.ajax.urls.locker.lock);

		ajax.setData({function: 'noce', key: code});
		ajax.request(function(isLocked) {
			callback(isLocked)
		});
	}

	unlockCode(code, callback) {
		var ajax = new AjaxRequest(config.ajax.urls.locker.delete);

		ajax.setData({function: 'noce', key: code});
		ajax.request(function(deleted) {
			callback(deleted)
		});
	}
}
