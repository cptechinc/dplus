{#
	var                    Description / Instance of
	-------------------------------------------------
	page                   ProcessWire\Page
	order                  SalesOrder
#}
$(function() {
	var form_additem = $('#add-item-form');
	var input_itemid = form_additem.find('input[name=itemID]');
	var input_qty    = form_additem.find('input[name=qty]');
	var input_weight = form_additem.find('input[name=weight]');

	var modal_ajax = $('#ajax-modal');

/* =============================================================
	Validation Functions
============================================================= */
	var validator = form_additem.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		rules: {
			itemID: {
				required: true,
				remote: {
					url: '{{ page.jsonapiURL('inv/validate/itemid/') }}',
					type: "get",
					data: {
						itemID: function() {
							return $('#additemID').val();
						},
						jqv: 'true'
					}
				}
			},
			qty: {
				required: true,
				min: 1
			}
		},
		submitHandler: function(form) {
			validate_itm_item(input_itemid.val(), function(exists) {
				if (exists) {
					if (input_qty.val() != '') {
						form.submit();
					} else {
						input_qty.focus();
					}
				} else {
					validate_get_item();
				}
			});
		}
	});

/* =============================================================
	Event Functions
============================================================= */
	$("body").on('click', '.item-lookup-result', function(e) {
		e.preventDefault();

		var button = $(this);
		var itemID = button.data('itemid');
		input_itemid.val(itemID).change();
		input_qty.focus();
	});

	$("body").on('change', '#add-item-form input[name=itemID]', function(e) {
		var input = $(this);
		validate_get_item();
		if (validator.element('#'+input.attr('id'))) {
			if (validator.element('#'+input_qty.attr('id'))) {
				form_additem.submit();
			} else {
				input_qty.focus();
			}
		}
	});

	$("body").on('change', '#add-item-form input[name=qty]', function(e) {
		var input = $(this);
		input.val(parseFloat(input.val()).toFixed({{ eso.decimal_places_qty() }}));
		if (validator.element('#additemID')) {
			var avgweight = parseFloat($('span.item-weight').text());
			var weight = parseFloat(input.val() * avgweight);
			$('#qty-weight').text(weight.toFixed({{ eso.decimal_places_qty() }}));
		}
	});

	$("body").on('change', '#add-item-form input[name=weight]', function(e) {
		var input = $(this);
		validate_get_item();
		if (validator.element('#additemID')) {
			var avgweight = parseFloat($('span.item-weight').text());
			var cases = Math.ceil(input.val() / avgweight);
			input_qty.val(cases).change();
		}
	});

	function validate_get_item() {
		validate_itemid_entry(input_itemid.val(), '{{ order.custid }}', '{{ order.shiptoid }}', function(response) {
			if (response.exists) {
				var original = input_itemid.val();
				input_itemid.val(response.itemID);
				validator.element('#additemID');

				get_itm_item(input_itemid.val(), function(item) {
					if (item) {
						$('small.desc1').text(item.description);
						$('small.desc2').text(item.description2);
						$('span.item-weight').text(item.weight);
						$('small.weight-desc').addClass('show');
						input_qty.removeAttr('disabled');
						input_weight.removeAttr('disabled');
					}
				});
			} else if (response.matches.itm > 0) {
				var q = input_itemid.val();
				input_itemid.val('');
				var url = input_itemid.closest('.input-group').find('button').data('lookupurl');
				url = URI(url);
				url.addQuery('q', q);
				var modal_ajax = $('#ajax-modal');
				modal_ajax.find('.modal-title').text('Searching for ' + q);
				modal_ajax.resizeModal('xl');
				modal_ajax.modal('show');
				modal_ajax.find('.modal-body').loadin(url.toString(), function() {});
			} else {
				swal_notfound();
			}
		});
	}

	function swal_notfound() {
		swal2.fire({
			title: 'Item not found.',
			text: input_itemid.val() + ' cannot be found.',
			icon: 'warning',
			showCancelButton: true,
			confirmButtonText: 'Make advanced search?',
			cancelButtonText: 'No',
		}).then(function (result) {
			if (result.value) {
				var url = URI("{{ page.fullURL.getUrl() }}");
				url.setQuery('q', input_itemid.val());
				window.location.replace(url.toString());
			}
		});
	}

/* =============================================================
	AJAX Request Functions
============================================================= */
	/**
	 * Return if Item ID is valid in ITM
	 * @param  {string}   itemID   Item ID
	 * @param  {Function} callback Callback function
	 * @return {bool}
	 */
	function validate_itm_item(itemID, callback) {
		var url = new URI('{{ page.jsonapiURL('inv/validate/itemid/') }}');
		url.addQuery('itemID', itemID);

		$.getJSON(url.toString(), function(exists) {
			callback(exists);
		});
	}

	/**
	 * Return Item Entry Object Validation
	 * @param  string     itemID    Item ID
	 * @param  string     vendorID  Vendor ID
	 * @param  {Function} callback  Callback Function
	 * @return {object}             {exists: (bool), itemID: xxx, message: xxx, source: xxx }
	 */
	function validate_itemid_entry(itemID, custID, shiptoID, callback) {
		var url = URI("{{ page.jsonapiURL('item-lookup') }}");
		url.addQuery('itemID', itemID);
		url.addQuery('custID', custID);
		url.addQuery('shiptoID', shiptoID);

		$.getJSON(url.toString(), function(response) {
			return callback(response);
		});
	}

	/**
	 * Return ITM Item
	 * @param  string     itemID    Item ID
	 * @param  {Function} callback  Function to call after result
	 * @return {object}             {itemid: xxx, description: xxx, description2: xxx, uom_purchase: xxx}
	 */
	function get_itm_item(itemID, callback) {
		var url = new URI('{{ page.jsonapiURL('inv/item/') }}');
		url.addQuery('itemID', itemID).addQuery('fields', 'uom_purchase,weight');

		$.getJSON(url.toString(), function(item) {
			callback(item);
		});
	}

/* =============================================================
	Lookup Modal Functions
============================================================= */
	$("body").on('click', '#ajax-modal .item-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var itemID = button.data('itemid');
		var modal = button.closest('.modal');
		var input = $(modal.attr('data-input'));
		input.val(itemID).change();
		modal_ajax.modal('hide');
	});
});
