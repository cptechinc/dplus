class CodeForm {
	static instance = null;

	static getInstance() {
		if (this.instance === null) {
			this.instance = new CodeForm();
		}
		return this.instance;
	}

	constructor() {
		this.id = 'code-form';
		this.form = $('#' + this.id);
		this.inputs = CodeInputs.getInstance();
		this.config = CodeConfigs.getInstance();
		this.system = 'IN';
	}

	updateFormFromJson(json = null) {
		var modal = this.form.closest('.modal');
		var title = 'Editing ' + json.sysop.description + ' (' + json.sysop.sysop  + ')';
		modal.find('.modal-title').text(title);
		this.updateInputsFromJson(json);
	}

	clearInputs() {
		this.inputs.sysop.val('');
		this.inputs.code.val('');
		this.inputs.description.text('');
		this.inputs.descriptionSysop.text('');
	}

	updateInputsFromJson(json = null) {
		this.clearInputs();

		var inputs = this.inputs;
		var server   = CodeRequests.getInstance();
		var url      = server.codeOptionsUrl(this.system, json.sysop.sysop);

		inputs.code.closest('.input-group').find('button[data-lookupurl]').attr('data-lookupurl', url);
		inputs.sysop.val(json.sysop.sysop);
		inputs.code.val(json.code);
		inputs.description.text(json.description);
		inputs.descriptionSysop.text(json.sysop.description);

		var rules = {
			required: false,
		};

		$('#' + inputs.code.attr('id')).rules('remove', 'required remote');

		this.getCodeJqvRules(json, function(rules) {
			$('#' + inputs.code.attr('id')).rules('add', rules);

			if (json.code && rules.required === false) {
				inputs.submit.delete.removeAttr('disabled');
			} else {
				inputs.submit.delete.attr('disabled', 'true');
			}
		});
	}

	getCodeJqvRules(json, callback) {
		var rules = {required: false};
		var form = this;
		var server   = CodeRequests.getInstance();

		server.getSysop(this.system, json.sysop.sysop, function(sysop) {
			rules.required = sysop.input.force;
			if (sysop.input.validate) {
				rules.remote = form.getCodeJqvRemoteData();
			}
			callback(rules);
		});
	}

	getCodeJqvRemoteData() {
		return {
			url: '{{ page.jsonapiURL('msa/validate/sysop/option') }}',
			type: "get",
			data: {
				jqv: 'true',
				system: function() {
					return $('input[name=system]').val();
				},
				sysop: function() {
					return $('input[name=sysop]').val();
				},
				code: function() {
					return $('input[name=code]').val();
				},
			}
		};
	}
}
