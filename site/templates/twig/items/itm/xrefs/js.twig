{% include 'items/itm/xrefs/js/classes.js.twig' %}

$(function() {
	var modalAjax = $('#ajax-modal');
	var form = $('#itm-xrefs-form');
	var input_supercededby = form.find('input[name=supercededby]');

	var formXrefs = XrefsForm.getInstance();
	var alert     = XrefsAlerts.getInstance();
	var server    = XrefsRequests.getInstance();

	formXrefs.form.find('.form-body').height($('table.xrefs').height());

/* =============================================================
	Events
============================================================= */
	$('body').on('keyup change paste', '#' + formXrefs.id +' input, select, textarea', function(){
		if ($('.response-alert').length) {
			$('.response-alert').remove();
		}
	});

	$("body").on("change", "input[name=shortitemID]", function(e) {
		var input  = $(this);
		var inputs = formXrefs.inputs;
		if (input.val() === '') {
			return true;
		}
		inputs.overwriteshort.val('false');

		server.validateShortItemAvailable(formXrefs.inputs.itemid.val(), input.val(), function(isAvailable) {
			if (isAvailable === false) {
				alert.shortItemidExists(inputs.itemid.val(), inputs.shortitemid.val(), function(overwrite) {
					console.log(overwrite);
					inputs.overwriteshort.val(overwrite ? 'true' : 'false');
					if (overwrite === false) {
						console.log(inputs.shortitemid.data('original'));
						inputs.shortitemid.val(inputs.shortitemid.data('original')).change();
					}
				});
			}
		});
	});

	$("body").on("change", "input[name=supercede]", function(e) {
		var input  = $(this);
		var inputs = formXrefs.inputs;
		inputs.overwriteshort.val('false');

		if (inputs.itemid.val() == inputs.supercede.val()) {
			alert.supercedeIsSameItemid(inputs.itemid.val(), inputs.supercede.val(), function(isConfirmed) {
				inputs.supercede.val('');
				var validator = formXrefs.form.validate();
				validator.element('#' + inputs.supercede.attr('id'));
			});
		}

		server.getItm(inputs.supercede.val(), [], function(item) {
			if (item) {
				console.log(item);
				$('.supercede.description1').text(item.description);
				$('.supercede.description2').text(item.description2);
			} else {
				$('.supercede.description1').text('');
				$('.supercede.description2').text('');
			}
		});
	});

/* =============================================================
	Unsaved Fields Alert
============================================================= */
	$("body").on("click", "a:not(#itm-xrefs-form.form_button, #ajax-modal a)", function(e) {
		if (formXrefs.hasChanges()) {
			e.preventDefault();
			var a = $(this);
			var href = a.attr('href');

			alert.unsavedChanges(function(saveChanges) {
				if (saveChanges) {
					formXrefs.form.find('button[type=submit]').click();
				} else {
					$.get('{{ page.url }}', function() {
						window.location.href = href;
					});
				}
			});
		}
	});


/* =============================================================
	Item Lookup Modal Methods
============================================================= */
	modalAjax.on('show.bs.modal', function (event) {
		var button = $(event.relatedTarget); // Button that triggered the modal
		var modal  = $(this);
		var url    = button.data('lookupurl');
		modal.attr('data-input', button.data('input'));
		modal.find('.modal-title').text('Search for an Item');
		modal.resizeModal('xl');
		modal.find('.modal-body').loadin(url, function() {

		});
	});

	$("body").on("submit", "#ajax-modal form", function(e) {
		e.preventDefault();
		var form = $(this);
		var query = form.serialize();
		var action = form.attr('action');
		var search = form.find('input[name=q]').val();
		var url = action + '?' + query;
		form.closest('.modal').find('.modal-title').text('Searching for ' + search);
		form.closest('.modal').find('.modal-body').loadin(url, function() {

		});
	});

	$("body").on("click", "#ajax-modal .item-link", function(e) {
		e.preventDefault();
		var button = $(this);
		var modal  = button.closest('.modal');
		$(modal.attr('data-input')).val(button.data('itemid')).change();
		modal.modal('hide');
	});

	$("body").on('click', '#ajax-modal .paginator-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var href   = button.attr('href');
		var modal  = button.closest('.modal');
		modal.find('.modal-body').load(href);
	});

/* =============================================================
	Validation Methods
============================================================= */
	jQuery.validator.addMethod("supercedematches", function(value, element) {
			return this.optional(element) || value != formXrefs.inputs.itemid.val();
		},
		"Cannot supercede an item back to the same Item ID"
	);

	formXrefs.form.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		ignore: ".validate-ignore",
		rules: {
			shortitemID: {
				required: false,
			},
			supercede: {
				required: false,
				supercedematches: true,
			},
		},
		submitHandler: function(form) {
			var inputs = formXrefs.inputs;
			if (inputs.shortitemid.val() == '') {
				form.submit();
				return true;
			}

			if (inputs.overwriteshort.val() == 'false') {
				server.validateShortItemAvailable(inputs.itemid.val(), inputs.shortitemid.val(), function(isAvailable) {
					if (isAvailable === false) {
						alert.shortItemidExists(inputs.itemid.val(), inputs.shortitemid.val(), function(overwrite) {
							inputs.overwriteshort.val(overwrite ? 'true' : 'false');
							form.submit();
						});
					} else {
						form.submit();
					}
				});
			} else {
				form.submit();
			}
		}
	});
});
