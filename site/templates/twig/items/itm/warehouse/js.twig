$(function() {
	var form_whse      = $('#item-whse-form');
	var input_bin      = form_whse.find('input[name=bin_default]');
	var input_codeabc  = form_whse.find('input[name=codeabc]');

/* =============================================================
	Unsaved Fields Alert
============================================================= */
	origForm = form_whse.serialize();

	$("body").on("click", "a:not(#item-whse-form .form_button)", function(e) {
		if (form_whse.serialize() !== origForm) {
			e.preventDefault();
			var a = $(this);
			var href = a.attr('href');

			swal2.fire({
				title: 'Changes have occurred!',
				text: 'Do you want to save?',
				icon: 'warning',
				showCancelButton: true,
				confirmButtonText: '<i class="fa fa-floppy-o" aria-hidden="true"></i> Yes',
				cancelButtonText: 'No',
			}).then((result) => {
				if (result.value) {
					form.find('button[type=submit][name=update-itm-whse]').click();
				} else if (result.dismiss === Swal.DismissReason.cancel) {
					// Send HTTP GET Request to remove Record Lock
					$.get('{{ page.url }}', function() {
						window.location.href = href;
					});
				}
			});
		}
	});

/* =============================================================
	Changing WarehouseID for new Warehouses
============================================================= */
	$("body").on('change', 'select[name=whseID]', function(e) {
		var select = $(this);

		if (warehouses[select.val()] !== undefined) {
			swal2.fire({
				title: 'Warehouse ' + select.val() + ' exists',
				text: 'Would you like to change to this Warehouse?',
				icon: 'error',
				showCancelButton: true,
				confirmButtonText: 'Yes',
				cancelButtonText: 'No',
			}).then((result) => {
				if (result.value) {
					var uri = new URI();
					uri.setQuery('whseID', select.val());
					window.location.href = uri.toString();
				}
			});
		} else {
			form_whse.find('select[name=whsesupply]').val(select.val());
		}
	});

/* =============================================================
	Valdation Methods
============================================================= */
	jQuery.validator.addMethod("codeabc", function(value, element) {
		return this.optional(element) || /^[A-J]+$/i.test(value);
	}, "Valid Entries for ABC Class are A through J");

	form_whse.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		ignore: ".validate-ignore",
		rules: {
			whseID: { required: true },
			codeabc: { codeabc: true },
			whsesupply: { required: true }
		},
		submitHandler : function(form) {
			var valid_bin      = validate_bin();
			var valid_codeabc  = validate_codeabc();
			var valid_form     = new SwalError(false, '', '', false);

			if (valid_bin.error) {
				valid_form = valid_bin;
			} else if (valid_codeabc.error) {
				valid_form = valid_codeabc;
			}

			if (valid_form.error) {
				swal2.fire({
					icon: 'error',
					title: valid_form.title,
					text: valid_form.msg,
					html: valid_form.html
				});
			} else {
				form.submit();
			}
		}
	});

	function validate_codeabc() {
		var error = false;
		var title = '';
		var msg = '';
		var html = false;

		if (input_codeabc.val().length) {
			var lowercase_codeabc = input_codeabc.val();
			input_codeabc.val(lowercase_codeabc.toUpperCase());

			if (/^[A-J]+$/i.test(input_codeabc.val()) == false) {
				error = true;
				title = 'ABC class Error';
				msg = 'Valid Entries for ABC Class are A through J';
			}
			return new SwalError(error, title, msg, html);
		}
	}

	function validate_bin() {
		var error = false;
		var title = '';
		var msg = '';
		var html = false;
		var lowercase_bin = input_bin.val();
		input_bin.val(lowercase_bin.toUpperCase());
		var whseID = '';

		if (form_whse.find('select[name=whseID]').length) {
			whseID = form_whse.find('select[name=whseID]').val();
		} else {
			whseID = form_whse.find('input[name=whseID]').val();
		}

		if (input_bin.val() == '') {
			error = true;
			title = 'Error';
			msg   = 'Please Fill in the Bin';
		} else if (warehouses[whseID].binarrangement == 'list' && (input_bin.val() != in_defaultbin && !warehouses[whseID].bins.contains(input_bin.val()))) {
			error = true;
			title = 'Invalid Bin ID';
			msg   = 'Please use a valid bin';
		} else if (warehouse.binarrangement == 'range') {
			error = true;

			warehouse.bins.bins.forEach(function(bin) {
				if (input_bin.val() >= bin.from && input_bin.val() <= bin.through) {
					error = false;
				}
			});

			if (error) {
				title = 'Invalid Bin ID';
				msg = 'Your Bin ID must between these ranges';
				html = "<h4>Valid Bin Ranges<h4>" + create_binrangetable();
			}
		}
		return new SwalError(error, title, msg, html);
	}

	function create_binrangetable() {
		var bootstrap = new JsContento();
		var table = bootstrap.open('table', 'class=table table-striped table-condensed');
			warehouse.bins.bins.forEach(function(bin) {
				table += bootstrap.open('tr', '');
					table += bootstrap.openandclose('td', '', bin.from);
					table += bootstrap.openandclose('td', '', bin.through);
				table += bootstrap.close('tr');
			});
		table += bootstrap.close('table');
		return table;
	}

/* =============================================================
	Bins Modal Methods
============================================================= */
	$('#bins-modal').on('shown.bs.modal', function (event) {
		var modal = $(this);
		var button = $(event.relatedTarget); // Button that triggered the modal
		modal.attr('data-input', button.data('input'));

		if (form_whse.find('select[name=whseID]').length) {
			whseID = form_whse.find('select[name=whseID]').val();
		} else {
			whseID = form_whse.find('input[name=whseID]').val();
		}
		modal.find('.modal-title').find('.whse-title').text(whseID);
		modal.find('#whse-'+ whseID +'-tab').click();
	});

	$("body").on("click", "#bins-modal .choose-bin", function(e) {
		e.preventDefault();
		var button = $(this);
		var binID = button.data('bin');
		input_bin.val(binID);
		button.closest('.modal').modal('hide');
	});
});
