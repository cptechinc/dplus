$(function() {
	{% if input.get.offsetExists('focus') and input.get.string('focus') != 'new' %}
		$('tr[data-vendorid="{{ input.get.string('focus') }}"]').addClass('highlight');
		// $('html, body').animate({scrollTop: $('tr[data-vendorid="{{ input.get.string('focus') }}"]').offset().top,},700,'linear');
	{% endif %}

	$("body").on('change', 'input[name=vendorID]', function(e) {
		e.preventDefault();
		var input = $(this);
		
		var ajax = new AjaxRequest('{{ page.jsonApiUrl('map/validate/vxm/vendorid/') }}');
		ajax.setData({vendorID: input.val()});
		ajax.request(function(exists) {
			if (exists) {
				swal2.fire({
					title: "Vendor " + input.val() + " exists",
					text: 'Edit X-Ref Items?',
					icon: 'question',
					showCancelButton: true,
					confirmButtonText: 'Yes',
					cancelButtonText: 'No',
				}).then((result) => {
					if (result.value) {
						var uri = new URI();
						uri.addQuery('vendorID', input.val());
						window.location.href = uri.toString();
					} else {
						input.val('');
					}
				});
			}
		});
	});

/* =============================================================
	Lookup Modal Functions
============================================================= */
	var modal_ajax = $('#ajax-modal');

	$("body").on('click', '.vendor-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var vendorID = button.data('vendorid');
		var modal = button.closest('.modal');
		var input = $(modal.attr('data-input'));
		input.val(vendorID);
		input.change();

		modal.modal('hide');
	});

/* =============================================================
	New X-ref Modal Functions
============================================================= */
	var modal_new = $('#new-xref-modal');

	modal_new.on('show.bs.modal', function (event) {
		var modal = $(this);
		modal.find('input[name=vendorID]').val('');
		modal.find('form').validate().resetForm();
	});

	modal_new.on('shown.bs.modal', function (event) {
		var modal = $(this);
		modal.find('input[name=vendorID]').focus();
		modal.find('form').validate().resetForm();
	});

	var validator = $('#new-xref-form').validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		rules: {
			vendorID: {
				required: true,
				remote: {
					url: '{{ page.jsonApiUrl('map/validate/vendorid/') }}',
					type: "get",
					data: {}
				}
			},
		},
		messages: {
			vendorID: "Use a valid Vendor ID",
		},
		submitHandler: function(form) {
			form.submit();
		}
	});
});
