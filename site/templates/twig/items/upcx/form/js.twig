{% include 'min/i2i/xref/form/js/classes.js.twig' %}

$(function() {
	var modal_ajax = $('#ajax-modal');

	var alert    = UpcxAlerts.getInstance();
	var server   = UpcxRequests.getInstance();
	var configs  = UpcxConfigs.getInstance();
	var formUpcx = UpcxForm.getInstance();

/* =============================================================
	Event Functions
============================================================= */
	$("body").on("change", "input[name=upc]", function(e) {
		var input = $(this);

		if (configs.allowDuplicateUpcs === false) {
			server.validateUpc(input.val(), function(exists) {
				if (exists) {
					alert.upcExists(input.val(), function(editXref)  {
						var url = URI();
						if (editXref) {
							url.setQuery('upc', input.val());
						}
						window.location.href = url.toString();
					});
				}
			});
		}
	});

	$("body").on("change", "input[name=itemID]", function(e) {
		var input = $(this);

		if (configs.allowDuplicateUpcs === true) {
			var upc = formUpcx.inputs.upc.val()

			server.validateXref(upc, input.val(), function(exists) {
				if (exists) {
					alert.xrefExists(upc, input.val(), function(editXref)  {
						var url = URI();
						if (editXref) {
							url.setQuery('upc', upc);
							url.setQuery('itemID', input.val());
						}
						window.location.href = url.toString();
					});
				}
				if (exists === false) {
					UpcxForm.getInstance().updateItmDescription();
				}
			});
		}
	});

	$("body").on("change", "select[name=primary]", function(e) {
		formUpcx.inputs.primaryValidated.val('false');
	});

/* =============================================================
	Unsaved Fields Alert
============================================================= */
	origForm = formUpcx.inputs.form.serialize();

	$("body").on("click", "a:not(#upc-xref-form.form_button, #ajax-modal a)", function(e) {
		if (formUpcx.inputs.form.serialize() !== origForm) {
			e.preventDefault();
			var a = $(this);
			var href = a.attr('href');

			alert.unsavedChanges(function(save) {
				if (save === true) {
					formUpcx.inputs.form.find('button[type=submit]').click();
				} else {
					$.get('{{ page.url }}', function() {
						window.location.href = href;
					});
				}
			});
		}
	});

/* =============================================================
	AJAX Lookup Modal Functions
============================================================= */
	modal_ajax.on('show.bs.modal', function (event) {
		var button = $(event.relatedTarget); // Button that triggered the modal
		var modal = $(this);
		var url = button.data('lookupurl');

		modal.attr('data-input', button.data('input'));
		modal.find('.modal-title').text(button.attr('title'));
		modal.resizeModal('xl');
		modal.find('.modal-body').loadin(url, function() {});
	});

	$("body").on('click', '.item-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var itemID = button.data('itemid');
		var modal  = button.closest('.modal');
		$(modal.attr('data-input')).val(itemID).change();
		modal.modal('hide');
	});

	$("body").on('submit', '#ajax-modal form', function(e) {
		e.preventDefault();
		var form = $(this);
		var query = form.serialize();
		var action = form.attr('action');
		var search = form.find('input[name=q]').val();
		var url = action + '?' + query;
		form.closest('.modal').find('.modal-title').text('Searching for ' + search);
		form.closest('.modal').find('.modal-body').loadin(url, function() {});
	});

	$("body").on('click', '#ajax-modal .paginator-link', function(e) {
		e.preventDefault();
		var href = $(this).attr('href');
		modal_ajax.find('.modal-body').load(href);
	});

/* =============================================================
	Validation Functions
============================================================= */

	formUpcx.inputs.form.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		rules: {
			qty: {
				required: true,
				min: 1,
			},
			upc: {
				required: true,
				maxlength: 20,
				remote: {
					url: '{{ page.jsonapiURL('inv/validate/upcx/upc/xref/') }}',
					type: "get",
					data: {
						jqv: 'true',
						new: function() {
							var isNew = $('input[name=upc]').data('new');
							return isNew;
						},
						itemID: function() {
							var configs = UpcxConfigs.getInstance();
							if (configs.allowDuplicateUpcs) {
								return $('input[name=itemID]').val() ? $('input[name=itemID]').val() : 'false';
							}
							return 'false';
						}
					}
				}
			},
			itemID: {
				required: true,
				remote: {
					url: '{{ page.jsonapiURL('inv/validate/itemid/') }}',
					type: "get",
					data: {
						jqv: 'true',
					}
				}
			},
		},
		messages: {
			uom: "Please choose a Unit of Measure",
		},
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		submitHandler: function(form) {
			$('#loading-modal').modal('show');

			var formdata = $(form).serializeArray().reduce(function(obj, item) {
				obj[item.name] = item.value;
				return obj;
			}, {});


			if (formdata['action'] == 'update-upcx') {
				validate_primary(function(canSubmit) {
					$('#loading-modal').modal('hide');
					if (canSubmit) {
						$('<input type="hidden" name="action" value="update-upcx">').appendTo($(form));
						form.submit();
					}
				});
			} else {
				form.submit();
			}
		}
	});

	function validate_primary(callback) {
		if (formUpcx.inputs.primary.val() == 'N') {
			callback(true);
		}

		if (formUpcx.inputs.primary.val() == 'Y' && formUpcx.inputs.primary.data("primary") === true) {
			callback(true);
			return true;
		}

		if (formUpcx.inputs.primary.val() == 'Y' && formUpcx.inputs.primary.data("primary") === false) {
			server.validatePrimaryUpc(formUpcx.inputs.itemid.val(), formUpcx.inputs.upc.val(), function(isPrimary) {
				if (isPrimary === true) {
					$('input[name=valid_primary]').val('true');
					callback(true);
					return true;
				}

				if (isPrimary === false) {
					UpcxRequests.getInstance().getPrimaryUpc(formUpcx.inputs.itemid.val(), function(xref) {
						UpcxAlerts.getInstance().changePrimary(formUpcx.inputs.itemid.val(), xref.upc, function(changePrimary) {
							if (changePrimary === true) {
								$('input[name=valid_primary]').val('true');
							}
							if (changePrimary === false) {
								$('input[name=valid_primary]').val('false');
								$('select[name=primary]').val('N');
							}
							callback(changePrimary);
						});
					});
				}
			});
		}
	}
});
