{#
	var                    Description / Instance of
	-------------------------------------------------
	page                   ProcessWire\Page
	epo                    PurchaseOrderEdit
#}
$(function () {
	var modal_edit    = $('#edit-item-modal');
	var modal_ajax    = $('#ajax-modal');
	var form_edit     = $('#edit-item-form');
	var form_add      = $('#add-item-form');
	var items = {{ epo.items.get_details_array(page.wire('input').get.text('ponbr'))|json_encode()|raw }};
	var decimal_places_qty = {{ epo.configs.decimal_places_qty() }};
	var decimal_places_cost = {{ epo.configs.decimal_places_cost() }};

/* =============================================================
	Edit Line Item Functions
============================================================= */
	modal_edit.on('show.bs.modal', function (event) {
		var modal = $(this);
		var button = $(event.relatedTarget);
		var linenbr = button.data('linenbr');
		modal.find('.modal-title').find('.linenbr').text(linenbr);
		populate_item_inputs(linenbr);
	});

	function populate_item_inputs(linenbr) {
		get_po_line(linenbr, function(item) {
			if (item) {
				var form = new EditItemForm(form_edit);
				form.inputs.linenbr.val(linenbr);
				form.inputs.itemID.val(item.itemid);
				form.inputs.description.val(item.description);
				form.inputs.vendoritemID.val(item.vendoritemid);
				form.inputs.whse.val(item.whseid);
				form.inputs.specialorder.val(item.specialorder);
				form.inputs.uom.val(item.uom);

				form.inputs.qty.ordered.val(parseFloat(item.qty.ordered).toFixed(decimal_places_qty));
				form.inputs.qty.received.val(parseFloat(item.qty.received).toFixed(decimal_places_qty));
				form.inputs.qty.invoiced.val(parseFloat(item.qty.invoiced).toFixed(decimal_places_qty));
				form.inputs.qty.duein.val(parseFloat(item.qty.duein).toFixed(decimal_places_qty));
				form.inputs.cost.val(parseFloat(item.cost).toFixed(decimal_places_cost));
				form.inputs.cost_total.val(parseFloat(item.cost_total).toFixed(decimal_places_cost));
				form.inputs.glaccount.code.val(item.glaccount.code);
				form.inputs.glaccount.description.text(item.glaccount.description);

				form.inputs.ordn.val(parseFloat(item.ordn) > 0 ? item.ordn : '');
			}
		});
	}

	function EditItemForm(form) {
		this.form = form;
		this.id = form.attr('id');
		this.inputs = {
			linenbr: form.find('input[name=linenbr]'),
			itemID: form.find('input[name=itemID]'),
			description: form.find('input[name=description]'),
			vendoritemID: form.find('input[name=vendoritemID]'),
			whse: form.find('input[name=whse]'),
			specialorder: form.find('input[name=specialorder]'),
			uom: form.find('input#uom'),
			qty: {
				ordered:  form.find('input[name=qty_ordered]'),
				received: form.find('input#qty_received'),
				invoiced: form.find('input#qty_invoiced'),
				duein:    form.find('input[name=qtyduein]'),
			},
			cost: form.find('input[name=cost]'),
			cost_total: form.find('input#cost_total'),
			ordn: form.find('input[name=ordn]'),
			glaccount: {
				code: form.find('input[name=glaccount]'),
				description: form.find('p.gl-desc'),
			}
		}
	}

/* =============================================================
	Validation Functions
============================================================= */
	var validator_edit = form_edit.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		rules: {
			edititemID: {
				required: true,
				remote: {
					url: '{{ page.jsonapiURL('inv/validate/itemid/') }}',
					type: "get",
					data: {
						itemID: function() {
							return $('#edititemID').val();
						},
						jqv: 'true'
					}
				}
			},
			vendoritemID: {
				required: false,
				remote: {
					url: '{{ page.jsonapiURL('map/validate/vxm/vendoritemid-itemid/') }}',
					type: "get",
					data: {
						itemID: function() {
							return $('#edititemID').val();
						},
						vendoritemID: function() {
							return $('#vendoritemID').val();
						}
					}
				}
			},
			glaccount: {
				required: true,
				remote: {
					url: '{{ page.jsonapiURL('mgl/validate/gl-code/') }}',
					type: "get",
					data: {
						code: function() {
							return $('#glaccount').val();
						},
						jqv: 'true'
					}
				}
			},
		},
		messages: {

		},
		submitHandler: function(form) {
			form.submit();
		}
	});

/* =============================================================
	Edit Modal Event Functions
============================================================= */
	$("body").on('change', '#edit-item-modal input[name=itemID]', function(e) {
		e.preventDefault();
		var input = $(this);
		var form = input.closest('form');
		var vendorID = form.find('input#vendorID').val();
		var input_vendoritemID = form.find('input[name=vendoritemID]');

		get_vxm_xref(vendorID, input_vendoritemID.val(), function(xref) {
			if (xref) {
				if (xref.itemid != input.val()) {
					input_vendoritemID.val('');
				}
			}
		});


		if (validator_edit.element('#'+input.attr('id'))) {
			get_itm_item(input.val(), function(item) {
				var ele_description = input.closest('.item-col').find('.description');
				if (ele_description.prop('tagName').toLowerCase() == 'input') {
					ele_description.val(item.description);
				} else {
					ele_description.text(item.description);
				}
				vendor_vxm_itemid_exists(input.val(), vendorID, function(exists) {
					if (exists) {
						get_vxm_itemid(input.val(), vendorID, function(xref) {
							if (xref) {
								input_vendoritemID.val(xref.vendoritemid);
							}
						});
					}
				});
			});
		}
	});

	$("body").on('change', '#edit-item-modal input[name=vendoritemID]', function(e) {
		e.preventDefault();
		var input = $(this);
		var form = input.closest('form');
		var vendorID = $('input#vendorID').val();

		get_vxm_xref(vendorID, input.val(), function(xref) {
			if (xref) {
				if (form.find('input[name=itemID]').val() != xref.itemid) {
					form.find('input[name=itemID]').val(xref.itemid);
				}
			}
		});
		validator_edit.element('#'+input.attr('id'));
	});

	$("body").on('change', '#edit-item-modal input[name=cost]', function(e) {
		e.preventDefault();
		var input = $(this);
		var form = input.closest('form');
		input.val(parseFloat(input.val()).toFixed({{ epo.configs.decimal_places_cost() }}));
		calculate_totalcost(input.val(), form.find('input[name=qty_ordered]').val());
	});

	$("body").on('change', '#edit-item-modal input[name=cost_total]', function(e) {
		e.preventDefault();
		var input = $(this);
		var form = input.closest('form');
		input.val(parseFloat(input.val()).toFixed({{ epo.configs.decimal_places_cost() }}));
		calculate_cost(input.val(), form.find('input[name=qty_ordered]').val());
	});

	$("body").on('change', '#edit-item-modal input[name=qty_ordered]', function(e) {
		e.preventDefault();
		var input = $(this);
		var form = input.closest('form');
		input.val(parseFloat(input.val()).toFixed({{ epo.configs.decimal_places_qty() }}));
		calculate_totalcost(form.find('input[name=cost]').val(), input.val());
	});

	$("body").on('change', '#edit-item-modal input[name=glaccount]', function(e) {
		e.preventDefault();
		var input = $(this);
		var form = input.closest('form');
		get_gl_account(input.val(), function(acct) {
			form.find('.gl-desc').text(acct ? acct.description : '');
		});
	});

/* =============================================================
	Field Change Functions
============================================================= */
	function calculate_totalcost(cost, qty) {
		cost = parseFloat(cost);
		qty  = parseFloat(qty);
		var total = parseFloat(cost * qty);
		total = total.toFixed({{ epo.configs.decimal_places_cost() }});
		$('#edit-item-modal form').find('input[name=cost_total]').val(total);
	}

	function calculate_cost(totalcost, qty) {
		totalcost = parseFloat(totalcost);
		qty  = parseFloat(qty);
		var cost = parseFloat(totalcost / qty);
		cost = cost.toFixed({{ epo.configs.decimal_places_cost() }});
		$('#edit-item-modal form').find('input[name=cost]').val(cost);
	}

/* =============================================================
	Lookup Modal Functions
============================================================= */
	$("body").on('click', '.item-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var itemID = button.data('itemid');
		var description = button.data('description');
		var modal = button.closest('.modal');
		var input = $(modal.attr('data-input'));
		input.val(itemID).change();
		modal_ajax.modal('hide');
	});

	$("body").on('click', '.vxm-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var vendoritemID = button.data('vendoritemid');
		var itemID = button.data('itemid');
		form_edit.find('input[name=vendoritemID]').val(vendoritemID);
		form_edit.find('input[name=itemID]').val(itemID).change();
		modal_ajax.modal('hide');
	});

	$("body").on('click', '.code-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var code = button.data('code');
		var modal = button.closest('.modal');
		var input = $(modal.attr('data-input'));
		input.val(code).change();
		modal_ajax.modal('hide');
	});

/* =============================================================
	AJAX Request Functions
============================================================= */
	function vendor_vxm_itemid_exists(itemID, vendorID, callback) {
		var url = new URI('{{ page.jsonapiURL('map/validate/vxm/itemid') }}');
		url.addQuery('itemID', itemID);
		url.addQuery('vendorID', vendorID);

		$.getJSON(url.toString(), function(exists) {
			callback(exists);
		});
	}

	function get_vxm_itemid(itemID, vendorID, callback) {
		var url = new URI('{{ page.jsonapiURL('map/vxm/itemid') }}');
		url.addQuery('itemID', itemID);
		url.addQuery('vendorID', vendorID).addQuery('primary', 'primary');

		$.getJSON(url.toString(), function(xref) {
			callback(xref);
		});
	}

	function get_vxm_xref(vendorID, vendoritemID, callback) {
		var url = new URI('{{ page.jsonapiURL('map/vxm/') }}');
		url.addQuery('vendorID', vendorID).addQuery('vendoritemID', vendoritemID);

		$.getJSON(url.toString(), function(xref) {
			callback(xref);
		});
	}

	function get_itm_item(itemID, callback) {
		var url = new URI('{{ page.jsonapiURL('inv/item/') }}');
		url.addQuery('itemID', itemID);

		$.getJSON(url.toString(), function(xref) {
			callback(xref);
		});
	}

	function get_po_line(linenbr, callback) {
		var url = URI('{{ page.jsonapiURL('mpo/po/item/') }}');
		url.setQuery('ponbr', '{{ page.wire('input').get.text('ponbr') }}');
		url.setQuery('linenbr', linenbr);
		$.getJSON(url.toString(), function(item) {
			callback(item);
		});
	}

	function get_gl_account(code, callback) {
		var url = URI('{{ page.jsonapiURL('mgl/gl-code/') }}');
		url.setQuery('code', code);
		$.getJSON(url.toString(), function(acct) {
			callback(acct);
		});
	}
});
