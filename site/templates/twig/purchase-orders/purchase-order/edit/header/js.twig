{#
	var                    Description / Instance of
	-------------------------------------------------
	page                   ProcessWire\Page
	epo                    module PurchaseOrderEdit
	epo.configs            module PurchaseOrderEditConfigs
	epo.configs.po         ConfigPo
#}
$(function () {
	var modal_ajax    = $('#ajax-modal');
	var modal_country = $('#country-modal');
	var form_header   = $('#header-form');

/* =============================================================
	Unsaved Changes Alert
============================================================= */
	origForm = form_header.serialize();

	$("body").on("click", "a:not([href^=#], [data-toggle=modal])", function(e) {
		if (form_header.serialize() !== origForm) {
			e.preventDefault();
			var a = $(this);

			swal2.fire({
				title: 'Purchase Order not saved!',
				text: "Are you sure you want to leave this page?",
				icon: 'warning',
				showCancelButton: true,
				confirmButtonText: 'Leave',
				cancelButtonText: 'Stay'
			}).then(function (result) {
				if (result.value) {
					window.location.href = a.attr('href');
				}
			});
		}
	});

/* =============================================================
	AJAX Lookup Modal Functions
============================================================= */
	$("body").on('click', '#ajax-modal .country-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var modal = button.closest('.modal');
		var code = button.data('code');
		var rate = parseFloat(button.data('rate')).toFixed({{ epo.configs.decimal_places_cost() }});
		form_header.find('input[name=exchange_country]').val(code);
		form_header.find('input[name=exchange_rate]').val(rate);
		modal.modal('hide');
	});

	$("body").on('click', '.vendor-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var vendorID = button.data('vendorid');

		get_vendor_address(vendorID, function(vendor) {
			if (vendor) {
				form_header.find('input[name=vendorID]').val(vendorID);
				var address = form_header.find('address.vendor-address');
				address.find('.name').text(vendor.name);
				address.find('.address').text(vendor.address);
				address.find('.address2').text(vendor.address2);
				address.find('.city').text(vendor.city);
				address.find('.state').text(vendor.state);
				address.find('.zip').text(vendor.zip);
				modal_ajax.modal('hide');
			}
		});
	});

	$("body").on('click', '#ajax-modal .shipfrom-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var modal = button.closest('.modal');
		var shipfromID = button.data('shipfromid');
		form_header.find('input[name=shipfromID]').val(shipfromID);
		modal.modal('hide');
	});

	function get_vendor_address(vendorID, callback) {
		var url = URI('{{ page.vi_jsonURL() }}');
		url.setQuery('action', 'get-vendor-address');
		url.setQuery('vendorID', vendorID);
		$.getJSON(url.toString(), function(vendor) {
			callback(vendor);
		});
	}

/* =============================================================
	Validation Functions
============================================================= */
	form_header.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		rules: {
			vendorID: {
				required: true,
				remote: {
					url: '{{ page.po_validateURL(page.ponbr) }}',
					type: "get",
					data: {
						action: 'validate-vendorid'
					}
				}
			},
			shipfromID: {
				required: false,
				remote: {
					url: '{{ page.po_validateURL(page.ponbr) }}',
					type: "get",
					data: {
						action: 'validate-shipfromid',
						vendorID: $('#vendorID').val()
					}
				}
			},
			reference: {
				required: {{ epo.configs.po.force_po_reference() ? 'true' : 'false' }}
			}
		},
		messages: {

		},
		submitHandler: function(form) {
			form.submit();
		}
	});
});
