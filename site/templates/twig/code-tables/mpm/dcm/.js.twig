{% include 'code-tables/mpm/dcm/js/classes.js.twig' %}

$(function() {
	var server   = DcmRequests.getInstance();
	var alert    = DcmAlerts.getInstance();
	var formCode = DcmForm.getInstance();

/* =============================================================
	Event Functions
============================================================= */
	$('#edit-code-modal').on('show.bs.modal', function (event) {
		var button = $(event.relatedTarget); // Button that triggered the modal
		var modal  = $(this);
		var code   = button.data('code');
		if (code) {
			modal.find('.modal-title').text('Edit Code ' + code);
		} else {
			modal.find('.modal-title').text('Add Code');
		}
		formCode.updateInputsFromJson(button.data('json'));
	});

	$('#edit-code-modal').on('shown.bs.modal', function (event) {
		var button = $(event.relatedTarget); // Button that triggered the modal
		var modal  = $(this);
		var code   = button.data('code');

		if (code) {
			formCode.inputs.description.focus();
		} else {
			formCode.inputs.code.focus();
		}
	});

	$("body").on("change", "input[name=code]", function(e) {
		var input = $(this);
		var code = input.val();

		server.validateCode(code, function(exists) {
			if (exists === true) {
				alert.codeExists(code, function(editCode) {
					if (editCode) {
						var modal = input.closest('.modal');

						if (editCode) {
							var button = $('button[data-code="'+code+'"]');
							formCode.updateInputsFromJson(button.data('json'));
						} else {
							modal.modal('hide');
						}
					}
				});
			}
		});
	});

	$("body").on("focusin", "#code-form input:not(input[name=code])", function(e) {
		if (formCode.inputs.code.val() == '') {
			formCode.inputs.code.focus();
		}
	});

/* =============================================================
	Validation Functions
============================================================= */
	var validator = formCode.form.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		rules: {
			code: {
				required: true,
				maxlength: formCode.config.fields.code.maxlength,
				remote: {
					url: '{{ page.jsonApiUrl('mpm/validate/dcm/') }}',
					type: "get",
					data: {
						jqv: 'true',
						new: function() {
							return formCode.inputs.form.attr('data-code') == $('#code').val() ? 'false' : 'true';
						},
					}
				}
			},
			description: {
				maxlength: formCode.config.fields.description.maxlength,
			}
		},
		messages: {
			code: "Please check the Code value (Max Length: {{ formCode.config.fields.code.maxlength }})",
		},
		submitHandler: function(form) {
			var formCode = DcmForm.getInstance();
			var server   = DcmRequests.getInstance();
			var code = formCode.inputs.code.val();

			if (formCode.inputs.form.attr('data-code') == code) {
				form.submit();
			} else {
				server.validateCode(code, function(exists) {
					var alert = DcmAlerts.getInstance();
					if (exists === false) {
						form.submit();
						return true;
					}
					alert.codeExists(code, function(editCode) {
						if (editCode) {
							var modal = formCode.form.closest('.modal');

							if (editCode) {
								var button = $('button[data-code="'+code+'"]');
								formCode.updateInputsFromJson(button.data('json'));
							} else {
								modal.modal('hide');
							}
						} else {
							form.submit();
						}
					});
				});
			}
		}
	});

/* =============================================================
	Form Functions
============================================================= */
	$("#edit-code-modal").on('hidden.bs.modal', function (e) {
		var form = formCode.inputs.form;
		form.validate().resetForm();
		form.find('.is-invalid').removeClass("is-invalid");
		form.find('.is-valid').removeClass("is-valid");
		form.find('.invalid-feedback').remove();
		form.find('.valid-feedback').remove();
	});
})
