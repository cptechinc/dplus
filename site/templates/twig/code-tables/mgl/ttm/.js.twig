{% include 'code-tables/mgl/ttm/js/classes.js.twig' %}

$(function() {
	var server   = TtmRequests.getInstance();
	var alert    = CodeAlerts.getInstance();
	var formCode = TtmForm.getInstance();

/* =============================================================
	Event Functions
	hide, unsaved changes events is handled by scripts/code-tables/modal-events.js
============================================================= */
	{% include 'code-tables/js/events/show-shown.js.twig' %}
	{% include 'code-tables/js/events/input-code-change.js.twig' %}
	{% include 'code-tables/js/events/input-code-force-focus.js.twig' %}

	$('#edit-code-modal').on('shown.bs.modal', function (event) {
		var button = $(event.relatedTarget); // Button that triggered the modal
		var modal  = $(this);
		var code   = button.data('code');

		if (code) {
			formCode.inputs.text1.focus();
		} else {
			formCode.inputs.code.focus();
		}
	});

/* =============================================================
	Validation Functions
============================================================= */
	var validator = formCode.form.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		rules: {
			code: {
				required: true,
				maxlength: formCode.config.fields.code.maxlength,
				remote: {
					url: '{{ page.jsonApiUrl('mgl/validate/ttm/code/') }}',
					type: "get",
					data: {
						jqv: 'true',
						new: function() {
							return formCode.inputs.form.attr('data-code') == $('#code').val() ? 'false' : 'true';
						},
					}
				}
			},
			text1: {
				maxlength: formCode.config.fields.text.maxlength,
			},
			text2: {
				maxlength: formCode.config.fields.text.maxlength,
			},
			text3: {
				maxlength: formCode.config.fields.text.maxlength,
			},
			text4: {
				maxlength: formCode.config.fields.text.maxlength,
			},
		},
		submitHandler: function(form) {
			var formCode = TtmForm.getInstance();
			var server   = TtmRequests.getInstance();
			var code = formCode.inputs.code.val();

			if (formCode.inputs.form.attr('data-code') == code) {
				form.submit();
			} else {
				server.validateCode(code, function(exists) {
					var alert = CodeAlerts.getInstance();
					if (exists === false) {
						form.submit();
						return true;
					}

					alert.codeExists(code, function(editCode) {
						if (editCode) {
							var modal = formCode.form.closest('.modal');

							if (editCode) {
								server.getCode(code, function(response) {
									if (response) {
										modal.find('.modal-title').text('Edit Code');
										formCode.updateInputsFromJson(response);
									}
								});
							} else {
								modal.modal('hide');
							}
						} else {
							form.submit();
						}
					});
				});
			}
		}
	});

})
