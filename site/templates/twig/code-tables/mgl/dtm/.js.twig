{% include 'code-tables/mgl/dtm/js/classes.js.twig' %}

$(function() {
	var ajaxModal = $('#ajax-modal');
	var server   = DtmRequests.getInstance();
	var alert    = DtmAlerts.getInstance();
	var formCode = DtmForm.getInstance();

/* =============================================================
	Event Functions
	hide, unsaved changes events is handled by scripts/code-tables/modal-events.js
============================================================= */
	{% include 'code-tables/js/events/show-shown.js.twig' %}
	{% include 'code-tables/js/events/input-code-change.js.twig' %}
	{% include 'code-tables/js/events/input-code-force-focus.js.twig' %}

	$("body").on("change", "input.glcode", function(e) {
		var input = $(this);
		var code = input.val();

		var noDuplicates = formCode.inputs.validateDuplicateGlCodes();

		if (code == '') {
			var row = input.closest('.code-inputs');
			row.find('.gl-desc').text('');
		}

		if (noDuplicates === false) {
			alert.codeGlAlreadyUsed(code, function() {

			});
			return false;
		}

		if (noDuplicates) {
			server.validateGlCode(code, function(exists) {
				if (exists === true) {
					server.getGlCode(code, function(response) {
						if (response) {
							var row = input.closest('.code-inputs');
							row.find('.gl-desc').text(response.description);
						}
					});
				}
			});
		}
	});

	$("body").on("change", "input.glpct", function(e) {
		var input = $(this);
		var pct = input.val();

		var valid = formCode.inputs.validateGlPctTotal();

		if (valid === false) {
			var total = formCode.inputs.getGlPctTotal();
			alert.pctSumNot100(total, function() {

			});
		}
	});

/* =============================================================
	Lookup Modal Functions
	ajax modal events is handled by scripts/code-tables/ajax-modal.js
============================================================= */

/* =============================================================
	Validation Functions
============================================================= */
	jQuery.validator.addMethod("glAccountAlreadyUsed", function(value, element) {
		return this.optional(element) || formCode.inputs.validateDuplicateGlCode(value);
	}, "Acct Already Used");

	jQuery.validator.addMethod("glPctTotal", function(value, element) {
		return this.optional(element) || formCode.inputs.validateGlPctTotal();
	}, "Precentages do not equal 100");

	var validator = formCode.form.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			if (element.hasParent('.input-group')) {
				element = element.closest('.input-group');
			}
			error.insertAfter(element).addClass('invalid-feedback');
		},
		rules: {
			code: {
				required: true,
				maxlength: formCode.config.fields.code.maxlength,
				remote: {
					url: '{{ page.jsonApiUrl('mgl/validate/dtm/code/') }}',
					type: "get",
					data: {
						jqv: 'true',
						new: function() {
							return formCode.inputs.form.attr('data-code') == $('#code').val() ? 'false' : 'true';
						},
					}
				}
			},
			description: {
				maxlength: formCode.config.fields.description.maxlength,
			},
		},
		submitHandler: function(form) {
			var formCode = DtmForm.getInstance();
			var code     = formCode.inputs.code.val();
			var valid    = true;
			var noDuplicates = formCode.inputs.validateDuplicateGlCodes();

			if (noDuplicates === false) {
				valid = false;
				alert.codeGlAlreadyUsed(code, function() {

				});
			}

			var validPcts = formCode.inputs.validateGlPctTotal();

			if (validPcts === false) {
				valid = false;
				var total = formCode.inputs.getGlPctTotal();
				alert.pctSumNot100(total, function() {

				});
			}

			if (valid) {
				if (formCode.inputs.form.attr('data-code') == code || formCode.inputs.form.attr('data-code') == '') {
					form.submit();
				}
			}
		}
	});

	$(".glcode").each(function () {
		var input = $(this);
		
		input.rules('add', {
			required: false,
			glAccountAlreadyUsed: true,
			normalizer: function(value) {
				if (value.trim() == '') {
					input.val('');
					return '';
				}
				return value;
			},
			remote: {
				url: '{{ page.jsonApiUrl('mgl/validate/gl-code/') }}',
				type: "get",
				data: {
					jqv: 'true',
					code: function() {
						return input.val();
					},
				}
			}
		});
	});

	$(".glpct").each(function () {
		var input = $(this);
		input.rules('add', {
			required: false,
			glPctTotal: true
		});
	});
})
