{% include 'code-tables/min/igm/edit/js/classes.js.twig' %}

$(function() {
	var ajaxModal = $('#ajax-modal');
	var server   = IgmRequests.getInstance();
	var alert    = CodeAlerts.getInstance();
	var formCode = IgmForm.getInstance();

/* =============================================================
	Event Functions
============================================================= */
	$("body").on("change", "input.gl-account", function(e) {
		var input = $(this);
		var code = input.val();
		var descriptionSpan = $('.gl-desc[data-acct="'+ input.attr('name') +'"]');

		descriptionSpan.text('');

		server.getGlCode(code, function(glAcct) {
			if (glAcct) {
				descriptionSpan.text(glAcct.description);
			}
		});
	});

	$("body").on("change", "input[name=code]", function(e) {
		var input = $(this);
		var code = input.val();

		server.validateCode(code, function(exists) {
			if (exists === true) {
				alert.codeExists(code, function(editCode) {
					if (editCode) {
						var uri = URI();
						uri.setQuery('code', code);
						window.location.href = uri.toString();
					} else {
						location.reload();
					}
				});
			}
		});
	});

	$("body").on("focusin", "#code-form input:not(input[name=code])", function(e) {
		if (formCode.inputs.code.val() == '') {
			formCode.inputs.code.focus();
		}
	});

	$("body").on("change", "select[name=surcharge]", function(e) {
		var input = $(this);

		if (input.val() === 'Y') {
			formCode.inputs.surchargetype.removeAttr('readonly');
			formCode.inputs.surchargetype.change();
		} else {
			formCode.inputs.surchargetype.attr('readonly', 'true');
			formCode.inputs.surchargepercent.attr('readonly', 'true');
			formCode.inputs.surchargepercent.val('0.000');
			formCode.inputs.surchargeamount.attr('readonly', 'true');
			formCode.inputs.surchargeamount.val('0.00');
		}
	});

	$("body").on("change", "select[name=surchargetype]", function(e) {
		var input = $(this);

		if (input.val() === 'D') {
			formCode.inputs.surchargeamount.removeAttr('readonly');
			formCode.inputs.surchargepercent.attr('readonly', 'true');
			formCode.inputs.surchargepercent.val('0.000');
		} else {
			formCode.inputs.surchargepercent.removeAttr('readonly');
			formCode.inputs.surchargeamount.attr('readonly', 'true');
			formCode.inputs.surchargeamount.val('0.00');
		}
	});

/* =============================================================
	Lookup Modal Functions
============================================================= */
	ajaxModal.on('show.bs.modal', function (event) {
		var button = $(event.relatedTarget); // Button that triggered the modal
		var modal = $(this);
		modal.attr('data-input', button.data('input'));

		modal.find('.modal-title').text(button.attr('title'));
		modal.resizeModal('xl');
		modal.find('.modal-body').loadin(button.data('lookupurl'), function() {});
	});

	$("body").on('click', '.code-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var modal  = button.closest('.modal');
		var input  = $(modal.attr('data-input'));
		input.val(button.data('code'));
		if (input.data('jqv')) {
			input.change();
		}
		modal.modal('hide');
	});

	$("body").on('submit', '#ajax-modal form', function(e) {
		e.preventDefault();
		var form = $(this);
		var query = form.serialize();
		var action = form.attr('action');
		var search = form.find('input[name=q]').val();
		var url = action + '?' + query;
		form.closest('.modal').find('.modal-title').text('Searching for ' + search);
		form.closest('.modal').find('.modal-body').loadin(url, function() {});
	});

	$("body").on('click', '#ajax-modal .paginator-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var modal  = button.closest('.modal');
		modal.find('.modal-body').load(button.attr('href'));
	});

/* =============================================================
	Validation Functions
============================================================= */
	// var validator = formCode.form.validate({
	// 	errorClass: "is-invalid",
	// 	validClass: "is-valid",
	// 	errorPlacement: function(error, element) {
	// 		error.insertAfter(element).addClass('invalid-feedback');
	// 	},
	// 	rules: {
	// 		code: {
	// 			required: true,
	// 			maxlength: formCode.config.fields.code.maxlength,
	// 			remote: {
	// 				url: '{{ page.jsonApiUrl('min/validate/igm/code/') }}',
	// 				type: "get",
	// 				data: {
	// 					jqv: 'true',
	// 					new: function() {
	// 						return formCode.inputs.form.attr('data-code') == $('#code').val() ? 'false' : 'true';
	// 					},
	// 				}
	// 			}
	// 		},
	// 		description: {
	// 			maxlength: formCode.config.fields.description.maxlength,
	// 		}
	// 	},
	// 	submitHandler: function(form) {
	// 		var formCode = IgmForm.getInstance();
	// 		var server   = IgmRequests.getInstance();
	// 		var code = formCode.inputs.code.val();
	//
	// 		if (formCode.inputs.form.attr('data-code') == code) {
	// 			form.submit();
	// 		} else {
	// 			server.validateCode(code, function(exists) {
	// 				var alert = IgmAlerts.getInstance();
	// 				if (exists === false) {
	// 					form.submit();
	// 					return true;
	// 				}
	//
	// 				alert.codeExists(code, function(editCode) {
	// 					if (editCode) {
	// 						var modal = formCode.form.closest('.modal');
	//
	// 						if (editCode) {
	// 							server.getCode(code, function(response) {
	// 								if (response) {
	// 									modal.find('.modal-title').text('Edit Code ' + code);
	// 									formCode.updateInputsFromJson(response);
	// 								}
	// 							});
	// 						} else {
	// 							modal.modal('hide');
	// 						}
	// 					} else {
	// 						form.submit();
	// 					}
	// 				});
	// 			});
	// 		}
	// 	}
	// });

/* =============================================================
	Form Functions
============================================================= */

})
