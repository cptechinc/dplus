{#
	var                    Description / Instance of
	-------------------------------------------------
	page                   ProcessWire\Page
	warehouse              Warehouse
	m_iwhm                 module CodeTablesIwhm
	url_json_ci            URL to Page(pw_template=ci-json)
#}
$(function() {

	var form = $('#code-edit-form');
	var input_whseID   = form.find('input[name=whseID]');
	var input_name     = form.find('input[name=name]');
	var select_pick	   = form.find('input[name=pickdetail]');
	var select_consign = form.find('input[name=consignment]');
	var input_customer = form.find('input[name=custID]');
	var cash_name 	   = form.find('input[name=cash_name]');
	var select_wh_profit = form.find('select[name=whse_profit]');
	var select_wh_supply = form.find('select[name=whse_supply]');
	var select_wh_asset  = form.find('select[name=whse_asset]');
	var cash_name = form.find('input[name=cash_name]');

	var modal_ajax = $('#ajax-modal');

	var whseIDs = {{ m_iwhm.get_codes_ids()|json_encode()|raw }};

	if ($('#whseID').val() == '') {
		$('#pickdetail').val('N');
		$('#C').val('N');
	}

/* =============================================================
	Event Functions
============================================================= */
	modal_ajax.on('show.bs.modal', function (event) {
		var button = $(event.relatedTarget); // Button that triggered the modal
		var modal = $(this);
		var url = '{{ page.customerlookupURL }}';
		modal.find('.modal-title').text('Search for a Customer');
		modal.resizeModal('xl');
		modal.find('.modal-body').loadin(url, function() {

		});
	});

	$("body").on('click', '.ci-customer', function(e) {
		e.preventDefault();
		var custid = $(this).data('custid');
		var cust_name = $(this).data('cust_name');
		input_customer.val(custid);
		cash_name.val(cust_name);
		modal_ajax.modal('hide');
	});

	$("body").on('submit', '#lookup form', function(e) {
		e.preventDefault();
		var form = $(this);
		var query = form.serialize();
		var action = form.attr('action');
		var search = form.find('input[name=q]').val();
		var url = action + '?' + query;
		form.closest('.modal').find('.modal-title').text('Searching for ' + search);
		form.closest('.modal').find('.modal-body').loadin(url, function() {

		});
	});

	$("body").on('click', '.page-link', function(e) {
		e.preventDefault();
		var href = $(this).attr('href');
		modal_ajax.find('.modal-body').load(href);
	});

/* =============================================================
	Notes Functions
============================================================= */
	modal_notes.on('show.bs.modal', function (event) {
		var button = $(event.relatedTarget) // Button that triggered the modal
		var notetype = button.data('type'); // Extract info from data-* attributes
		var description = button.data('description');
		var ele_notes = $('#notes-' + notetype);
		// If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
		// Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
		var modal = $(this);
		modal.find('.desc').text(description.capitalize());
		modal.find('textarea[name=note]').text(ele_notes.text()).attr('cols', ele_notes.attr('cols') - 1);
		modal.find('input[name=notes-type]').val(notetype);
	});

	modal_notes.on('shown.bs.modal', function (event) {
		var button = $(event.relatedTarget) // Button that triggered the modal
		var modal = $(this);
		modal.find('textarea[name=note]').focus();
	});

	form_notes.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		ignore: ".validate-ignore",
		submitHandler: function(form) {
			var submittedform = $(form);
			var values = {};
			$.each(submittedform.serializeArray(), function() {
				values[this.name] = this.value;
			});

			if (values.action == 'delete-notes') {
				swal2.fire({
					title: 'Confirm Deletion',
					text: "Are you sure you want to delete?",
					icon: 'warning',
					showCancelButton: true,
					confirmButtonClass: 'btn btn-success',
					cancelButtonClass: 'btn btn-danger',
					confirmButtonText: 'Yes'
				}).then((result) => {
					if (result.value) {
						// form.submit() does not work in this instance because the value for
						// input[name=action] would be lost, so we use URL method to delete the values
						// using the values array from above
						var url = URI(submittedform.attr('action'));
						url.setQuery(values);
						window.location.href = url.toString();
					}
				});
			} else {
				var url = URI(submittedform.attr('action'));
				url.setQuery(values);
				window.location.href = url.toString();
				// form.submit();
			}
		}
	});
/* =============================================================
	Validation Functions
============================================================= */
			}
		}
	});

	$("body").on("focusin", "#code-edit-form input:not(#whseID),#code-edit-form select", function(e) {
		if (input_whseID.val() == '') {
			validator.element( "#whseID" );
			input_whseID.focus();
		} else {
			$('#code-edit-form .customer_button').prop('disabled', false);
			$('.notes_button').prop('disabled', false);
		}
	});

	/**
	 * Return if Warehouse ID can be used to save, based upon if
	 * it exists, and if is the one being edited.
	 * @param  {[type]} form [description]
	 * @return {[type]}      [description]
	 */
	function validate_whseID(form) {
		var jform = $(form);

		if (whseIDs.contains(input_whseID.val())) {
			console.log('Warehouse Exists');

			if (input_whseID.val() != jform.data('whseid')) {
				return false;
			}
		}
		return true;
	}
});
