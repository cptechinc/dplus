{% include 'code-tables/min/iwhm/edit/js/classes.js.twig' %}

$(function() {
	var ajaxModal = $('#ajax-modal');
	var server   = IwhmRequests.getInstance();
	var alert    = CodeAlerts.getInstance();
	var formCode = IwhmForm.getInstance();

/* =============================================================
	Unsaved Fields Alert
============================================================= */
	origForm = formCode.form.serialize();

	$("body").on("click", "a:not(#code-edit-form .form_button, #ajax-modal a, .swal2-modal a, .bootstrap-select a)", function(e) {
		if (formCode.form.serialize() !== origForm) {
			e.preventDefault();
			var a = $(this);
			var href = a.attr('href');

			alert.unsavedChanges(function(save) {
				if (save) {
					formCode.form.find('button[type=submit]').click();
				} else {
					var uri = URI();
					uri.setQuery('code', '');

					$.get(uri.toString(), function() {
						window.location.href = href;
					});
				}
			});
		}
	});

/* =============================================================
	Event Functions
============================================================= */
	$("body").on("change", "input[name=code]", function(e) {
		var input = $(this);
		var code = input.val();

		server.validateCode(code, function(exists) {
			if (exists === true) {
				alert.codeExists(code, function(editCode) {
					if (editCode) {
						var uri = URI();
						uri.setQuery('code', code);
						window.location.href = uri.toString();
					} else {
						location.reload();
					}
				});
			} else {
				for (var key in formCode.inputs.warehouses) {
					var input = formCode.inputs.warehouses[key];
					input.val(code);
					input.change();
				}
			}
		});
	});

	$("body").on("change", "input[name=name]", function(e) {
		var input = $(this);
		var name = input.val();

		for (var key in formCode.inputs.warehouses) {
			var input = formCode.inputs.warehouses[key];

			if (input.val() == formCode.inputs.code.val()) {
				input.closest('.form-group.whse').find('.whse-name').text(name);
			}
		}
	});
	
	$("body").on("focusin", "#code-form input:not(input[name=code])", function(e) {
		if (formCode.inputs.code.val() == '') {
			formCode.inputs.code.focus();
		}
	});

	$("body").on("change", "input.whse-input", function(e) {
		var input = $(this);
		input.closest('.form-group.whse').find('.whse-name').text('');

		server.getCode(input.val(), function(warehouse) {
			if (warehouse) {
				input.closest('.form-group.whse').find('.whse-name').text(warehouse.name);
			}
		});
	});

/* =============================================================
	Lookup Modal Functions
	ajax modal events is handled by scripts/code-tables/ajax-modal.js
============================================================= */
	$("body").on('click', '.whse-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var modal  = button.closest('.modal');
		var input  = $(modal.attr('data-input'));
		input.val(button.data('whseid'));
		input.change();
		modal.modal('hide');
	});

/* =============================================================
	Validation Functions
============================================================= */
	var validator = formCode.form.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		rules: {
			code: {
				required: true,
				maxlength: formCode.config.fields.code.maxlength,
				remote: {
					url: '{{ page.jsonApiUrl('min/validate/iwhm/code/') }}',
					type: "get",
					data: {
						jqv: 'true',
						new: function() {
							return formCode.inputs.form.attr('data-code') == $('#code').val() ? 'false' : 'true';
						},
					}
				}
			},
			name: {
				maxlength: formCode.config.fields.name.maxlength,
			},
			whseprofit: {
				required: true,
				maxlength: formCode.config.fields.code.maxlength,
				remote: {
					url: '{{ page.jsonApiUrl('min/validate/iwhm/code/') }}',
					type: "get",
					data: {
						jqv: 'true',
						code: function() {
							return $('#whseprofit').val();
						},
						new: function() {
							var isNew = false;
							isNew = formCode.inputs.form.attr('data-code') != $('#code').val();

							if (isNew) {
								isNew = $('#code').val() == $('#whseprofit').val();
							}
							return isNew ? 'true' : 'false';
						},
					}
				}
			},
			whseasset: {
				required: true,
				maxlength: formCode.config.fields.code.maxlength,
				remote: {
					url: '{{ page.jsonApiUrl('min/validate/iwhm/code/') }}',
					type: "get",
					data: {
						jqv: 'true',
						code: function() {
							return $('#whseasset').val();
						},
						new: function() {
							var isNew = false;
							isNew = formCode.inputs.form.attr('data-code') != $('#code').val();

							if (isNew) {
								isNew = $('#code').val() == $('#whseasset').val();
							}
							return isNew ? 'true' : 'false';
						},
					}
				}
			},
			whsesupply: {
				required: true,
				maxlength: formCode.config.fields.code.maxlength,
				remote: {
					url: '{{ page.jsonApiUrl('min/validate/iwhm/code/') }}',
					type: "get",
					data: {
						jqv: 'true',
						code: function() {
							return $('#whsesupply').val();
						},
						new: function() {
							var isNew = false;
							isNew = formCode.inputs.form.attr('data-code') != $('#code').val();

							if (isNew) {
								isNew = $('#code').val() == $('#whsesupply').val();
							}
							return isNew ? 'true' : 'false';
						},
					}
				}
			},
		},
		submitHandler: function(form) {
			form.submit();
		}
	});

/* =============================================================
	Form Functions
============================================================= */

})
