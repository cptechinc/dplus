$(function() {
	var codeIDs = {{ m_so.get_codes_ids()|json_encode()|raw }};

	var input_codeID = $('#code');

	$('#edit-code-modal').on('shown.bs.modal', function (event) {
		var button = $(event.relatedTarget); // Button that triggered the modal
		var code = button.data('code').toString(); // Extract info from data-* attributes
		var description = button.data('description').toString(); // Extract info from data-* attributes
		var description2 = button.data('description2').toString(); // Extract info from data-* attributes
		var description3 = button.data('description3').toString(); // Extract info from data-* attributes
		var description4 = button.data('description4').toString(); // Extract info from data-* attributes
		var motorclass = button.data('motorclass'); // Extract info from data-* attributes

		var modal = $(this);

		modal.find('input[name=code]').val(code);
		modal.find('input[name=description]').val(description);
		modal.find('input[name=description2]').val(description2);
		modal.find('input[name=description3]').val(description3);
		modal.find('input[name=description4]').val(description4);
		modal.find('input[name=motorclass]').val(motorclass);

		if (code.length) {
			modal.find('.modal-title').text('Editing Code ' + code);
			modal.find('input[name=code]').prop("readonly", true);
			modal.find('input[name=description]').focus();
		} else {
			modal.find('.modal-title').text('Adding a new Code');
			modal.find('input[name=code]').prop("readonly", false);
			modal.find('input[name=code]').focus();
		}
	});

	$("#code-edit-form").validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		rules: {
			code: {
				required: true,
				maxlength: {{ max_length_code }}
			},
			motorclass: {
				required: true,
				maxlength: 4
			}

		},
		messages: {
			code: "Please check the Code value (Max Length: {{ max_length_code }})",
		},
		submitHandler: function(form) {
			var jform = $(form);
			var codeID = input_codeID.val();

			if (validate_codeID(form)) {
				form.submit();
			} else {
				var url = URI('{{ page.url }}');
				url.addQuery('code', codeID);
				var bootstrap = new JsContento();
				var content = bootstrap.open('div', 'class=swal2-content|id=swal2-content');
				content += '<a class="btn btn-secondary mb-2" href="'+url.toString()+'">View Motor Freight Code</a>';
				content += '<br>';
				content += "Do you want to overwrite?";
				content += bootstrap.close('div');

				swal2.fire({
					title: 'Motor Freight Code ' +input_codeID.val() + ' Exists' ,
					text: 'Do you want to overwrite?',
					icon: 'warning',
					showCancelButton: true,
					confirmButtonText: '<i class="fa fa-floppy-o" aria-hidden="true"></i> Yes',
					cancelButtonText: 'No',
					html: content,
				}).then((result) => {
					if (result.value) {
						form.submit();
					}
				});
			}
		}
	});

	/**
	 * Return if Motor Freight Code ID can be used to save, based upon if
	 * it exists, and if is the one being edited.
	 * @param  {[type]} form [description]
	 * @return {[type]}      [description]
	 */
	function validate_codeID(form) {
		var jform = $(form);

		if (codeIDs.contains(input_codeID.val())) {
			console.log('Motor Freight Code Exists');

			if (input_codeID.val() != jform.data('codeid')) {
				return false;
			}
		}
		return true;
	}

})
