$(function () {
	jQuery.validator.addMethod("order_percent1", function(value, element) {
		return this.optional(element) || parseFloat(value) > 0;
	}, "Order Percent 1 must be greater than 0");

	$("#code-edit-form").validate({
		errorClass: "is-invalid",
		// validClass: "is-valid",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		rules: {
			code: {
				required: true,
				maxlength: {{ termscode.get_max_length_code() }}
			},
			method: {
				required: true
			},
			type: {
				required: true
			},
			hold: {
				required: true
			},
			freight: {
				required: true
			},
			order_percent1: {
				required: true,
				order_percent1: true,
			},
		},
		messages: {
			code: "Please review your code (Max Length: {{ termscode.get_max_length_code() }})",
		},
		submitHandler: function(form) {
			form.submit();
		}
	});


	if ($('#code').val() == '') {
		$('.row1').find('#order_percent1').val(100);
		$('.row1').removeClass('collapse');
	}

	var freight_amt = {{ configso.get_freight_allowed_amt() }};

	if (freight_amt == 0) {
		$('#freight').prop("disabled", true);
		$('#freight').val('');
	} else if ($('#method').val() == 'S' && $('#order_percent1').val() == 100) {
		$('#freight').prop("disabled", false);
		$('#freight').val('N');
	}



	$("#code-edit-form #exp_date").change(function() {
		console.log(Date.parse($('#exp_date').val()));
	});

	$("#code-edit-form #method").change(function() {
		if ($('#method').val() == '') {
			$('#eom-terms-form').fadeOut();
			$('#standard-terms-form').fadeOut();
		} else if ($('#method').val() == 'S') {
			$('#standard-terms-form').fadeIn();
			$('#eom-terms-form').hide();
			if ($('#order_percent1').val() == 100 && {{ configso.get_freight_allowed_amt() }} == 0) {
				$('#freight').prop("disabled", true);
				$('#freight').val('');
			} else {
				$('#freight').prop("disabled", false);
				$('#freight').val('N');
			}
		} else if ($('#method').val() == 'E') {
			$('#standard-terms-form').hide();
			$('#eom-terms-form').fadeIn();
			$('#freight').prop("disabled", true);
			$('#freight').val('');
		}
	});

	$("#code-edit-form #type").change(function() {
		if ($('#type').val() == 'CC') {
			$('#credit_card').prop("disabled", false);
		} else {
			$('#credit_card').prop("disabled", true);
		}
	});

	$("#code-edit-form #exp_date").change(function() {
		console.log('test');
	});


// ------------------ Standard Method -----------------

	$("body").on('change', '.order_percent', function(e) {
		var input = $(this);
		var row = input.closest('.percent');
		var index = row.data('index');

		var sumpercent = get_sum_orderpercent();

		if (input.val() == 0) {
			$('.row'+index).find('input:not(.order_percent)').val('');
		}
		if (sumpercent > 100) {
			$('.order_percent').addClass('is-invalid');
			swal2.fire({
				title: 'Invalid Order Percent!',
				text: 'Cannot be more than 100%',
				icon: 'warning',
			});
		} else {
			$('.order_percent').removeClass('is-invalid');

			if (index == 1) {
				if (input.val() < 100 && input.val() > 0) {
					var next = index + 1;
					var nextpercent = 100 - sumpercent;
					$('.row'+next).find('.order_percent').val(nextpercent);
					$('.row'+next).removeClass('collapse');
				}
			} else {
				if (input.val() == 0 && sumpercent == 100 && index != 1) {
					$('.row'+index).addClass('collapse');
					$('.row'+index).find('.order_percent, .discount_percent, .disc_group, .due_group, .due_months, .due_year').val(0)
				} else if (input.val() == 0 && sumpercent < 100) {
					var next = index + 1;
					if ($('.row'+next).find('.order_percent').val() == 0) {
						var nextpercent = 100 - sumpercent;
						input.val(nextpercent);
					} else {
						var nextpercent = 100 - sumpercent;
						input.val($('.row'+next).find('.order_percent').val());
						$('.row'+next).find('.order_percent').val(nextpercent);
						$('.row'+next).removeClass('collapse');
					}
				} else if (input.val() < 100 && input.val() > 0 && sumpercent < 100) {
					var next = index + 1;
					if ($('.row'+next).find('.order_percent').val() == 0) {
						var nextpercent = 100 - sumpercent;
						$('.row'+next).find('.order_percent').val(nextpercent);
						$('.row'+next).removeClass('collapse');
					} else{
						var nextpercent = 100 - sumpercent;
						$('.row6').find('.order_percent').val(nextpercent);
						$('.row6').removeClass('collapse');
					}
				}
			}
		}
	});

	$("body").on('change', '.discount_percent', function(e) {
		var input = $(this);
		var row = input.closest('.discount');
		var index = row.data('index');

		if (input.val() > 100) {
			input.val(100);
			swal2.fire({
				title: 'Invalid Discount Percent!',
				text: 'Cannot be more than 100%',
				icon: 'warning',
			});
		} else {
			$('.discount_percent'+index).removeClass('is-invalid');

			if (input.val() == 0) {
				$('.row'+index).find('.day, .days, .date').val('');
				$('.row'+index).find('.day, .days, .disc_date').prop('readonly', true);
			} else {
				$('.discount_percent').removeClass('is-invalid');
				$('.row'+index).find('.day, .days, .disc_date').prop('readonly', false);
			}
		}
	});

	$("body").on('change', '.day', function(e) {
		var input = $(this);
		var row = input.closest('.discount');
		var index = row.attr('data-index');

		if (input.val() < 0 || input.val() > 31) {
			input.val(0);
			swal2.fire({
				title: 'Invalid Number of Days!',
				text: 'Must be bewteen 0 and 31',
				icon: 'warning',
			});
		}
	});

	$("body").on('change', '.due_day', function(e) {
		var input = $(this);
		var row = input.closest('.due');
		var index = row.data('index');

		if (input.val() < 0 || input.val() > 31) {
			input.val(0);
			swal2.fire({
				title: 'Invalid Number of Days!',
				text: 'Must be bewteen 0 and 31',
				icon: 'warning',
			});
		} else if (input.val() == 0) {
			$('.row'+index).find($('.due_months')).val(0);
			$('.row'+index).find($('.due_months')).prop('readonly', true);
		} else {
			$('.row'+index).find($('.due_months')).prop('readonly', false);
		}
	});

	$("body").on('change', '.due_date', function(e) {
		var input = $(this);
		var row = input.closest('.due');
		var index = row.data('index');

		if (input.val() == 0) {
			$('.row'+index).find($('.due_year')).val(0);
			$('.row'+index).find($('.due_year')).prop('readonly', true);
		} else {
			$('.row'+index).find($('.due_year')).prop('readonly', false);
		}
	});

	$("body").on('change', '.disc_group', function(e) {
		var input = $(this);
		var row = input.closest('.discount');
		var index = row.attr("data-index");

		console.log(index);

		if (input.val() != 0) {
			$('.row'+index).find('.disc_group').removeClass('is-invalid');
			$('input.disc_group').not(this).val(0);
		}

		if (input.val() == 0 && $('input.disc_group').not(this).val() == 0) {
			input.val(1);
			swal2.fire({
				title: 'Warning!',
				text: 'Days, Day or Date must be greater than 0!',
				icon: 'warning',
			});
		}
	});

	$("body").on('change', '.due_days, .due_day, .due_date', function(e) {
		var input = $(this);
		var row = input.closest('.due');
		var index = row.attr("data-index");

		if (input.val() != 0) {
			$('input.due_group').not(this).val(0);
		}

		if (input.val() == 0 && $('input.due_group').not(this).val() == 0) {
			input.val(1);
			swal2.fire({
				title: 'Warning!',
				text: 'Days, Day or Date must be greater than 0!',
				icon: 'warning',
			});
		}
	});

	$("body").on('change', '.due_months', function(e) {
		var input = $(this);
		var row = input.closest('.due');
		var index = row.attr("data-index");

		if (input.val() < 0 || input.val() > 99) {
			input.val(0);
			swal2.fire({
				title: 'Warning!',
				text: 'Plus Months needs to be between 0 and 99!',
				icon: 'warning',
			});
		}
	});

	$("body").on('change', '.due_year', function(e) {
		var input = $(this);
		var row = input.closest('.due');
		var index = row.attr("data-index");

		if (input.val() < 0 || input.val() > 9) {
			input.val(0);
			swal2.fire({
				title: 'Warning!',
				text: 'Plus Years needs to be between 0 and 9!',
				icon: 'warning',
			});
		}
	});

	function get_sum_orderpercent() {
		var sum = 0;
		$('.order_percent').each(function( index ) {
			var input = $(this);
			sum += parseFloat(input.val());
		});
		return sum;
	}


// ------------------ End Standard Method -----------------



// ------------------ Start EOM Method -----------------

	$("body").on('change', '.thru_day', function(e) {
		var input = $(this);
		var row = input.closest('.day');
		var index = row.data('index');
		var newfieldvalue = parseFloat(input.val()) + 1;

		if ((input.val() > 29 && input.val() != 99) || input.val() == $('.row'+(index)).find('.from_day').val() || input.val() < $('.row'+(index)).find('.from_day').val() ) {
			input.val(29);
			swal2.fire({
				title: 'Invalid Thru Day!',
				text: 'Must be equal to 99 or less than 30. Cannot be less than or equal to From Day',
				icon: 'warning',
			});
		} else {
			if (input.val() == 99) {
				$('.row'+(index+1)).addClass('collapse');
				$('.row'+(index+1)).find($('.from_day, .thru_day, .eom_percent, .eom_day, .eom_disc_months, .eom_dueday, .eom_months')).val(0);
				$('.row'+(index+2)).addClass('collapse');
				$('.row'+(index+2)).find($('.from_day, .thru_day, .eom_percent, .eom_day, .eom_disc_months, .eom_dueday, .eom_months')).val(0);
			} else if ( (input.val() != 99) && (input.val() < 30) && ( input.val() > $('.row'+(index)).find($('.from_day')).val() ) ) {
				$('.row'+(index+1)).removeClass('collapse');
				$('.row'+(index+1)).find($('.from_day')).val(newfieldvalue);
				$('.row'+(index+1)).find($('.thru_day')).val(99);
				$('.row'+(index+1)).find($('.eom_dueday')).val(1);
			}
		}

	});

	$("body").on('change', '.eom_percent', function(e) {
		var input = $(this);
		var row = input.closest('.eom_discount');
		var index = row.attr('row');

		if (input.val() > 100) {
			input.val(100);
			swal2.fire({
				title: 'Invalid Discount Percent!',
				text: 'Cannot be more than 100%',
				icon: 'warning',
			});
		} else {
			$('.eom_percent'+index).removeClass('is-invalid');

			if (input.val() == 0) {
				$('.row'+index).find('.eom_day, .eom_disc_months').val(0);
				$('.row'+index).find('.eom_day, .eom_disc_months').prop('readonly', true);
			} else {
				if ($('.row'+index).find('.eom_day').val() == 0 && $('.row'+index).find('.eom_disc_months').val() == 0) {
					$('.row'+index).find('.eom_day').val(1);
					$('.row'+index).find('.eom_disc_months').val(0);
					$('.row'+index).find('.eom_day, .eom_disc_months').prop('readonly', false);
				}
			}
		}
	});

	$("body").on('change', '.eom_day', function(e) {
		var input = $(this);
		var row = input.closest('.eom_discount');
		var index = row.attr('row');

		if ($('.row'+index).find('.eom_percent').val() > 0 && $('.row'+index).find('.eom_day').val() == 0) {
			$('.row'+index).find('.eom_day').val(1);
			swal2.fire({
				title: 'Warning!',
				text: 'Due Day is required if Due Percent is greater than 0!',
				icon: 'warning',
			});
		}

		if (input.val() < 1 || input.val() > 31) {
			input.val(1);
			swal2.fire({
				title: 'Invalid Number of Days!',
				text: 'Must be bewteen 1 and 31',
				icon: 'warning',
			});
		}
	});

	$("body").on('change', '.eom_disc_months', function(e) {
		var input = $(this);
		var row = input.closest('.eom_discount');
		var index = row.data('index');

		if (input.val() < 0 || input.val() > 31) {
			input.val(0);
			swal2.fire({
				title: 'Invalid Number of Months!',
				text: 'Must be bewteen 0 and 99',
				icon: 'warning',
			});
		}
	});

	$("body").on('change', '.eom_months', function(e) {
		var input = $(this);
		var row = input.closest('.due');
		var index = row.data('index');

		if (input.val() < 1 || input.val() > 31) {
			input.val(0);
			swal2.fire({
				title: 'Invalid Number of Months!',
				text: 'Must be bewteen 0 and 99',
				icon: 'warning',
			});
		}
	});

	$("body").on('change', '.eom_dueday', function(e) {
		var input = $(this);
		var row = input.closest('.due');
		var index = row.data('index');

		if (input.val() < 1 || input.val() > 31) {
			input.val(1);
			swal2.fire({
				title: 'Invalid Number of Days!',
				text: 'Due Day is required if Thru Day is not 0!',
				icon: 'warning',
			});
		}
	});


// ------------------ End EOM Method -----------------


	var form = $('#code-edit-form'),
	origForm = form.serialize();

	$("body").on("click", "a:not(.form_button, #ajax-modal a)", function(e) {
		if (form.serialize() !== origForm) {
			e.preventDefault();
			var a = $(this);
			var href = a.attr('href');

			swal2.fire({
				title: 'Changes have occurred!',
				text: 'Do you want to save?',
				icon: 'warning',
				showCancelButton: true,
				confirmButtonText: '<i class="fa fa-floppy-o" aria-hidden="true"></i> Yes',
				cancelButtonText: 'No',
			}).then((result) => {
				if (result.value) {
					form.find('button[type=submit]').click();
				} else if (result.dismiss === Swal.DismissReason.cancel) {
					// Send HTTP GET Request to remove Record Lock
					$.get('{{ page.url }}', function() {
						window.location.href = href;
					});
				}
			});
		}
	});

});
