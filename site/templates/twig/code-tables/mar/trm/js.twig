$(function () {
	jQuery.validator.addMethod("order_percent1", function(value, element) {
		return this.optional(element) || parseFloat(value) > 0;
	}, "Order Percent 1 must be greater than 0");

	$("#code-edit-form").validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		rules: {
			code: {
				required: true,
				maxlength: {{ termscode.get_max_length_code() }}
			},
			order_percent1: {
				required: true,
				order_percent1: true,
			},
		},
		messages: {
			code: "Please review your code (Max Length: {{ termscode.get_max_length_code() }})",
		},
		submitHandler: function(form) {
			form.submit();
		}
	});

// start type
	if ($('#type').val() == 'CC') {
		$('#credit_card').prop("readonly", false);
	} else {
		$('#credit_card').prop("readonly", true);
	}

	$("#code-edit-form #type").change(function() {
		if ($('#type').val() == 'CC') {
			$('#credit_card').prop("readonly", false);
		} else {
			$('#credit_card').prop("readonly", true);
		}
	});
// end type

// start method
	// displays standard and eom tables on load
	if ($('#method').val() == '') {
		$('#eom-terms-form').hide();
		$('#standard-terms-form').hide();
	} else if ($('#method').val() == 'S') {
		$('#standard-terms-form').show();
		$('#eom-terms-form').hide();
	} else if ($('#method').val() == 'E') {
		$('#standard-terms-form').hide();
		$('#eom-terms-form').show();
	}

	// displays standard and eom tables when method is changed
	$("#code-edit-form #method").change(function() {
		if ($('#method').val() == '') {
			$('#eom-terms-form').fadeOut();
			$('#standard-terms-form').fadeOut();
		} else if ($('#method').val() == 'S') {
			$('#standard-terms-form').fadeIn();
			$('#eom-terms-form').hide();
		} else if ($('#method').val() == 'E') {
			$('#standard-terms-form').hide();
			$('#eom-terms-form').fadeIn();
		}
	});
// end method

// ------------------ Method S Discount -----------------

	// checks to see if percent is 0 and greys out day, days, and date
	for ( var row = 1, l = 7; row < l; row++ ) {
		if (parseFloat($('#percent' + row.toString()).val()) == 0) {
			$('#days' + row.toString()).val(0);
			$('#day' + row.toString()).val(0);
			$('#date' + row.toString()).val(0);
			$('#days' + row.toString()).prop("readonly", true);
			$('#day' + row.toString()).prop("readonly", true);
			$('#date' + row.toString()).prop("readonly", true);
		} else if (parseFloat($('#percent' + row.toString()).val()) != 0) {
			$('#days' + row.toString()).prop("readonly", false);
			$('#day' + row.toString()).prop("readonly", false);
			$('#date' + row.toString()).prop("readonly", false);
		}
	}

	$("body").on('change', '.order_percent', function(e) {
		var input = $(this);
		var row = input.closest('.percent');
		var index = row.data('index');

		var sumpercent = get_sum_orderpercent();

		if (input.val() == 0) {
			$('.row'+index).find('input:not(.order_percent)').val('');
		}
		if (sumpercent > 100) {
			$('.order_percent').addClass('is-invalid');
			swal2.fire({
				title: 'Invalid Order Percent!',
				text: 'Cannot be more than 100%',
				icon: 'warning',
			});
		} else {
			$('.order_percent').removeClass('is-invalid');

			if (index == 1) {
				if (input.val() < 100 && input.val() > 0) {
					var next = index + 1;
					var nextpercent = 100 - sumpercent;
					$('.row'+next).find('.order_percent').val(nextpercent);
					$('.row'+next).removeClass('collapse');
				}
			} else {
				if (input.val() == 0 && sumpercent < 100) {
					var next = index + 1;
					if ($('.row'+next).find('.order_percent').val() == 0) {
						var nextpercent = 100 - sumpercent;
						input.val(nextpercent);
					} else {
						var nextpercent = 100 - sumpercent;
						input.val($('.row'+next).find('.order_percent').val());
						$('.row'+next).find('.order_percent').val(nextpercent);
						$('.row'+next).removeClass('collapse');
					}
				} else if (input.val() < 100 && input.val() > 0 && sumpercent < 100) {
					var next = index + 1;
					if ($('.row'+next).find('.order_percent').val() == 0) {
						var nextpercent = 100 - sumpercent;
						$('.row'+next).find('.order_percent').val(nextpercent);
						$('.row'+next).removeClass('collapse');
					} else{
						var nextpercent = 100 - sumpercent;
						$('.row6').find('.order_percent').val(nextpercent);
						$('.row6').removeClass('collapse');
					}
				}
			}
		}
	});

	$("body").on('change', '.discount_percent', function(e) {
		var input = $(this);
		var row = input.closest('.discount');
		var index = row.data('index');

		if (input.val() == 0) {
			$('.row'+index).find('.discount_percent, .day, .days, .date').val(0);
			$('.row'+index).find('.day, .days, .date').prop('readonly', true);
		}

		// if (input.val() > 100) {
		// 	$('.percent').addClass('is-invalid');
		// 	swal2.fire({
		// 		title: 'Invalid Discount Percent!',
		// 		text: 'Cannot be more than 100%',
		// 		icon: 'warning',
		// 	});
		// } else {
		// 	$('.percent').removeClass('is-invalid');
		// 	$('.row'+index).find('input:discount').prop('readonly', false);
		// 	$('.row'+index).find('input:discount').val('');
		// }
	});

	function get_sum_orderpercent() {
		var sum = 0;
		$('.order_percent').each(function( index ) {
			var input = $(this);
			sum += parseFloat(input.val());
		});
		return sum;
	}



	//
	//
	// $("#code-edit-form").change(function() {
	// 	for ( var row = 1, l = 7; row < l; row++ ) {
	// 		// if form is changed and percent is changed to 0, days, day, and date are changed to 0 and greyed out
	// 		if (parseFloat($('#percent' + row.toString()).val()) == 0) {
	// 			$('#days' + row.toString()).val(0);
	// 			$('#day' + row.toString()).val(0);
	// 			$('#date' + row.toString()).val(0);
	// 			$('#days' + row.toString()).prop("readonly", true);
	// 			$('#day' + row.toString()).prop("readonly", true);
	// 			$('#date' + row.toString()).prop("readonly", true);
	// 		} else if (parseFloat($('#percent' + row.toString()).val()) != 0) {
	// 			$('#days' + row.toString()).prop("readonly", false);
	// 			$('#day' + row.toString()).prop("readonly", false);
	// 			$('#date' + row.toString()).prop("readonly", false);
	// 		}
	//
	// 		if (parseFloat($('#days' + row.toString()).val()) != 0 || parseFloat($('#day' + row.toString()).val()) != 0 || parseFloat($('#date' + row.toString()).val()) != 0) {
	// 			if (parseFloat($('#days' + row.toString()).val()) != 0) {
	// 				$('#day' + row.toString()).val(0);
	// 				$('#date' + row.toString()).val(0);
	// 			} else if (parseFloat($('#day' + row.toString()).val()) != 0) {
	// 				$('#days' + row.toString()).val(0);
	// 				$('#date' + row.toString()).val(0);
	// 			} else if (parseFloat($('#date' + row.toString()).val()) != 0) {
	// 				$('#days' + row.toString()).val(0);
	// 				$('#day' + row.toString()).val(0);
	// 			}
	// 		}
	// 	}
	// });

// ------------------ End Method S Discount -----------------


	var form = $('#code-edit-form'),
	origForm = form.serialize();

	$("body").on("click", "a:not(.form_button, #ajax-modal a)", function(e) {
		if (form.serialize() !== origForm) {
			e.preventDefault();
			var a = $(this);
			var href = a.attr('href');

			swal2.fire({
				title: 'Changes have occurred!',
				text: 'Do you want to save?',
				icon: 'warning',
				showCancelButton: true,
				confirmButtonText: '<i class="fa fa-floppy-o" aria-hidden="true"></i> Yes',
				cancelButtonText: 'No',
			}).then((result) => {
				if (result.value) {
					form.find('button[type=submit]').click();
				} else if (result.dismiss === Swal.DismissReason.cancel) {
					// Send HTTP GET Request to remove Record Lock
					$.get('{{ page.url }}', function() {
						window.location.href = href;
					});
				}
			});
		}
	});

});
