{% include 'code-tables/mar/spm/rep/form/js/classes.js.twig' %}

$(function() {
	var modalAjax = $('#ajax-modal');
	var server   = SpmRequests.getInstance();
	var alert    = CodeAlerts.getInstance();
	var formCode = SpmForm.getInstance();

/* =============================================================
	Event Change Functions
============================================================= */
	$("body").on('change', '.sales-figures', function(e) {
		e.preventDefault();
		var input = $(this);
		var precision = intParse(input.data('precision'));
		var value = floatParse(input.val()).toFixed(precision);
		input.val(value);
	});

	$("body").on('change', 'input[name=id]', function(e) {
		e.preventDefault();
		var input = $(this);

		if ($('#spm-form').data('new') === true) {
			server.validateCode(input.val(), function(exists) {
				alert.codeExists(input.val(), function(editCode) {
					if (editCode) {
						var uri = URI();
						uri.setQuery('id', input.val());
						window.location.href = uri.toString();
					} else {
						location.reload();
					}
				});
			});
		}
	});

	$("body").on('change', 'input[name=userid]', function(e) {
		e.preventDefault();
		var input = $(this);

		$('.logm-username').text('');

		server.getLogmUser(input.val(), function(user) {
			if (user) {
				$('.logm-username').text(user.name);
			}
		})
	});

	$("body").on('change', 'input[name=groupid]', function(e) {
		e.preventDefault();
		var input = $(this);

		$('.group-description').text('');

		server.getGroupCode(input.val(), function(group) {
			if (group) {
				$('.group-description').text(group.description);
			}
		})
	});

	$("body").on('change', 'input[name=vendorid]', function(e) {
		e.preventDefault();
		var input = $(this);

		$('.vendor-name').text('');

		server.getVendor(input.val(), function(vendor) {
			if (vendor) {
				$('.vendor-name').text(vendor.name);
			}
		})
	});

/* =============================================================
	AJAX Lookup Modal Functions
============================================================= */
	modalAjax.on('show.bs.modal', function (event) {
		var button = $(event.relatedTarget); // Button that triggered the modal
		var modal = $(this);
		var url = button.data('lookupurl');
		modal.attr('data-input', button.data('input'));
		modal.find('.modal-title').text(button.attr('title'));
		modal.resizeModal('xl');
		modal.find('.modal-body').loadin(url, function() {});
	});

	$("body").on('click', '.user-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var id     = button.data('userid');
		var modal  = button.closest('.modal');
		var input  = $(modal.attr('data-input'));
		input.val(id);
		input.change();
		modal.modal('hide');
	});

	$("body").on('click', '.vendor-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var id     = button.data('vendorid');
		var modal  = button.closest('.modal');
		$(modal.attr('data-input')).val(id);
		modal.modal('hide');
	});

	$("body").on('click', '.code-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var id     = button.data('code');
		var modal  = button.closest('.modal');
		$(modal.attr('data-input')).val(id);
		modal.modal('hide');
	});

	$("body").on('submit', '#ajax-modal form', function(e) {
		e.preventDefault();
		var form   = $(this);
		var query  = form.serialize();
		var action = form.attr('action');
		var search = form.find('input[name=q]').val();
		var url    = action + '?' + query;
		var modal  = form.closest('.modal');
		modal.find('.modal-title').text('Searching for ' + search);
		modal.find('.modal-body').loadin(url, function() {});
	});

	$("body").on('click', '#ajax-modal .paginator-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var href   = button.attr('href');
		var modal  = button.closest('.modal');
		modal.find('.modal-body').load(href);
	});

/* =============================================================
	Validation Functions
============================================================= */
	formCode.form.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		rules: {
			id: {
				required: true,
				remote: {
					url: '{{ page.jsonapiURL('mar/validate/spm/code/') }}',
					type: "get",
					data: {
						jqv: 'true',
						code: function() {
							return $('input[name=id]').val();
						},
						new: function() {
							return $('#spm-form').data('new') === true ? 'true' : 'false';
						}
					}
				}
			},
			groupid: {
				required: false,
				remote: {
					url: '{{ page.jsonapiURL('mar/validate/spgpm/code/') }}',
					type: "get",
					data: {
						jqv: 'true',
						code: function() {
							return $('input[name=groupid]').val();
						}
					}
				}
			},
			vendorID: {
				required: false,
				remote: {
					url: '{{ page.jsonapiURL('map/validate/vendorid/') }}',
					type: "get",
					data: {}
				}
			},
			loginid: {
				required: false,
				remote: {
					url: '{{ page.jsonapiURL('msa/validate/logm/id/') }}',
					type: "get",
					data: {
						loginID: function() {
							return $('input[name=loginid]').val();
						}
					}
				}
			}
		},
		submitHandler: function(form) {
			form.submit();
		}
	});
});
