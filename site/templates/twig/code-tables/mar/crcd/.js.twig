{% include 'code-tables/mar/crcd/js/classes.js.twig' %}

$(function() {
	var ajaxModal = $('#ajax-modal');
	var server   = CrcdRequests.getInstance();
	var alert    = CodeAlerts.getInstance();
	var formCode = CodeForm.getInstance();

/* =============================================================
	Event Functions
	hide, unsaved changes events is handled by scripts/code-tables/modal-events.js
============================================================= */
	{% include 'code-tables/js/events/show-shown.js.twig' %}

	$("body").on("change", "input[name=code]", function(e) {
		var input = $(this);
		var code = input.val();

		server.validateCode(code, function(exists) {
			if (exists === true) {
				alert.codeExists(code, function(editCode) {
					if (editCode) {
						var modal = input.closest('.modal');

						if (editCode) {
							server.getCode(code, function(response) {
								if (response) {
									modal.find('.modal-title').text('Edit Code ' + code);
									formCode.updateInputsFromJson(response);
								}
							});
						} else {
							modal.modal('hide');
						}
					}
				});
			}
		});
	});

	$("body").on("focusin", "#code-form input:not(input[name=code])", function(e) {
		if (formCode.inputs.code.val() == '') {
			formCode.inputs.code.focus();
		}
	});

	$("body").on("change", "input[name=servicerate], input[name=transactioncost], input[name=cc_surcharge_percent]", function(e) {
		var input = $(this);
		var fieldname = input.attr('name');

		if (input.val() == '') {
			input.val(0);
		}
		var value = parseFloat(input.val());
		input.val(value.toFixed(formCode.config.fields[fieldname].precision));
	});

	$("body").on("change", "input[name=custid]", function(e) {
		var input = $(this);
		var inputParent = input.closest('.form-group');
		var descriptionField = inputParent.find('.customer-name');
		descriptionField.text('');
		
		server.getCustomer(input.val(), function(customer) {
			if (customer) {
				descriptionField.text(customer.name);
			}
		});
	});

	$("body").on("change", "input.gl-account", function(e) {
		var input = $(this);
		var inputParent = input.closest('.form-group');
		var descriptionField = inputParent.find('.gl-acct-name');
		descriptionField.text('');
		
		server.getGlCode(input.val(), function(code) {
			console.log(code);
			if (code) {
				descriptionField.text(code.description);
			}
		});
	});

/* =============================================================
	Lookup Modal Functions
============================================================= */
	ajaxModal.on('show.bs.modal', function (event) {
		var button = $(event.relatedTarget); // Button that triggered the modal
		var modal = $(this);
		modal.attr('data-input', button.data('input'));

		modal.find('.modal-title').text(button.attr('title'));
		modal.resizeModal('xl');
		modal.find('.modal-body').loadin(button.data('lookupurl'), function() {});
	});

	$("body").on('click', '.code-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var modal  = button.closest('.modal');
		var input  = $(modal.attr('data-input'));
		input.val(button.data('code'));
		if (input.data('jqv')) {
			input.change();
		}
		modal.modal('hide');
	});

	$("body").on('click', '.customer-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var modal  = button.closest('.modal');
		var input  = $(modal.attr('data-input'));
		input.val(button.data('custid'));
		if (input.data('jqv')) {
			input.change();
		}
		modal.modal('hide');
	});

	$("body").on('submit', '#ajax-modal form', function(e) {
		e.preventDefault();
		var form = $(this);
		var query = form.serialize();
		var action = form.attr('action');
		var search = form.find('input[name=q]').val();
		var url = action + '?' + query;
		form.closest('.modal').find('.modal-title').text('Searching for ' + search);
		form.closest('.modal').find('.modal-body').loadin(url, function() {});
	});

	$("body").on('click', '#ajax-modal .paginator-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var modal  = button.closest('.modal');
		modal.find('.modal-body').load(button.attr('href'));
	});

/* =============================================================
	Validation Functions
============================================================= */
	var validator = formCode.form.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		rules: {
			code: {
				required: true,
				maxlength: formCode.config.fields.code.maxlength,
				remote: {
					url: '{{ page.jsonApiUrl('mar/validate/crcd/code/') }}',
					type: "get",
					data: {
						jqv: 'true',
						new: function() {
							return formCode.inputs.form.attr('data-code') == $('#code').val() ? 'false' : 'true';
						},
					}
				}
			},
			description: {
				maxlength: formCode.config.fields.description.maxlength,
			},
			custid: {
				required: false,
				remote: {
					url: '{{ page.jsonApiUrl('mar/validate/custid/') }}',
					type: "get",
					data: {
						jqv: 'true',
						custID: function( ) {
							return $('input[name=custid]').val();
						}
					}
				}
			},
			gl_account: {
				required: false,
				remote: {
					url: '{{ page.jsonApiUrl('mgl/validate/mhm/code/') }}',
					type: "get",
					data: {
						jqv: 'true',
						code: function( ) {
							return $('input[name=gl_account]').val();
						}
					}
				}
			},
			gl_account_charge: {
				required: false,
				remote: {
					url: '{{ page.jsonApiUrl('mgl/validate/mhm/code/') }}',
					type: "get",
					data: {
						jqv: 'true',
						code: function( ) {
							return $('input[name=gl_account_charge]').val();
						}
					}
				}
			},
		},
		submitHandler: function(form) {
			var formCode = CodeForm.getInstance();
			var server   = CrcdRequests.getInstance();
			var code = formCode.inputs.code.val();

			if (formCode.inputs.form.attr('data-code') == code) {
				form.submit();
			} else {
				server.validateCode(code, function(exists) {
					var alert = CodeAlerts.getInstance();
					if (exists === false) {
						form.submit();
						return true;
					}

					alert.codeExists(code, function(editCode) {
						var modal = formCode.form.closest('.modal');

						if (editCode) {
							server.getCode(code, function(response) {
								if (response) {
									modal.find('.modal-title').text('Edit Code ' + code);
									formCode.updateInputsFromJson(response);
								} else {
									modal.modal('hide');
								}
							});
						} else {
							modal.modal('hide');
						}
					});
				});
			}
		}
	});
})
