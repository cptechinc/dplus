$(function() {
/* =============================================================
	Notes Functions
============================================================= */
	var notesModal = $('#notes-modal');
	var formNotes = notesModal.find('form');
	var alert     = Alerts.getInstance();

	notesModal.on('show.bs.modal', function (event) {
		var button = $(event.relatedTarget) // Button that triggered the modal
		var notetype = button.data('type'); // Extract info from data-* attributes
		var description = button.data('description');
		var ele_notes = $('textarea.qnotes[readonly][data-type="'+ notetype+'"]');
		// If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
		// Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
		var modal = $(this);
		modal.find('.desc').text(description.capitalize());
		modal.find('textarea[name=note]').val('');
		modal.find('textarea[name=note]').val(ele_notes.text()).attr('cols', ele_notes.attr('cols'));
		modal.find('input[name=type]').val(notetype);

		var deleteLink = modal.find('a.delete_button');
		var deleteUrl = URI(deleteLink.attr('href'));
		deleteUrl.setQuery('type', notetype);
		deleteLink.attr('href', deleteUrl.toString());
	});

	notesModal.on('shown.bs.modal', function (event) {
		var button = $(event.relatedTarget) // Button that triggered the modal
		var modal = $(this);
		var form = modal.find('form');
		form.attr('data-serialized', form.serialize());
		modal.find('textarea[name=note]').focus();
	});

	notesModal.on('hide.bs.modal', function (e) {
		var modal = $(this);
		var form = modal.find('form');
		var originalValues = form.attr('data-serialized');

		if (originalValues) {
			if (originalValues != form.serialize()) {
				e.preventDefault();

				alert.unsavedChanges(function(confirmSave) {
					if (confirmSave) {
						form.submit();
						return true;
					}
					form.attr('data-serialized', '');
					modal.modal('hide');
				});
			}
		}
	});

	formNotes.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		ignore: ".validate-ignore",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		submitHandler: function(form) {
			var submittedform = $(form);
			var values = {};
			
			$.each(submittedform.serializeArray(), function() {
				values[this.name] = this.value;
			});

			form.submit();
		}
	});
});
