{% include 'code-tables/mar/ctm/edit/js/classes.js.twig' %}

$(function() {
	var ajaxModal = $('#ajax-modal');
	var server   = CtmRequests.getInstance();
	var alert    = CodeAlerts.getInstance();
	var formCode = CodeForm.getInstance();

/* =============================================================
	Unsaved Fields Alert
============================================================= */
	origForm = formCode.form.serialize();

	$("body").on("click", "a:not(#code-form .form_button, #ajax-modal a, .swal2-modal a, .bootstrap-select a, #code-form .delete_button)", function(e) {
		if (formCode.form.serialize() !== origForm) {
			e.preventDefault();
			var a = $(this);
			var href = a.attr('href');

			alert.unsavedChanges(function(save) {
				if (save) {
					var validator = formCode.form.validate();
					if (validator.valid()) {
						formCode.form.find('button[type=submit]').click();
					}
				} else {
					var uri = URI();
					uri.setQuery('code', '');

					$.get(uri.toString(), function() {
						window.location.href = href;
					});
				}
			});
		}
	});

/* =============================================================
	Event Functions
============================================================= */
	$("body").on("change", "input[name=code]", function(e) {
		var input = $(this);
		var code = input.val();

		server.validateCode(code, function(exists) {
			if (exists === true) {
				alert.codeExists(code, function(editCode) {
					if (editCode) {
						var uri = URI();
						uri.setQuery('code', code);
						window.location.href = uri.toString();
					} else {
						location.reload();
					}
				});
			}
		});
	});

	$("body").on("focusin", "#code-form input:not(input[name=code])", function(e) {
		if (formCode.inputs.code.val() == '') {
			formCode.inputs.code.focus();
		}
	});

	$("body").on("change", "input.gl-account", function(e) {
		var input = $(this);
		var inputParent = input.closest('.form-group');
		var descriptionField = inputParent.find('.gl-acct-name');
		descriptionField.text('');

		if (input.val() == '') {
			formCode.form.validate().element('#' + input.attr('id'));
			return true;
		}
		
		server.getGlCode(input.val(), function(code) {
			if (code) {
				descriptionField.text(code.description);
			}
		});
	});

/* =============================================================
	Lookup Modal Functions
	ajax modal events is handled by scripts/code-tables/ajax-modal.js
============================================================= */

/* =============================================================
	Validation Functions
============================================================= */
	var validator = formCode.form.validate({
		onkeyup: false,
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		rules: {
			code: {
				required: true,
				maxlength: formCode.config.fields.code.maxlength,
				remote: {
					url: '{{ page.jsonApiUrl('mar/validate/ctm/code/') }}',
					type: "get",
					data: {
						jqv: 'true',
						new: function() {
							return formCode.inputs.form.attr('data-code') == $('#code').val() ? 'false' : 'true';
						},
					}
				}
			},
			description: {
				maxlength: formCode.config.fields.description.maxlength,
			},
		},
		submitHandler: function(form) {
			$('#loading-modal').modal('show');
			form.submit();
		}
	});

	$(".gl-account").each(function () {
		var input = $(this);

		input.rules('add', {
			required: true,
			normalizer: function(value) {
				if (value.trim() == '') {
					input.val('');
					return '';
				}
				return value;
			},
			remote: {
				url: '{{ page.jsonApiUrl('mgl/validate/mhm/code/') }}',
				type: "get",
				data: {
					jqv: 'true',
					code: function() {
						return input.val();
					},
				}
			}
		});
	});

/* =============================================================
	Form Functions
============================================================= */

})
