{#
	var                    Description / Instance of
	-------------------------------------------------
	page                   ProcessWire\Page
	kim                    module Kim
#}

$(function() {
	var form = $('#kit-component-form');
	var input_component = form.find('input[name=component]');
	var modal_ajax = $('#ajax-modal');

/* =============================================================
	Unsaved Fields Alert
============================================================= */
	origForm = form.serialize();

	$("body").on("click", "a:not(#kit-component-form .form-link, #ajax-modal a, [data-target=#ajax-modal])", function(e) {
		if (form.serialize() !== origForm) {
			e.preventDefault();
			var a = $(this);
			var href = a.attr('href');

			swal_unsaved(function(result) {
				if (result.value) { // If OL to save was clicked
					form.find('button[type=submit]').click();
				} else if (result.dismiss === Swal.DismissReason.cancel) {
					// Send HTTP GET Request to remove Record Lock
					$.get('{{ page.url }}', function() {
						window.location.href = href;
					});
				}
			});
		}
	});

/* =============================================================
	Validation Functions
============================================================= */
	jQuery.validator.addMethod("suppliedby", function(value, element) {
		return validate_suppliedby(value);
	}, "Please select a valid Vendor Supplied");

	jQuery.validator.addMethod("usagetag", function(value, element) {
		return validate_usagetag(value);
	}, "Please select a valid Usage Tag");

	jQuery.validator.addMethod("freegoods", function(value, element) {
		return validate_freegoods(value);
	}, "Please select a valid Free Goods Value");

	var validator = form.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		rules: {
			component: {
				required: true,
				remote: {
					url: '{{ page.jsonapiURL('inv/validate/itemid/') }}',
					type: "get",
					data: {
						itemID: function() {
							return $('input[name=component]').val()
						},
						jqv: 'true'
					}
				}
			},
			usage: {
				required: true,
				number: true
			},
			suppliedby: {
				required: true,
				suppliedby: true
			},
			{% if kim.configs.kt.usageorfreeusage() %}
				usagetag: {
					required: false,
					usagetag: true
				}
			{% else %}
				freegoods: {
					required: true,
					freegoods: true
				}
			{% endif %}
		},
		messages: {

		},
		submitHandler: function(form) {
			form.submit();
		}
	});

	function validate_suppliedby(val) {
		var options = {{ kim.component.options_component_suppliedby()|json_encode()|raw }};
		return options.hasOwnProperty(val);
	}

	function validate_usagetag(val) {
		var options = {{ kim.component.options_component_usagetag()|json_encode()|raw }};
		if (val == '') {
			return true;
		}
		return options.hasOwnProperty(val);
	}

	function validate_freegoods(val) {
		var options = ['Y', 'N'];
		return options.contains(val);
	}

/* =============================================================
	Event Functions
============================================================= */
	$("body").on('change', 'input[name=component]', function(e) {
		var input = $(this);
		if (validator.element('#'+input.attr('id'))) {
			fetch_jsonapi_item($(this).val(), function(obj) {
				if (obj) {
					var ajaxfields_str = input.data('ajaxfields');
					var ajaxfields = ajaxfields_str.split(',');
					ajaxfields.forEach((field , i) => {
						$('.'+input.attr('name')+'-'+field).text(obj[field]);
					});
				}
			});
		}
	});

	$("body").on('change', 'input[name=usage]', function(e) {
		var input = $(this);
		var usage = parseFloat(input.val());
		input.val(usage.toFixed({{ kim.component.decimal_places_qty() }}));
	});

/* =============================================================
	AJAX Lookup Modal Functions
============================================================= */
	modal_ajax.on('show.bs.modal', function (event) {
		var button = $(event.relatedTarget); // Button that triggered the modal
		var modal = $(this);
		var url = button.data('lookupurl');
		modal.attr('data-input', button.data('input'));

		modal.find('.modal-title').text(button.attr('title'));
		modal.resizeModal('xl');
		modal.find('.modal-body').loadin(url, function() {});
	});

	$("body").on('submit', '#ajax-modal form', function(e) {
		e.preventDefault();
		var form = $(this);
		var query = form.serialize();
		var action = form.attr('action');
		var search = form.find('input[name=q]').val();
		var url = action + '?' + query;
		form.closest('.modal').find('.modal-title').text('Searching for ' + search);
		form.closest('.modal').find('.modal-body').loadin(url, function() {});
	});

	$("body").on('click', '#ajax-modal .paginator-link', function(e) {
		e.preventDefault();
		var href = $(this).attr('href');
		modal_ajax.find('.modal-body').load(href);
	});

	$("body").on('click', '.item-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var modal  = button.closest('.modal');
		var itemID = button.data('itemid');
		input_component.val(itemID).change();
		modal.modal('hide');
	});

/* =============================================================
	AJAX Request Functions
============================================================= */
	function fetch_jsonapi_item(itemID, callback) {
		var url = new URI('{{ page.jsonapiURL('inv/item/') }}');
		url.addQuery('itemID', itemID);
		$.getJSON(url.toString(), function( obj ) {
			callback(obj);
		});
	}

/* =============================================================
	Swal (SweetAlert) Functions
============================================================= */
	function swal_unsaved(callback) {
		swal2.fire({
			title: 'Changes have occurred!',
			text: 'Do you want to save?',
			icon: 'warning',
			showCancelButton: true,
			confirmButtonText: '<i class="fa fa-floppy-o" aria-hidden="true"></i> Yes',
			cancelButtonText: 'No',
		}).then((result) => {
			callback(result);
		});
	}
});
