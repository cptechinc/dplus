{% include 'mvi/vio/form/js/classes.js.twig' %}

$(function() {
	var modalAjax = $('#ajax-modal');
	var formVio   = VioForm.getInstance();
	var server    = VioRequests.getInstance();
	var alert     = VioAlerts.getInstance();

/* =============================================================
	Event Functions
============================================================= */
	$("body").on('change', 'input[name=userID]', function(e) {
		var input = $(this);

		server.validateUserid(input.val(), function(exists) {
			$('#loading-modal').modal('show');
			var url = URI('{{ input.url() }}');
			url.addQuery('userID', input.val());
			window.location.href = url.toString();
		});
	});

/* =============================================================
	Unsaved Fields Alert
============================================================= */
	origForm = formVio.form.serialize();

	$("body").on("click", "a:not(#ajax-modal a, [data-target=#ajax-modal])", function(e) {
		if (formVio.form.serialize() !== origForm || formVio.form.data('new') === true) {
			e.preventDefault();
			var a = $(this);
			var href = a.attr('href');

			alert.unsavedChanges(function(saveChanges) {
				if (saveChanges) { // If OL to save was clicked
					formVio.form.find('button[type=submit]').click();
				} else {
					// Send HTTP GET Request to remove Record Lock
					$.get('{{ input.url() }}', function() {
						window.location.href = href;
					});
				}
			});
		}
	});

/* =============================================================
	Lookup Modal Functions
============================================================= */
	modalAjax.on('show.bs.modal', function (event) {
		var button = $(event.relatedTarget); // Button that triggered the modal
		var modal  = $(this);
		var url    = button.data('lookupurl');

		modal.attr('data-input', button.data('input'));
		modal.find('.modal-title').text(button.attr('title'));
		modal.resizeModal('xl');
		modal.find('.modal-body').loadin(url, function() {});
	});

	$("body").on('click', '.user-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var userID = button.data('userid');
		var modal  = button.closest('.modal');
		var input  = $(modal.attr('data-input'));
		input.val(userID).change();
		modal.modal('hide');
	});

	$("body").on('submit', '#ajax-modal form', function(e) {
		e.preventDefault();
		var form = $(this);
		var query  = form.serialize();
		var action = form.attr('action');
		var search = form.find('input[name=q]').val();
		var url = action + '?' + query;
		form.closest('.modal').find('.modal-title').text('Searching for ' + search);
		form.closest('.modal').find('.modal-body').loadin(url, function() {});
	});

	$("body").on('click', '#ajax-modal .paginator-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var href   = button.attr('href');
		var modal  = button.closest('.modal');
		modal.find('.modal-body').load(href);
	});

/* =============================================================
	Validation Functions
============================================================= */
	var validator = formVio.form.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		rules: {
			userID: {
				required: true,
				remote: {
					url: '{{ page.jsonapiURL('msa/validate/userid/') }}',
					type: "get",
					data: {
						jqv: true,
						loginID: function() {
							return $('#userID').val();
						}
					}
				}
			},
		},
		messages: {
			userID: "Use a valid User ID",
		},
		submitHandler: function(form) {
			form.submit();
		}
	});
});
