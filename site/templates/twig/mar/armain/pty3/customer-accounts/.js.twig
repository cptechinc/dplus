{% include 'mar/armain/pty3/customer-accounts/js/classes.js.twig' %}

$(function() {
	var ajaxModal = $('#ajax-modal');
	var server   = Pty3Requests.getInstance();
	var alert    = AccountAlerts.getInstance();
	var formAccount = AccountForm.getInstance();

	var uri = URI();
	var queryData = uri.query(true);

	if (queryData.hasOwnProperty('focus') && queryData.focus != 'new') {
		$('.account[data-accountnbr="' + queryData.focus + '"]').addClass('highlight');
		// $('html, body').animate({scrollTop: $('.account[data-accountnbr="' + queryData.focus + '"]').offset().top,},700,'linear');
	}

/* =============================================================
	Event Functions
	hide, unsaved changes events is handled by scripts/account-tables/modal-events.js
============================================================= */
	$('#edit-account-modal').on('show.bs.modal', function (event) {
		var button = $(event.relatedTarget); // Button that triggered the modal
		var modal  = $(this);
		var accountnbr = button.data('accountnbr');
		modal.find('.modal-title').text('Add Account');
		formAccount.updateInputsFromJson(button.data('json'));
		modal.find('a.delete_button').removeClass('show');
		
		if (accountnbr) {
			modal.find('.modal-title').text('Edit Account');
			var code = ['{{ input.get.string('custID') }}', accountnbr].join('|');
			var lockUrl = URI(config.ajax.urls.locker.lock);
			lockUrl.setQuery('function', 'pty3');
			lockUrl.setQuery('key', code);

			var ajax = new AjaxRequest(lockUrl.toString());
			ajax.request(function(canEdit) {
				if (canEdit === false) {
					alert.recordIsLocked(function() {
						modal.modal('hide');
					});
					return false;
				}
				var deleteLink = modal.find('a.delete_button');
				var deleteUrl  = URI(deleteLink.attr('href'));
				deleteUrl.setQuery('accountnbr', accountnbr);
				deleteLink.attr('href', deleteUrl.toString());
				deleteLink.addClass('show');
			});
		}
		
	});

	$('#edit-account-modal').on('shown.bs.modal', function (event) {
		var button = $(event.relatedTarget); // Button that triggered the modal
		var modal  = $(this);
		var accountnbr   = button.data('accountnbr');

		if (accountnbr) {
			formAccount.inputs.name.focus();
		} else {
			formAccount.inputs.accountnbr.focus();
		}
		formAccount.form.attr('data-serialized', formAccount.form.serialize());
	});

	$("#edit-account-modal").on('hide.bs.modal', function (e) {
		var modal = $(this);
		var form = modal.find('form');
		var originalValues = form.attr('data-serialized');

		if (originalValues) {
			if (originalValues != form.serialize()) {
				e.preventDefault();

				alert.unsavedChanges(function(confirmSave) {
					if (confirmSave) {
						form.submit();
						return true;
					}
					form.attr('data-serialized', '');
					modal.modal('hide');
				});
			}
		}
	});

	$('#edit-account-modal').on('hidden.bs.modal', function (event) {
		var modal = $(this);
		var button = $(event.relatedTarget); // Button that triggered the modal
		var accountnbr = modal.find('input[name=accountnbr]').val().toString();
		var custid = formAccount.inputs.custid.val();

		$('#code-table-alert').hide();
		$('.bg-success').removeClass('bg-success text-white');
		$('.highlight').removeClass('highlight');
		$('.account[data-accountnbr="'+accountnbr+'"]').addClass('highlight');
		
		var unlockUrl = URI(config.ajax.urls.locker.delete);
		unlockUrl.setQuery('function', 'pty3');
		unlockUrl.setQuery('key', [custid, accountnbr].join('|'));

		var ajax = new AjaxRequest(unlockUrl.toString());
		ajax.request(function(isUnlocked) {

		});
	});

	$("body").on("change", "input[name=accountnbr]", function(e) {
		var input = $(this);
		var accountnbr = input.val();
		var custid = formAccount.inputs.custid.val();

		server.getAccount(custid, accountnbr, function(pty3Account) {
			if (pty3Account) {
				alert.accountExists(accountnbr, function(editAccount) {
					if (editAccount) {
						var modal = input.closest('.modal');

						if (editAccount) {
							var code = [pty3Account.custid, accountnbr].join('|');
							var lockUrl = URI(config.ajax.urls.locker.lock);
							lockUrl.setQuery('function', 'pty3');
							lockUrl.setQuery('key', code);

							var ajax = new AjaxRequest(lockUrl.toString());
							ajax.request(function(canEdit) {
								if (canEdit === false) {
									alert.recordIsLocked(function() {
										modal.modal('hide');
									});
								} else {
									modal.find('.modal-title').text('Edit Account');
									formAccount.updateInputsFromJson(pty3Account);
								}
							});
						} else {
							modal.modal('hide');
						}
					}
				});
			}
		});
	});

	$("body").on("focusin", "#account-form input:not(input[name=accountnbr])", function(e) {
		if (formAccount.inputs.accountnbr.val() == '') {
			formAccount.inputs.accountnbr.focus();
		}
	});

	$("body").on("change", "input[name=country]", function(e) {
		var input = $(this);
		var code = input.val();

		server.getCocomCode(code, function(country) {
			if (country) {
				input.closest('.form-group').find('.description').text(country.description);
			}
		});
	});

	$("body").on("change", "input[name=state]", function(e) {
		var input = $(this);
		var code = input.val();

		// server.getStateCode(code, function(state) {
		// 	if (state) {
		// 		input.closest('.form-group').find('.description').text(state.name);
		// 	}
		// });
	});

	$("body").on("change", "select[name=international]", function(e) {
		var input = $(this);
		$('.phones-group').removeClass('show');

		if (input.val() === 'Y') { // Yes it is international
			$('.phones-intl').addClass('show');
		}

		if (input.val() === 'N') {
			$('.phones-us').addClass('show');
			
		}
	});

	$("body").on("change", "input[name=custid]", function(e) {
		var input = $(this);
		var descriptionElement = input.closest('.input-parent').find('.ajax-description');
		descriptionElement.text('');

		server.getCustomer(input.val(), function(customer) {
			if (customer) {
				descriptionElement.text(customer.name);
			}
		});
	});


/* =============================================================
	Validation Functions
============================================================= */
	var validator = formAccount.form.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			error.insertAfter(element).addClass('invalid-feedback');
		},
		rules: {
			custid: {
				required: true,
				remote: {
					url: '{{ page.jsonApiUrl('mar/validate/custid/') }}',
					type: "get",
					data: {
						custID: function() {
							return formAccount.inputs.custid.val();
						},
					}
				}
			},
			accountnbr: {
				required: true,
				maxlength: formAccount.config.fields.accountnbr.maxlength,
				remote: {
					url: '{{ page.jsonApiUrl('mar/validate/pty3/account/') }}',
					type: "get",
					data: {
						jqv: 'true',
						custid: function() {
							return formAccount.inputs.custid.val();
						},
						new: function() {
							return formAccount.inputs.form.attr('data-accountnbr') == $('#accountnbr').val() ? 'false' : 'true';
						},
					}
				}
			},
			name: {
				maxlength: formAccount.config.fields.name.maxlength,
			},
			country: {
				required: false,
				remote: {
					url: '{{ page.jsonApiUrl('mar/validate/cocom/code/') }}',
					type: "get",
					data: {
						jqv: 'true',
						code: function() {
							return formAccount.inputs.country.val();
						},
					}
				}
			},
			state: {
				required: false,
				remote: {
					url: '{{ page.jsonApiUrl('misc/validate/state-codes/code/') }}',
					type: "get",
					data: {
						jqv: 'true',
						code: function() {
							return formAccount.inputs.state.val();
						},
					}
				}
			},
		},
		submitHandler: function(form) {
			var formAccount = AccountForm.getInstance();
			var server   = Pty3Requests.getInstance();
			var accountnbr = formAccount.inputs.accountnbr.val();
			var custid      = formAccount.inputs.custid.val();

			form.submit();
		}
	});
})
