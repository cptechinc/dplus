{% include 'mar/armain/cmm/edit/js/classes.js.twig' %}

$(function() {
	var ajaxModal = $('#ajax-modal');
	var server   = CmmRequests.getInstance();
	var alert    = CmmAlerts.getInstance();
	var formCode = CmmForm.getInstance();

/* =============================================================
	Event Functions
============================================================= */
	{% include 'mar/armain/cmm/edit/js/events.js.twig' %}

/* =============================================================
	Unsaved Fields Alert
============================================================= */
	origForm = formCode.form.serialize();

	$("body").on("click", "a:not(#cmm-form .form_button, #ajax-modal a, .swal2-modal a, .bootstrap-select a)", function(e) {
		if (formCode.form.serialize() !== origForm) {
			e.preventDefault();
			var a = $(this);
			var href = a.attr('href');

			alert.unsavedChanges(function(save) {
				if (save) {
					formCode.form.find('button[type=submit]').click();
				} else {
					var uri = URI();
					uri.setQuery('id', '');

					$.get(uri.toString(), function() {
						window.location.href = href;
					});
				}
			});
		}
	});

/* =============================================================
	Lookup Modal Functions
============================================================= */
	ajaxModal.on('show.bs.modal', function (event) {
		var button = $(event.relatedTarget); // Button that triggered the modal
		var modal = $(this);
		modal.attr('data-input', button.data('input'));

		modal.find('.modal-title').text(button.attr('title'));
		modal.resizeModal('xl');
		modal.find('.modal-body').loadin(button.data('lookupurl'), function() {});
	});

	$("body").on('click', '.code-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var modal  = button.closest('.modal');
		var input  = $(modal.attr('data-input'));
		input.val(button.data('code'));
		if (input.data('jqv')) {
			input.change();
		}
		modal.modal('hide');
	});

	$("body").on('click', '.country-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var modal  = button.closest('.modal');
		var input  = $(modal.attr('data-input'));
		input.val(button.data('code'));
		if (input.data('jqv')) {
			input.change();
		}
		modal.modal('hide');
	});

	$("body").on('click', '.whse-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var modal  = button.closest('.modal');
		var input  = $(modal.attr('data-input'));
		input.val(button.data('whseid'));
		if (input.data('jqv')) {
			input.change();
		}
		modal.modal('hide');
	});

	$("body").on('submit', '#ajax-modal form', function(e) {
		e.preventDefault();
		var form = $(this);
		var query = form.serialize();
		var action = form.attr('action');
		var search = form.find('input[name=q]').val();
		var url = action + '?' + query;
		form.closest('.modal').find('.modal-title').text('Searching for ' + search);
		form.closest('.modal').find('.modal-body').loadin(url, function() {});
	});

	$("body").on('click', '#ajax-modal .paginator-link', function(e) {
		e.preventDefault();
		var button = $(this);
		var modal  = button.closest('.modal');
		modal.find('.modal-body').load(button.attr('href'));
	});

/* =============================================================
	Validation Functions
============================================================= */
	var validator = formCode.form.validate({
		errorClass: "is-invalid",
		validClass: "is-valid",
		errorPlacement: function(error, element) {
			if (element.hasParent('.input-parent')) {
				element = element.closest('.input-parent');
			}
			error.insertAfter(element).addClass('invalid-feedback');
		},
		rules: {
			id: {
				required: true,
				maxlength: formCode.config.fields.custid.maxlength,
				remote: {
					url: '{{ page.jsonApiUrl('mar/validate/cmm/id/') }}',
					type: "get",
					data: {
						jqv: 'true',
						new: function() {
							return formCode.inputs.form.attr('data-id') == $('#id').val() ? 'false' : 'true';
						},
					}
				}
			},
			name: {
				maxlength: formCode.config.fields.name.maxlength,
			},
			country: {
				required: false,
				maxlength: formCode.config.fields.country.maxlength,
				remote: {
					url: '{{ page.jsonApiUrl('mar/validate/cocom/code/') }}',
					type: "get",
					data: {
						jqv: 'true',
						code: function() {
							return $('#country').val();
						}
					}
				}
			},
		},
		submitHandler: function(form) {
			form.submit();
		}
	});

});
